/*
 * kinematics.h
 *
 *  Created on: May 22, 2025
 *      Author: PANKAJA
 */

#ifndef INC_KINEMATICS_H_
#define INC_KINEMATICS_H_

#include <stdint.h>

// Robot physical parameters
#define WHEEL_RADIUS        0.078f   // Wheel radius in meters (78 mm)
#define L1                  0.165f   // Distance from center to wheel along x-axis
#define L2                  0.1275f   // Distance from center to wheel along y-axis

// Control frequency for the PID loop
#define CONTROL_FREQUENCY   100     // 100Hz control loop (10ms period)
#define CONTROL_INTERVAL 0.01

// Robot kinematics structure to hold state
typedef struct {
    // Robot velocity state
    float vx;          // Linear velocity in x direction (m/s)
    float vy;          // Linear velocity in y direction (m/s)
    float omega_z;     // Angular velocity around z axis (rad/s)

    // Wheel angular velocities (rad/s)
    float omega1;      // Forward left wheel angular velocity
    float omega2;      // Forward right wheel angular velocity
    float omega3;      // Rear left wheel angular velocity
    float omega4;      // Rear right wheel angular velocity

    // Wheel desired PWM values
    float pwm1;        // Forward left wheel PWM
    float pwm2;        // Forward right wheel PWM
    float pwm3;        // Rear left wheel PWM
    float pwm4;        // Rear right wheel PWM

    // PID control parameters and variables
    float kp;          // Proportional gain
    float ki;          // Integral gain
    float kd;          // Derivative gain

    // Velocity setpoints
    float vx_setpoint;
    float vy_setpoint;
    float omega_z_setpoint;

    // Update flag
    uint8_t update_required;
} RobotKinematics_t;

// Function prototypes
void initKinematics(void);
void updateRobotVelocityFromWheels(void);
void calculateWheelVelocitiesFromRobot(void);
void updateMotorPWM(void);
void setRobotVelocity(float vx, float vy, float omega_z);

// External variable declaration
extern RobotKinematics_t robot;

#endif /* INC_KINEMATICS_H_ */
