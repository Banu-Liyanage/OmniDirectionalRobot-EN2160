
Nucleo-Motor-Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000056b8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  08005888  08005888  00006888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005910  08005910  000070c0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08005910  08005910  00006910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005918  08005918  000070c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005918  08005918  00006918  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800591c  0800591c  0000691c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000c0  20000000  08005920  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004ec  200000c0  080059e0  000070c0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200005ac  080059e0  000075ac  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000070c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001089e  00000000  00000000  000070f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002821  00000000  00000000  0001798e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ee8  00000000  00000000  0001a1b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000b9d  00000000  00000000  0001b098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003ca3  00000000  00000000  0001bc35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00012d3f  00000000  00000000  0001f8d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000de196  00000000  00000000  00032617  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001107ad  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000042ec  00000000  00000000  001107f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000e3  00000000  00000000  00114adc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000c0 	.word	0x200000c0
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08005870 	.word	0x08005870

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000c4 	.word	0x200000c4
 800020c:	08005870 	.word	0x08005870

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b988 	b.w	80005d8 <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	468e      	mov	lr, r1
 80002e8:	4604      	mov	r4, r0
 80002ea:	4688      	mov	r8, r1
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	d14a      	bne.n	8000386 <__udivmoddi4+0xa6>
 80002f0:	428a      	cmp	r2, r1
 80002f2:	4617      	mov	r7, r2
 80002f4:	d962      	bls.n	80003bc <__udivmoddi4+0xdc>
 80002f6:	fab2 f682 	clz	r6, r2
 80002fa:	b14e      	cbz	r6, 8000310 <__udivmoddi4+0x30>
 80002fc:	f1c6 0320 	rsb	r3, r6, #32
 8000300:	fa01 f806 	lsl.w	r8, r1, r6
 8000304:	fa20 f303 	lsr.w	r3, r0, r3
 8000308:	40b7      	lsls	r7, r6
 800030a:	ea43 0808 	orr.w	r8, r3, r8
 800030e:	40b4      	lsls	r4, r6
 8000310:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000314:	fa1f fc87 	uxth.w	ip, r7
 8000318:	fbb8 f1fe 	udiv	r1, r8, lr
 800031c:	0c23      	lsrs	r3, r4, #16
 800031e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000322:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000326:	fb01 f20c 	mul.w	r2, r1, ip
 800032a:	429a      	cmp	r2, r3
 800032c:	d909      	bls.n	8000342 <__udivmoddi4+0x62>
 800032e:	18fb      	adds	r3, r7, r3
 8000330:	f101 30ff 	add.w	r0, r1, #4294967295
 8000334:	f080 80ea 	bcs.w	800050c <__udivmoddi4+0x22c>
 8000338:	429a      	cmp	r2, r3
 800033a:	f240 80e7 	bls.w	800050c <__udivmoddi4+0x22c>
 800033e:	3902      	subs	r1, #2
 8000340:	443b      	add	r3, r7
 8000342:	1a9a      	subs	r2, r3, r2
 8000344:	b2a3      	uxth	r3, r4
 8000346:	fbb2 f0fe 	udiv	r0, r2, lr
 800034a:	fb0e 2210 	mls	r2, lr, r0, r2
 800034e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000352:	fb00 fc0c 	mul.w	ip, r0, ip
 8000356:	459c      	cmp	ip, r3
 8000358:	d909      	bls.n	800036e <__udivmoddi4+0x8e>
 800035a:	18fb      	adds	r3, r7, r3
 800035c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000360:	f080 80d6 	bcs.w	8000510 <__udivmoddi4+0x230>
 8000364:	459c      	cmp	ip, r3
 8000366:	f240 80d3 	bls.w	8000510 <__udivmoddi4+0x230>
 800036a:	443b      	add	r3, r7
 800036c:	3802      	subs	r0, #2
 800036e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000372:	eba3 030c 	sub.w	r3, r3, ip
 8000376:	2100      	movs	r1, #0
 8000378:	b11d      	cbz	r5, 8000382 <__udivmoddi4+0xa2>
 800037a:	40f3      	lsrs	r3, r6
 800037c:	2200      	movs	r2, #0
 800037e:	e9c5 3200 	strd	r3, r2, [r5]
 8000382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000386:	428b      	cmp	r3, r1
 8000388:	d905      	bls.n	8000396 <__udivmoddi4+0xb6>
 800038a:	b10d      	cbz	r5, 8000390 <__udivmoddi4+0xb0>
 800038c:	e9c5 0100 	strd	r0, r1, [r5]
 8000390:	2100      	movs	r1, #0
 8000392:	4608      	mov	r0, r1
 8000394:	e7f5      	b.n	8000382 <__udivmoddi4+0xa2>
 8000396:	fab3 f183 	clz	r1, r3
 800039a:	2900      	cmp	r1, #0
 800039c:	d146      	bne.n	800042c <__udivmoddi4+0x14c>
 800039e:	4573      	cmp	r3, lr
 80003a0:	d302      	bcc.n	80003a8 <__udivmoddi4+0xc8>
 80003a2:	4282      	cmp	r2, r0
 80003a4:	f200 8105 	bhi.w	80005b2 <__udivmoddi4+0x2d2>
 80003a8:	1a84      	subs	r4, r0, r2
 80003aa:	eb6e 0203 	sbc.w	r2, lr, r3
 80003ae:	2001      	movs	r0, #1
 80003b0:	4690      	mov	r8, r2
 80003b2:	2d00      	cmp	r5, #0
 80003b4:	d0e5      	beq.n	8000382 <__udivmoddi4+0xa2>
 80003b6:	e9c5 4800 	strd	r4, r8, [r5]
 80003ba:	e7e2      	b.n	8000382 <__udivmoddi4+0xa2>
 80003bc:	2a00      	cmp	r2, #0
 80003be:	f000 8090 	beq.w	80004e2 <__udivmoddi4+0x202>
 80003c2:	fab2 f682 	clz	r6, r2
 80003c6:	2e00      	cmp	r6, #0
 80003c8:	f040 80a4 	bne.w	8000514 <__udivmoddi4+0x234>
 80003cc:	1a8a      	subs	r2, r1, r2
 80003ce:	0c03      	lsrs	r3, r0, #16
 80003d0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003d4:	b280      	uxth	r0, r0
 80003d6:	b2bc      	uxth	r4, r7
 80003d8:	2101      	movs	r1, #1
 80003da:	fbb2 fcfe 	udiv	ip, r2, lr
 80003de:	fb0e 221c 	mls	r2, lr, ip, r2
 80003e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ea:	429a      	cmp	r2, r3
 80003ec:	d907      	bls.n	80003fe <__udivmoddi4+0x11e>
 80003ee:	18fb      	adds	r3, r7, r3
 80003f0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003f4:	d202      	bcs.n	80003fc <__udivmoddi4+0x11c>
 80003f6:	429a      	cmp	r2, r3
 80003f8:	f200 80e0 	bhi.w	80005bc <__udivmoddi4+0x2dc>
 80003fc:	46c4      	mov	ip, r8
 80003fe:	1a9b      	subs	r3, r3, r2
 8000400:	fbb3 f2fe 	udiv	r2, r3, lr
 8000404:	fb0e 3312 	mls	r3, lr, r2, r3
 8000408:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800040c:	fb02 f404 	mul.w	r4, r2, r4
 8000410:	429c      	cmp	r4, r3
 8000412:	d907      	bls.n	8000424 <__udivmoddi4+0x144>
 8000414:	18fb      	adds	r3, r7, r3
 8000416:	f102 30ff 	add.w	r0, r2, #4294967295
 800041a:	d202      	bcs.n	8000422 <__udivmoddi4+0x142>
 800041c:	429c      	cmp	r4, r3
 800041e:	f200 80ca 	bhi.w	80005b6 <__udivmoddi4+0x2d6>
 8000422:	4602      	mov	r2, r0
 8000424:	1b1b      	subs	r3, r3, r4
 8000426:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800042a:	e7a5      	b.n	8000378 <__udivmoddi4+0x98>
 800042c:	f1c1 0620 	rsb	r6, r1, #32
 8000430:	408b      	lsls	r3, r1
 8000432:	fa22 f706 	lsr.w	r7, r2, r6
 8000436:	431f      	orrs	r7, r3
 8000438:	fa0e f401 	lsl.w	r4, lr, r1
 800043c:	fa20 f306 	lsr.w	r3, r0, r6
 8000440:	fa2e fe06 	lsr.w	lr, lr, r6
 8000444:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000448:	4323      	orrs	r3, r4
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	fa1f fc87 	uxth.w	ip, r7
 8000452:	fbbe f0f9 	udiv	r0, lr, r9
 8000456:	0c1c      	lsrs	r4, r3, #16
 8000458:	fb09 ee10 	mls	lr, r9, r0, lr
 800045c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000460:	fb00 fe0c 	mul.w	lr, r0, ip
 8000464:	45a6      	cmp	lr, r4
 8000466:	fa02 f201 	lsl.w	r2, r2, r1
 800046a:	d909      	bls.n	8000480 <__udivmoddi4+0x1a0>
 800046c:	193c      	adds	r4, r7, r4
 800046e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000472:	f080 809c 	bcs.w	80005ae <__udivmoddi4+0x2ce>
 8000476:	45a6      	cmp	lr, r4
 8000478:	f240 8099 	bls.w	80005ae <__udivmoddi4+0x2ce>
 800047c:	3802      	subs	r0, #2
 800047e:	443c      	add	r4, r7
 8000480:	eba4 040e 	sub.w	r4, r4, lr
 8000484:	fa1f fe83 	uxth.w	lr, r3
 8000488:	fbb4 f3f9 	udiv	r3, r4, r9
 800048c:	fb09 4413 	mls	r4, r9, r3, r4
 8000490:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000494:	fb03 fc0c 	mul.w	ip, r3, ip
 8000498:	45a4      	cmp	ip, r4
 800049a:	d908      	bls.n	80004ae <__udivmoddi4+0x1ce>
 800049c:	193c      	adds	r4, r7, r4
 800049e:	f103 3eff 	add.w	lr, r3, #4294967295
 80004a2:	f080 8082 	bcs.w	80005aa <__udivmoddi4+0x2ca>
 80004a6:	45a4      	cmp	ip, r4
 80004a8:	d97f      	bls.n	80005aa <__udivmoddi4+0x2ca>
 80004aa:	3b02      	subs	r3, #2
 80004ac:	443c      	add	r4, r7
 80004ae:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80004b2:	eba4 040c 	sub.w	r4, r4, ip
 80004b6:	fba0 ec02 	umull	lr, ip, r0, r2
 80004ba:	4564      	cmp	r4, ip
 80004bc:	4673      	mov	r3, lr
 80004be:	46e1      	mov	r9, ip
 80004c0:	d362      	bcc.n	8000588 <__udivmoddi4+0x2a8>
 80004c2:	d05f      	beq.n	8000584 <__udivmoddi4+0x2a4>
 80004c4:	b15d      	cbz	r5, 80004de <__udivmoddi4+0x1fe>
 80004c6:	ebb8 0203 	subs.w	r2, r8, r3
 80004ca:	eb64 0409 	sbc.w	r4, r4, r9
 80004ce:	fa04 f606 	lsl.w	r6, r4, r6
 80004d2:	fa22 f301 	lsr.w	r3, r2, r1
 80004d6:	431e      	orrs	r6, r3
 80004d8:	40cc      	lsrs	r4, r1
 80004da:	e9c5 6400 	strd	r6, r4, [r5]
 80004de:	2100      	movs	r1, #0
 80004e0:	e74f      	b.n	8000382 <__udivmoddi4+0xa2>
 80004e2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004e6:	0c01      	lsrs	r1, r0, #16
 80004e8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004ec:	b280      	uxth	r0, r0
 80004ee:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004f2:	463b      	mov	r3, r7
 80004f4:	4638      	mov	r0, r7
 80004f6:	463c      	mov	r4, r7
 80004f8:	46b8      	mov	r8, r7
 80004fa:	46be      	mov	lr, r7
 80004fc:	2620      	movs	r6, #32
 80004fe:	fbb1 f1f7 	udiv	r1, r1, r7
 8000502:	eba2 0208 	sub.w	r2, r2, r8
 8000506:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800050a:	e766      	b.n	80003da <__udivmoddi4+0xfa>
 800050c:	4601      	mov	r1, r0
 800050e:	e718      	b.n	8000342 <__udivmoddi4+0x62>
 8000510:	4610      	mov	r0, r2
 8000512:	e72c      	b.n	800036e <__udivmoddi4+0x8e>
 8000514:	f1c6 0220 	rsb	r2, r6, #32
 8000518:	fa2e f302 	lsr.w	r3, lr, r2
 800051c:	40b7      	lsls	r7, r6
 800051e:	40b1      	lsls	r1, r6
 8000520:	fa20 f202 	lsr.w	r2, r0, r2
 8000524:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000528:	430a      	orrs	r2, r1
 800052a:	fbb3 f8fe 	udiv	r8, r3, lr
 800052e:	b2bc      	uxth	r4, r7
 8000530:	fb0e 3318 	mls	r3, lr, r8, r3
 8000534:	0c11      	lsrs	r1, r2, #16
 8000536:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800053a:	fb08 f904 	mul.w	r9, r8, r4
 800053e:	40b0      	lsls	r0, r6
 8000540:	4589      	cmp	r9, r1
 8000542:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000546:	b280      	uxth	r0, r0
 8000548:	d93e      	bls.n	80005c8 <__udivmoddi4+0x2e8>
 800054a:	1879      	adds	r1, r7, r1
 800054c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000550:	d201      	bcs.n	8000556 <__udivmoddi4+0x276>
 8000552:	4589      	cmp	r9, r1
 8000554:	d81f      	bhi.n	8000596 <__udivmoddi4+0x2b6>
 8000556:	eba1 0109 	sub.w	r1, r1, r9
 800055a:	fbb1 f9fe 	udiv	r9, r1, lr
 800055e:	fb09 f804 	mul.w	r8, r9, r4
 8000562:	fb0e 1119 	mls	r1, lr, r9, r1
 8000566:	b292      	uxth	r2, r2
 8000568:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800056c:	4542      	cmp	r2, r8
 800056e:	d229      	bcs.n	80005c4 <__udivmoddi4+0x2e4>
 8000570:	18ba      	adds	r2, r7, r2
 8000572:	f109 31ff 	add.w	r1, r9, #4294967295
 8000576:	d2c4      	bcs.n	8000502 <__udivmoddi4+0x222>
 8000578:	4542      	cmp	r2, r8
 800057a:	d2c2      	bcs.n	8000502 <__udivmoddi4+0x222>
 800057c:	f1a9 0102 	sub.w	r1, r9, #2
 8000580:	443a      	add	r2, r7
 8000582:	e7be      	b.n	8000502 <__udivmoddi4+0x222>
 8000584:	45f0      	cmp	r8, lr
 8000586:	d29d      	bcs.n	80004c4 <__udivmoddi4+0x1e4>
 8000588:	ebbe 0302 	subs.w	r3, lr, r2
 800058c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000590:	3801      	subs	r0, #1
 8000592:	46e1      	mov	r9, ip
 8000594:	e796      	b.n	80004c4 <__udivmoddi4+0x1e4>
 8000596:	eba7 0909 	sub.w	r9, r7, r9
 800059a:	4449      	add	r1, r9
 800059c:	f1a8 0c02 	sub.w	ip, r8, #2
 80005a0:	fbb1 f9fe 	udiv	r9, r1, lr
 80005a4:	fb09 f804 	mul.w	r8, r9, r4
 80005a8:	e7db      	b.n	8000562 <__udivmoddi4+0x282>
 80005aa:	4673      	mov	r3, lr
 80005ac:	e77f      	b.n	80004ae <__udivmoddi4+0x1ce>
 80005ae:	4650      	mov	r0, sl
 80005b0:	e766      	b.n	8000480 <__udivmoddi4+0x1a0>
 80005b2:	4608      	mov	r0, r1
 80005b4:	e6fd      	b.n	80003b2 <__udivmoddi4+0xd2>
 80005b6:	443b      	add	r3, r7
 80005b8:	3a02      	subs	r2, #2
 80005ba:	e733      	b.n	8000424 <__udivmoddi4+0x144>
 80005bc:	f1ac 0c02 	sub.w	ip, ip, #2
 80005c0:	443b      	add	r3, r7
 80005c2:	e71c      	b.n	80003fe <__udivmoddi4+0x11e>
 80005c4:	4649      	mov	r1, r9
 80005c6:	e79c      	b.n	8000502 <__udivmoddi4+0x222>
 80005c8:	eba1 0109 	sub.w	r1, r1, r9
 80005cc:	46c4      	mov	ip, r8
 80005ce:	fbb1 f9fe 	udiv	r9, r1, lr
 80005d2:	fb09 f804 	mul.w	r8, r9, r4
 80005d6:	e7c4      	b.n	8000562 <__udivmoddi4+0x282>

080005d8 <__aeabi_idiv0>:
 80005d8:	4770      	bx	lr
 80005da:	bf00      	nop

080005dc <FIRFilter_Init>:

//static float FIR_IMPULSE_RESPONSE[FIR_FILTER_LENGTH] = {0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f};
static float FIR_IMPULSE_RESPONSE[FIR_FILTER_LENGTH] = {0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f};


void FIRFilter_Init(FIRFilter *fir) {
 80005dc:	b480      	push	{r7}
 80005de:	b085      	sub	sp, #20
 80005e0:	af00      	add	r7, sp, #0
 80005e2:	6078      	str	r0, [r7, #4]

	/* Clear filter buffer */
	for (uint8_t n = 0; n < FIR_FILTER_LENGTH; n++) {
 80005e4:	2300      	movs	r3, #0
 80005e6:	73fb      	strb	r3, [r7, #15]
 80005e8:	e009      	b.n	80005fe <FIRFilter_Init+0x22>

		fir->buf[n] = 0.0f;
 80005ea:	7bfb      	ldrb	r3, [r7, #15]
 80005ec:	687a      	ldr	r2, [r7, #4]
 80005ee:	009b      	lsls	r3, r3, #2
 80005f0:	4413      	add	r3, r2
 80005f2:	f04f 0200 	mov.w	r2, #0
 80005f6:	601a      	str	r2, [r3, #0]
	for (uint8_t n = 0; n < FIR_FILTER_LENGTH; n++) {
 80005f8:	7bfb      	ldrb	r3, [r7, #15]
 80005fa:	3301      	adds	r3, #1
 80005fc:	73fb      	strb	r3, [r7, #15]
 80005fe:	7bfb      	ldrb	r3, [r7, #15]
 8000600:	2b13      	cmp	r3, #19
 8000602:	d9f2      	bls.n	80005ea <FIRFilter_Init+0xe>

	}

	/* Reset buffer index */
	fir->bufIndex = 0;
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	2200      	movs	r2, #0
 8000608:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

	/* Clear filter output */
	fir->out = 0.0f;
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	f04f 0200 	mov.w	r2, #0
 8000612:	655a      	str	r2, [r3, #84]	@ 0x54

}
 8000614:	bf00      	nop
 8000616:	3714      	adds	r7, #20
 8000618:	46bd      	mov	sp, r7
 800061a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061e:	4770      	bx	lr

08000620 <FIRFilter_Update>:

float FIRFilter_Update(FIRFilter *fir, float inp) {
 8000620:	b480      	push	{r7}
 8000622:	b085      	sub	sp, #20
 8000624:	af00      	add	r7, sp, #0
 8000626:	6078      	str	r0, [r7, #4]
 8000628:	ed87 0a00 	vstr	s0, [r7]

	/* Store latest sample in buffer */
	fir->buf[fir->bufIndex] = inp;
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8000632:	687a      	ldr	r2, [r7, #4]
 8000634:	009b      	lsls	r3, r3, #2
 8000636:	4413      	add	r3, r2
 8000638:	683a      	ldr	r2, [r7, #0]
 800063a:	601a      	str	r2, [r3, #0]

	/* Increment buffer index and wrap around if necessary */
	fir->bufIndex++;
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8000642:	3301      	adds	r3, #1
 8000644:	b2da      	uxtb	r2, r3
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

	if (fir->bufIndex == FIR_FILTER_LENGTH) {
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8000652:	2b14      	cmp	r3, #20
 8000654:	d103      	bne.n	800065e <FIRFilter_Update+0x3e>

		fir->bufIndex = 0;
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	2200      	movs	r2, #0
 800065a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

	}

	/* Compute new output sample (via convolution) */
	fir->out = 0.0f;
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	f04f 0200 	mov.w	r2, #0
 8000664:	655a      	str	r2, [r3, #84]	@ 0x54

	uint8_t sumIndex = fir->bufIndex;
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800066c:	73fb      	strb	r3, [r7, #15]

	for (uint8_t n = 0; n < FIR_FILTER_LENGTH; n++) {
 800066e:	2300      	movs	r3, #0
 8000670:	73bb      	strb	r3, [r7, #14]
 8000672:	e021      	b.n	80006b8 <FIRFilter_Update+0x98>

		/* Decrement index and wrap if necessary */
		if (sumIndex > 0) {
 8000674:	7bfb      	ldrb	r3, [r7, #15]
 8000676:	2b00      	cmp	r3, #0
 8000678:	d003      	beq.n	8000682 <FIRFilter_Update+0x62>

			sumIndex--;
 800067a:	7bfb      	ldrb	r3, [r7, #15]
 800067c:	3b01      	subs	r3, #1
 800067e:	73fb      	strb	r3, [r7, #15]
 8000680:	e001      	b.n	8000686 <FIRFilter_Update+0x66>

		} else {

			sumIndex = FIR_FILTER_LENGTH - 1;
 8000682:	2313      	movs	r3, #19
 8000684:	73fb      	strb	r3, [r7, #15]

		}

		/* Multiply impulse response with shifted input sample and add to output */
		fir->out += FIR_IMPULSE_RESPONSE[n] * fir->buf[sumIndex];
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	ed93 7a15 	vldr	s14, [r3, #84]	@ 0x54
 800068c:	7bbb      	ldrb	r3, [r7, #14]
 800068e:	4a11      	ldr	r2, [pc, #68]	@ (80006d4 <FIRFilter_Update+0xb4>)
 8000690:	009b      	lsls	r3, r3, #2
 8000692:	4413      	add	r3, r2
 8000694:	edd3 6a00 	vldr	s13, [r3]
 8000698:	7bfb      	ldrb	r3, [r7, #15]
 800069a:	687a      	ldr	r2, [r7, #4]
 800069c:	009b      	lsls	r3, r3, #2
 800069e:	4413      	add	r3, r2
 80006a0:	edd3 7a00 	vldr	s15, [r3]
 80006a4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80006a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	edc3 7a15 	vstr	s15, [r3, #84]	@ 0x54
	for (uint8_t n = 0; n < FIR_FILTER_LENGTH; n++) {
 80006b2:	7bbb      	ldrb	r3, [r7, #14]
 80006b4:	3301      	adds	r3, #1
 80006b6:	73bb      	strb	r3, [r7, #14]
 80006b8:	7bbb      	ldrb	r3, [r7, #14]
 80006ba:	2b13      	cmp	r3, #19
 80006bc:	d9da      	bls.n	8000674 <FIRFilter_Update+0x54>

	}

	/* Return filtered output */
	return fir->out;
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80006c2:	ee07 3a90 	vmov	s15, r3

}
 80006c6:	eeb0 0a67 	vmov.f32	s0, s15
 80006ca:	3714      	adds	r7, #20
 80006cc:	46bd      	mov	sp, r7
 80006ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d2:	4770      	bx	lr
 80006d4:	20000000 	.word	0x20000000

080006d8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80006de:	f000 fef9 	bl	80014d4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80006e2:	f000 f8c5 	bl	8000870 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80006e6:	f000 fa83 	bl	8000bf0 <MX_GPIO_Init>
  MX_DMA_Init();
 80006ea:	f000 fa61 	bl	8000bb0 <MX_DMA_Init>
  MX_USART2_UART_Init();
 80006ee:	f000 fa35 	bl	8000b5c <MX_USART2_UART_Init>
  MX_TIM1_Init();
 80006f2:	f000 f981 	bl	80009f8 <MX_TIM1_Init>
  MX_TIM4_Init();
 80006f6:	f000 f9d7 	bl	8000aa8 <MX_TIM4_Init>
  MX_ADC1_Init();
 80006fa:	f000 f92b 	bl	8000954 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 80006fe:	213c      	movs	r1, #60	@ 0x3c
 8000700:	484d      	ldr	r0, [pc, #308]	@ (8000838 <main+0x160>)
 8000702:	f003 fa85 	bl	8003c10 <HAL_TIM_Encoder_Start>
  HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 8000706:	2100      	movs	r1, #0
 8000708:	484c      	ldr	r0, [pc, #304]	@ (800083c <main+0x164>)
 800070a:	f003 f913 	bl	8003934 <HAL_TIM_PWM_Start>

  //HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf, NUM_SAMPLES);

  resetMotors();
 800070e:	f000 fb77 	bl	8000e00 <resetMotors>

  /* Initialize Serial Oscilloscope */
  SerialOscilloscope_Config_t osc_config = {
 8000712:	4a4b      	ldr	r2, [pc, #300]	@ (8000840 <main+0x168>)
 8000714:	1d3b      	adds	r3, r7, #4
 8000716:	ca07      	ldmia	r2, {r0, r1, r2}
 8000718:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	  .huart = &huart2,
	  .sample_rate_ms = 20,
	  .max_channels = NUM_CHANNELS
  };
  if (SerialOscilloscope_Init(&osc_config) != HAL_OK) {
 800071c:	1d3b      	adds	r3, r7, #4
 800071e:	4618      	mov	r0, r3
 8000720:	f000 fbde 	bl	8000ee0 <SerialOscilloscope_Init>
 8000724:	4603      	mov	r3, r0
 8000726:	2b00      	cmp	r3, #0
 8000728:	d001      	beq.n	800072e <main+0x56>
	  Error_Handler();
 800072a:	f000 faef 	bl	8000d0c <Error_Handler>
  }

  FIRFilter_Init(&currentFilterMovingAverage);
 800072e:	4845      	ldr	r0, [pc, #276]	@ (8000844 <main+0x16c>)
 8000730:	f7ff ff54 	bl	80005dc <FIRFilter_Init>


  HAL_Delay(5000);
 8000734:	f241 3088 	movw	r0, #5000	@ 0x1388
 8000738:	f000 ff3e 	bl	80015b8 <HAL_Delay>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	encoder_counts = (int16_t) TIM1->CNT;
 800073c:	4b42      	ldr	r3, [pc, #264]	@ (8000848 <main+0x170>)
 800073e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000740:	b21a      	sxth	r2, r3
 8000742:	4b42      	ldr	r3, [pc, #264]	@ (800084c <main+0x174>)
 8000744:	801a      	strh	r2, [r3, #0]
	current = getCurrentMilliamps();
 8000746:	f000 fbb3 	bl	8000eb0 <getCurrentMilliamps>
 800074a:	4603      	mov	r3, r0
 800074c:	461a      	mov	r2, r3
 800074e:	4b40      	ldr	r3, [pc, #256]	@ (8000850 <main+0x178>)
 8000750:	801a      	strh	r2, [r3, #0]
	filteredCurrent = FIRFilter_Update(&currentFilterMovingAverage, current);
 8000752:	4b3f      	ldr	r3, [pc, #252]	@ (8000850 <main+0x178>)
 8000754:	881b      	ldrh	r3, [r3, #0]
 8000756:	ee07 3a90 	vmov	s15, r3
 800075a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800075e:	eeb0 0a67 	vmov.f32	s0, s15
 8000762:	4838      	ldr	r0, [pc, #224]	@ (8000844 <main+0x16c>)
 8000764:	f7ff ff5c 	bl	8000620 <FIRFilter_Update>
 8000768:	eef0 7a40 	vmov.f32	s15, s0
 800076c:	4b39      	ldr	r3, [pc, #228]	@ (8000854 <main+0x17c>)
 800076e:	edc3 7a00 	vstr	s15, [r3]
	//filteredCurrent = FIRFilter_Update(&currentFilterMovingAverage, adc_buf[0]);
	//current = analogRead();

	/* Check if it's time to sample */
	if (SerialOscilloscope_IsTimeToSample()) {
 8000772:	f000 fc4b 	bl	800100c <SerialOscilloscope_IsTimeToSample>
 8000776:	4603      	mov	r3, r0
 8000778:	2b00      	cmp	r3, #0
 800077a:	d018      	beq.n	80007ae <main+0xd6>
		/* Read ADC channels */
		/* Convert to signed values if needed */
		data_values[0] = (int16_t)current;
 800077c:	4b34      	ldr	r3, [pc, #208]	@ (8000850 <main+0x178>)
 800077e:	881b      	ldrh	r3, [r3, #0]
 8000780:	b21a      	sxth	r2, r3
 8000782:	4b35      	ldr	r3, [pc, #212]	@ (8000858 <main+0x180>)
 8000784:	801a      	strh	r2, [r3, #0]
		data_values[1] = (int16_t)filteredCurrent;
 8000786:	4b33      	ldr	r3, [pc, #204]	@ (8000854 <main+0x17c>)
 8000788:	edd3 7a00 	vldr	s15, [r3]
 800078c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000790:	ee17 3a90 	vmov	r3, s15
 8000794:	b21a      	sxth	r2, r3
 8000796:	4b30      	ldr	r3, [pc, #192]	@ (8000858 <main+0x180>)
 8000798:	805a      	strh	r2, [r3, #2]

		data_values[2] = (int16_t)encoder_counts;
 800079a:	4b2c      	ldr	r3, [pc, #176]	@ (800084c <main+0x174>)
 800079c:	f9b3 2000 	ldrsh.w	r2, [r3]
 80007a0:	4b2d      	ldr	r3, [pc, #180]	@ (8000858 <main+0x180>)
 80007a2:	809a      	strh	r2, [r3, #4]
		/* Send data to Serial Oscilloscope */
		// Option 1: Send raw data
		//SerialOscilloscope_SendData(data_values, NUM_CHANNELS);

		// Option 2: Send labeled data (uncomment if needed)
		SerialOscilloscope_SendLabeledData(labels, data_values, NUM_CHANNELS);
 80007a4:	2203      	movs	r2, #3
 80007a6:	492c      	ldr	r1, [pc, #176]	@ (8000858 <main+0x180>)
 80007a8:	482c      	ldr	r0, [pc, #176]	@ (800085c <main+0x184>)
 80007aa:	f000 fbb9 	bl	8000f20 <SerialOscilloscope_SendLabeledData>

	}

	setMotorPWM(pwm);
 80007ae:	4b2c      	ldr	r3, [pc, #176]	@ (8000860 <main+0x188>)
 80007b0:	edd3 7a00 	vldr	s15, [r3]
 80007b4:	eeb0 0a67 	vmov.f32	s0, s15
 80007b8:	f000 fad6 	bl	8000d68 <setMotorPWM>
	HAL_Delay(delay_ms);
 80007bc:	4b29      	ldr	r3, [pc, #164]	@ (8000864 <main+0x18c>)
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	4618      	mov	r0, r3
 80007c2:	f000 fef9 	bl	80015b8 <HAL_Delay>

	pwm += pwm_step;
 80007c6:	4b26      	ldr	r3, [pc, #152]	@ (8000860 <main+0x188>)
 80007c8:	ed93 7a00 	vldr	s14, [r3]
 80007cc:	4b26      	ldr	r3, [pc, #152]	@ (8000868 <main+0x190>)
 80007ce:	edd3 7a00 	vldr	s15, [r3]
 80007d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80007d6:	4b22      	ldr	r3, [pc, #136]	@ (8000860 <main+0x188>)
 80007d8:	edc3 7a00 	vstr	s15, [r3]

	// If PWM exceeds limits, reverse the increment direction
	if (pwm >= 1.0f) {
 80007dc:	4b20      	ldr	r3, [pc, #128]	@ (8000860 <main+0x188>)
 80007de:	edd3 7a00 	vldr	s15, [r3]
 80007e2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80007e6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80007ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80007ee:	db0c      	blt.n	800080a <main+0x132>
	  pwm = 1.0f;
 80007f0:	4b1b      	ldr	r3, [pc, #108]	@ (8000860 <main+0x188>)
 80007f2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80007f6:	601a      	str	r2, [r3, #0]
	  pwm_step = -pwm_step;
 80007f8:	4b1b      	ldr	r3, [pc, #108]	@ (8000868 <main+0x190>)
 80007fa:	edd3 7a00 	vldr	s15, [r3]
 80007fe:	eef1 7a67 	vneg.f32	s15, s15
 8000802:	4b19      	ldr	r3, [pc, #100]	@ (8000868 <main+0x190>)
 8000804:	edc3 7a00 	vstr	s15, [r3]
 8000808:	e798      	b.n	800073c <main+0x64>
	}
	else if (pwm <= -1.0f) {
 800080a:	4b15      	ldr	r3, [pc, #84]	@ (8000860 <main+0x188>)
 800080c:	edd3 7a00 	vldr	s15, [r3]
 8000810:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8000814:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800081c:	d80a      	bhi.n	8000834 <main+0x15c>
	  pwm = -1.0f;
 800081e:	4b10      	ldr	r3, [pc, #64]	@ (8000860 <main+0x188>)
 8000820:	4a12      	ldr	r2, [pc, #72]	@ (800086c <main+0x194>)
 8000822:	601a      	str	r2, [r3, #0]
	  pwm_step = -pwm_step;
 8000824:	4b10      	ldr	r3, [pc, #64]	@ (8000868 <main+0x190>)
 8000826:	edd3 7a00 	vldr	s15, [r3]
 800082a:	eef1 7a67 	vneg.f32	s15, s15
 800082e:	4b0e      	ldr	r3, [pc, #56]	@ (8000868 <main+0x190>)
 8000830:	edc3 7a00 	vstr	s15, [r3]
	encoder_counts = (int16_t) TIM1->CNT;
 8000834:	e782      	b.n	800073c <main+0x64>
 8000836:	bf00      	nop
 8000838:	20000184 	.word	0x20000184
 800083c:	200001cc 	.word	0x200001cc
 8000840:	08005894 	.word	0x08005894
 8000844:	20000270 	.word	0x20000270
 8000848:	40010000 	.word	0x40010000
 800084c:	2000025c 	.word	0x2000025c
 8000850:	2000025e 	.word	0x2000025e
 8000854:	20000260 	.word	0x20000260
 8000858:	20000268 	.word	0x20000268
 800085c:	20000058 	.word	0x20000058
 8000860:	20000264 	.word	0x20000264
 8000864:	20000054 	.word	0x20000054
 8000868:	20000050 	.word	0x20000050
 800086c:	bf800000 	.word	0xbf800000

08000870 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000870:	b580      	push	{r7, lr}
 8000872:	b094      	sub	sp, #80	@ 0x50
 8000874:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000876:	f107 031c 	add.w	r3, r7, #28
 800087a:	2234      	movs	r2, #52	@ 0x34
 800087c:	2100      	movs	r1, #0
 800087e:	4618      	mov	r0, r3
 8000880:	f004 fb78 	bl	8004f74 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000884:	f107 0308 	add.w	r3, r7, #8
 8000888:	2200      	movs	r2, #0
 800088a:	601a      	str	r2, [r3, #0]
 800088c:	605a      	str	r2, [r3, #4]
 800088e:	609a      	str	r2, [r3, #8]
 8000890:	60da      	str	r2, [r3, #12]
 8000892:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000894:	2300      	movs	r3, #0
 8000896:	607b      	str	r3, [r7, #4]
 8000898:	4b2c      	ldr	r3, [pc, #176]	@ (800094c <SystemClock_Config+0xdc>)
 800089a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800089c:	4a2b      	ldr	r2, [pc, #172]	@ (800094c <SystemClock_Config+0xdc>)
 800089e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80008a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80008a4:	4b29      	ldr	r3, [pc, #164]	@ (800094c <SystemClock_Config+0xdc>)
 80008a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80008a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80008ac:	607b      	str	r3, [r7, #4]
 80008ae:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80008b0:	2300      	movs	r3, #0
 80008b2:	603b      	str	r3, [r7, #0]
 80008b4:	4b26      	ldr	r3, [pc, #152]	@ (8000950 <SystemClock_Config+0xe0>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	4a25      	ldr	r2, [pc, #148]	@ (8000950 <SystemClock_Config+0xe0>)
 80008ba:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80008be:	6013      	str	r3, [r2, #0]
 80008c0:	4b23      	ldr	r3, [pc, #140]	@ (8000950 <SystemClock_Config+0xe0>)
 80008c2:	681b      	ldr	r3, [r3, #0]
 80008c4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80008c8:	603b      	str	r3, [r7, #0]
 80008ca:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80008cc:	2301      	movs	r3, #1
 80008ce:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80008d0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80008d4:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80008d6:	2302      	movs	r3, #2
 80008d8:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80008da:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80008de:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 80008e0:	2304      	movs	r3, #4
 80008e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 80008e4:	23b4      	movs	r3, #180	@ 0xb4
 80008e6:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80008e8:	2302      	movs	r3, #2
 80008ea:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80008ec:	2302      	movs	r3, #2
 80008ee:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80008f0:	2302      	movs	r3, #2
 80008f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80008f4:	f107 031c 	add.w	r3, r7, #28
 80008f8:	4618      	mov	r0, r3
 80008fa:	f002 fd2d 	bl	8003358 <HAL_RCC_OscConfig>
 80008fe:	4603      	mov	r3, r0
 8000900:	2b00      	cmp	r3, #0
 8000902:	d001      	beq.n	8000908 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8000904:	f000 fa02 	bl	8000d0c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000908:	f002 f98c 	bl	8002c24 <HAL_PWREx_EnableOverDrive>
 800090c:	4603      	mov	r3, r0
 800090e:	2b00      	cmp	r3, #0
 8000910:	d001      	beq.n	8000916 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8000912:	f000 f9fb 	bl	8000d0c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000916:	230f      	movs	r3, #15
 8000918:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800091a:	2302      	movs	r3, #2
 800091c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800091e:	2300      	movs	r3, #0
 8000920:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000922:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000926:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000928:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800092c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800092e:	f107 0308 	add.w	r3, r7, #8
 8000932:	2105      	movs	r1, #5
 8000934:	4618      	mov	r0, r3
 8000936:	f002 f9c5 	bl	8002cc4 <HAL_RCC_ClockConfig>
 800093a:	4603      	mov	r3, r0
 800093c:	2b00      	cmp	r3, #0
 800093e:	d001      	beq.n	8000944 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8000940:	f000 f9e4 	bl	8000d0c <Error_Handler>
  }
}
 8000944:	bf00      	nop
 8000946:	3750      	adds	r7, #80	@ 0x50
 8000948:	46bd      	mov	sp, r7
 800094a:	bd80      	pop	{r7, pc}
 800094c:	40023800 	.word	0x40023800
 8000950:	40007000 	.word	0x40007000

08000954 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000954:	b580      	push	{r7, lr}
 8000956:	b084      	sub	sp, #16
 8000958:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800095a:	463b      	mov	r3, r7
 800095c:	2200      	movs	r2, #0
 800095e:	601a      	str	r2, [r3, #0]
 8000960:	605a      	str	r2, [r3, #4]
 8000962:	609a      	str	r2, [r3, #8]
 8000964:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000966:	4b21      	ldr	r3, [pc, #132]	@ (80009ec <MX_ADC1_Init+0x98>)
 8000968:	4a21      	ldr	r2, [pc, #132]	@ (80009f0 <MX_ADC1_Init+0x9c>)
 800096a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800096c:	4b1f      	ldr	r3, [pc, #124]	@ (80009ec <MX_ADC1_Init+0x98>)
 800096e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000972:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000974:	4b1d      	ldr	r3, [pc, #116]	@ (80009ec <MX_ADC1_Init+0x98>)
 8000976:	2200      	movs	r2, #0
 8000978:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 800097a:	4b1c      	ldr	r3, [pc, #112]	@ (80009ec <MX_ADC1_Init+0x98>)
 800097c:	2200      	movs	r2, #0
 800097e:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000980:	4b1a      	ldr	r3, [pc, #104]	@ (80009ec <MX_ADC1_Init+0x98>)
 8000982:	2201      	movs	r2, #1
 8000984:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000986:	4b19      	ldr	r3, [pc, #100]	@ (80009ec <MX_ADC1_Init+0x98>)
 8000988:	2200      	movs	r2, #0
 800098a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800098e:	4b17      	ldr	r3, [pc, #92]	@ (80009ec <MX_ADC1_Init+0x98>)
 8000990:	2200      	movs	r2, #0
 8000992:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000994:	4b15      	ldr	r3, [pc, #84]	@ (80009ec <MX_ADC1_Init+0x98>)
 8000996:	4a17      	ldr	r2, [pc, #92]	@ (80009f4 <MX_ADC1_Init+0xa0>)
 8000998:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800099a:	4b14      	ldr	r3, [pc, #80]	@ (80009ec <MX_ADC1_Init+0x98>)
 800099c:	2200      	movs	r2, #0
 800099e:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 80009a0:	4b12      	ldr	r3, [pc, #72]	@ (80009ec <MX_ADC1_Init+0x98>)
 80009a2:	2201      	movs	r2, #1
 80009a4:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 80009a6:	4b11      	ldr	r3, [pc, #68]	@ (80009ec <MX_ADC1_Init+0x98>)
 80009a8:	2201      	movs	r2, #1
 80009aa:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80009ae:	4b0f      	ldr	r3, [pc, #60]	@ (80009ec <MX_ADC1_Init+0x98>)
 80009b0:	2201      	movs	r2, #1
 80009b2:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80009b4:	480d      	ldr	r0, [pc, #52]	@ (80009ec <MX_ADC1_Init+0x98>)
 80009b6:	f000 fe23 	bl	8001600 <HAL_ADC_Init>
 80009ba:	4603      	mov	r3, r0
 80009bc:	2b00      	cmp	r3, #0
 80009be:	d001      	beq.n	80009c4 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 80009c0:	f000 f9a4 	bl	8000d0c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_15;
 80009c4:	230f      	movs	r3, #15
 80009c6:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80009c8:	2301      	movs	r3, #1
 80009ca:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80009cc:	2300      	movs	r3, #0
 80009ce:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80009d0:	463b      	mov	r3, r7
 80009d2:	4619      	mov	r1, r3
 80009d4:	4805      	ldr	r0, [pc, #20]	@ (80009ec <MX_ADC1_Init+0x98>)
 80009d6:	f000 ffd5 	bl	8001984 <HAL_ADC_ConfigChannel>
 80009da:	4603      	mov	r3, r0
 80009dc:	2b00      	cmp	r3, #0
 80009de:	d001      	beq.n	80009e4 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 80009e0:	f000 f994 	bl	8000d0c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80009e4:	bf00      	nop
 80009e6:	3710      	adds	r7, #16
 80009e8:	46bd      	mov	sp, r7
 80009ea:	bd80      	pop	{r7, pc}
 80009ec:	200000dc 	.word	0x200000dc
 80009f0:	40012000 	.word	0x40012000
 80009f4:	0f000001 	.word	0x0f000001

080009f8 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b08c      	sub	sp, #48	@ 0x30
 80009fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80009fe:	f107 030c 	add.w	r3, r7, #12
 8000a02:	2224      	movs	r2, #36	@ 0x24
 8000a04:	2100      	movs	r1, #0
 8000a06:	4618      	mov	r0, r3
 8000a08:	f004 fab4 	bl	8004f74 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000a0c:	1d3b      	adds	r3, r7, #4
 8000a0e:	2200      	movs	r2, #0
 8000a10:	601a      	str	r2, [r3, #0]
 8000a12:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000a14:	4b22      	ldr	r3, [pc, #136]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a16:	4a23      	ldr	r2, [pc, #140]	@ (8000aa4 <MX_TIM1_Init+0xac>)
 8000a18:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8000a1a:	4b21      	ldr	r3, [pc, #132]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000a20:	4b1f      	ldr	r3, [pc, #124]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a22:	2200      	movs	r2, #0
 8000a24:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8000a26:	4b1e      	ldr	r3, [pc, #120]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a28:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000a2c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000a2e:	4b1c      	ldr	r3, [pc, #112]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a30:	2200      	movs	r2, #0
 8000a32:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000a34:	4b1a      	ldr	r3, [pc, #104]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a36:	2200      	movs	r2, #0
 8000a38:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000a3a:	4b19      	ldr	r3, [pc, #100]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a3c:	2200      	movs	r2, #0
 8000a3e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8000a40:	2303      	movs	r3, #3
 8000a42:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8000a44:	2300      	movs	r3, #0
 8000a46:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8000a48:	2301      	movs	r3, #1
 8000a4a:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8000a50:	2300      	movs	r3, #0
 8000a52:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8000a54:	2300      	movs	r3, #0
 8000a56:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8000a58:	2301      	movs	r3, #1
 8000a5a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8000a5c:	2300      	movs	r3, #0
 8000a5e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8000a60:	2300      	movs	r3, #0
 8000a62:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 8000a64:	f107 030c 	add.w	r3, r7, #12
 8000a68:	4619      	mov	r1, r3
 8000a6a:	480d      	ldr	r0, [pc, #52]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a6c:	f003 f82a 	bl	8003ac4 <HAL_TIM_Encoder_Init>
 8000a70:	4603      	mov	r3, r0
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	d001      	beq.n	8000a7a <MX_TIM1_Init+0x82>
  {
    Error_Handler();
 8000a76:	f000 f949 	bl	8000d0c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000a7a:	2300      	movs	r3, #0
 8000a7c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000a7e:	2300      	movs	r3, #0
 8000a80:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000a82:	1d3b      	adds	r3, r7, #4
 8000a84:	4619      	mov	r1, r3
 8000a86:	4806      	ldr	r0, [pc, #24]	@ (8000aa0 <MX_TIM1_Init+0xa8>)
 8000a88:	f003 fdb6 	bl	80045f8 <HAL_TIMEx_MasterConfigSynchronization>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d001      	beq.n	8000a96 <MX_TIM1_Init+0x9e>
  {
    Error_Handler();
 8000a92:	f000 f93b 	bl	8000d0c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8000a96:	bf00      	nop
 8000a98:	3730      	adds	r7, #48	@ 0x30
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	bd80      	pop	{r7, pc}
 8000a9e:	bf00      	nop
 8000aa0:	20000184 	.word	0x20000184
 8000aa4:	40010000 	.word	0x40010000

08000aa8 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000aa8:	b580      	push	{r7, lr}
 8000aaa:	b08a      	sub	sp, #40	@ 0x28
 8000aac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000aae:	f107 0320 	add.w	r3, r7, #32
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	601a      	str	r2, [r3, #0]
 8000ab6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000ab8:	1d3b      	adds	r3, r7, #4
 8000aba:	2200      	movs	r2, #0
 8000abc:	601a      	str	r2, [r3, #0]
 8000abe:	605a      	str	r2, [r3, #4]
 8000ac0:	609a      	str	r2, [r3, #8]
 8000ac2:	60da      	str	r2, [r3, #12]
 8000ac4:	611a      	str	r2, [r3, #16]
 8000ac6:	615a      	str	r2, [r3, #20]
 8000ac8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000aca:	4b22      	ldr	r3, [pc, #136]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000acc:	4a22      	ldr	r2, [pc, #136]	@ (8000b58 <MX_TIM4_Init+0xb0>)
 8000ace:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8000ad0:	4b20      	ldr	r3, [pc, #128]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ad6:	4b1f      	ldr	r3, [pc, #124]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000ad8:	2200      	movs	r2, #0
 8000ada:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 7199;
 8000adc:	4b1d      	ldr	r3, [pc, #116]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000ade:	f641 421f 	movw	r2, #7199	@ 0x1c1f
 8000ae2:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000ae4:	4b1b      	ldr	r3, [pc, #108]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000ae6:	2200      	movs	r2, #0
 8000ae8:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000aea:	4b1a      	ldr	r3, [pc, #104]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000aec:	2200      	movs	r2, #0
 8000aee:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8000af0:	4818      	ldr	r0, [pc, #96]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000af2:	f002 fecf 	bl	8003894 <HAL_TIM_PWM_Init>
 8000af6:	4603      	mov	r3, r0
 8000af8:	2b00      	cmp	r3, #0
 8000afa:	d001      	beq.n	8000b00 <MX_TIM4_Init+0x58>
  {
    Error_Handler();
 8000afc:	f000 f906 	bl	8000d0c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b00:	2300      	movs	r3, #0
 8000b02:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b04:	2300      	movs	r3, #0
 8000b06:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000b08:	f107 0320 	add.w	r3, r7, #32
 8000b0c:	4619      	mov	r1, r3
 8000b0e:	4811      	ldr	r0, [pc, #68]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000b10:	f003 fd72 	bl	80045f8 <HAL_TIMEx_MasterConfigSynchronization>
 8000b14:	4603      	mov	r3, r0
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d001      	beq.n	8000b1e <MX_TIM4_Init+0x76>
  {
    Error_Handler();
 8000b1a:	f000 f8f7 	bl	8000d0c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000b1e:	2360      	movs	r3, #96	@ 0x60
 8000b20:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000b22:	2300      	movs	r3, #0
 8000b24:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000b26:	2300      	movs	r3, #0
 8000b28:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000b2e:	1d3b      	adds	r3, r7, #4
 8000b30:	2200      	movs	r2, #0
 8000b32:	4619      	mov	r1, r3
 8000b34:	4807      	ldr	r0, [pc, #28]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000b36:	f003 f9e9 	bl	8003f0c <HAL_TIM_PWM_ConfigChannel>
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	d001      	beq.n	8000b44 <MX_TIM4_Init+0x9c>
  {
    Error_Handler();
 8000b40:	f000 f8e4 	bl	8000d0c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8000b44:	4803      	ldr	r0, [pc, #12]	@ (8000b54 <MX_TIM4_Init+0xac>)
 8000b46:	f000 fb8d 	bl	8001264 <HAL_TIM_MspPostInit>

}
 8000b4a:	bf00      	nop
 8000b4c:	3728      	adds	r7, #40	@ 0x28
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	200001cc 	.word	0x200001cc
 8000b58:	40000800 	.word	0x40000800

08000b5c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000b60:	4b11      	ldr	r3, [pc, #68]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b62:	4a12      	ldr	r2, [pc, #72]	@ (8000bac <MX_USART2_UART_Init+0x50>)
 8000b64:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000b66:	4b10      	ldr	r3, [pc, #64]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b68:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000b6c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000b6e:	4b0e      	ldr	r3, [pc, #56]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b70:	2200      	movs	r2, #0
 8000b72:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000b74:	4b0c      	ldr	r3, [pc, #48]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b76:	2200      	movs	r2, #0
 8000b78:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000b7a:	4b0b      	ldr	r3, [pc, #44]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b7c:	2200      	movs	r2, #0
 8000b7e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000b80:	4b09      	ldr	r3, [pc, #36]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b82:	220c      	movs	r2, #12
 8000b84:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b86:	4b08      	ldr	r3, [pc, #32]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b88:	2200      	movs	r2, #0
 8000b8a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000b8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000b92:	4805      	ldr	r0, [pc, #20]	@ (8000ba8 <MX_USART2_UART_Init+0x4c>)
 8000b94:	f003 fdc0 	bl	8004718 <HAL_UART_Init>
 8000b98:	4603      	mov	r3, r0
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d001      	beq.n	8000ba2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000b9e:	f000 f8b5 	bl	8000d0c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000ba2:	bf00      	nop
 8000ba4:	bd80      	pop	{r7, pc}
 8000ba6:	bf00      	nop
 8000ba8:	20000214 	.word	0x20000214
 8000bac:	40004400 	.word	0x40004400

08000bb0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	b082      	sub	sp, #8
 8000bb4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	607b      	str	r3, [r7, #4]
 8000bba:	4b0c      	ldr	r3, [pc, #48]	@ (8000bec <MX_DMA_Init+0x3c>)
 8000bbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bbe:	4a0b      	ldr	r2, [pc, #44]	@ (8000bec <MX_DMA_Init+0x3c>)
 8000bc0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000bc4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bc6:	4b09      	ldr	r3, [pc, #36]	@ (8000bec <MX_DMA_Init+0x3c>)
 8000bc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000bce:	607b      	str	r3, [r7, #4]
 8000bd0:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	2100      	movs	r1, #0
 8000bd6:	2038      	movs	r0, #56	@ 0x38
 8000bd8:	f001 fa5f 	bl	800209a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8000bdc:	2038      	movs	r0, #56	@ 0x38
 8000bde:	f001 fa78 	bl	80020d2 <HAL_NVIC_EnableIRQ>

}
 8000be2:	bf00      	nop
 8000be4:	3708      	adds	r7, #8
 8000be6:	46bd      	mov	sp, r7
 8000be8:	bd80      	pop	{r7, pc}
 8000bea:	bf00      	nop
 8000bec:	40023800 	.word	0x40023800

08000bf0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b08a      	sub	sp, #40	@ 0x28
 8000bf4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bf6:	f107 0314 	add.w	r3, r7, #20
 8000bfa:	2200      	movs	r2, #0
 8000bfc:	601a      	str	r2, [r3, #0]
 8000bfe:	605a      	str	r2, [r3, #4]
 8000c00:	609a      	str	r2, [r3, #8]
 8000c02:	60da      	str	r2, [r3, #12]
 8000c04:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c06:	2300      	movs	r3, #0
 8000c08:	613b      	str	r3, [r7, #16]
 8000c0a:	4b37      	ldr	r3, [pc, #220]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c0e:	4a36      	ldr	r2, [pc, #216]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c10:	f043 0304 	orr.w	r3, r3, #4
 8000c14:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c16:	4b34      	ldr	r3, [pc, #208]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c1a:	f003 0304 	and.w	r3, r3, #4
 8000c1e:	613b      	str	r3, [r7, #16]
 8000c20:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c22:	2300      	movs	r3, #0
 8000c24:	60fb      	str	r3, [r7, #12]
 8000c26:	4b30      	ldr	r3, [pc, #192]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c2a:	4a2f      	ldr	r2, [pc, #188]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c2c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c30:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c32:	4b2d      	ldr	r3, [pc, #180]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c36:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c3a:	60fb      	str	r3, [r7, #12]
 8000c3c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c3e:	2300      	movs	r3, #0
 8000c40:	60bb      	str	r3, [r7, #8]
 8000c42:	4b29      	ldr	r3, [pc, #164]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c46:	4a28      	ldr	r2, [pc, #160]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c48:	f043 0301 	orr.w	r3, r3, #1
 8000c4c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c4e:	4b26      	ldr	r3, [pc, #152]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c52:	f003 0301 	and.w	r3, r3, #1
 8000c56:	60bb      	str	r3, [r7, #8]
 8000c58:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	607b      	str	r3, [r7, #4]
 8000c5e:	4b22      	ldr	r3, [pc, #136]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c62:	4a21      	ldr	r2, [pc, #132]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c64:	f043 0302 	orr.w	r3, r3, #2
 8000c68:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c6a:	4b1f      	ldr	r3, [pc, #124]	@ (8000ce8 <MX_GPIO_Init+0xf8>)
 8000c6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c6e:	f003 0302 	and.w	r3, r3, #2
 8000c72:	607b      	str	r3, [r7, #4]
 8000c74:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2120      	movs	r1, #32
 8000c7a:	481c      	ldr	r0, [pc, #112]	@ (8000cec <MX_GPIO_Init+0xfc>)
 8000c7c:	f001 ffb8 	bl	8002bf0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, INA_Pin|INB_Pin, GPIO_PIN_RESET);
 8000c80:	2200      	movs	r2, #0
 8000c82:	2103      	movs	r1, #3
 8000c84:	481a      	ldr	r0, [pc, #104]	@ (8000cf0 <MX_GPIO_Init+0x100>)
 8000c86:	f001 ffb3 	bl	8002bf0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000c8a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000c8e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000c90:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8000c94:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c96:	2300      	movs	r3, #0
 8000c98:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000c9a:	f107 0314 	add.w	r3, r7, #20
 8000c9e:	4619      	mov	r1, r3
 8000ca0:	4814      	ldr	r0, [pc, #80]	@ (8000cf4 <MX_GPIO_Init+0x104>)
 8000ca2:	f001 fe11 	bl	80028c8 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8000ca6:	2320      	movs	r3, #32
 8000ca8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000caa:	2301      	movs	r3, #1
 8000cac:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cae:	2300      	movs	r3, #0
 8000cb0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000cb6:	f107 0314 	add.w	r3, r7, #20
 8000cba:	4619      	mov	r1, r3
 8000cbc:	480b      	ldr	r0, [pc, #44]	@ (8000cec <MX_GPIO_Init+0xfc>)
 8000cbe:	f001 fe03 	bl	80028c8 <HAL_GPIO_Init>

  /*Configure GPIO pins : INA_Pin INB_Pin */
  GPIO_InitStruct.Pin = INA_Pin|INB_Pin;
 8000cc2:	2303      	movs	r3, #3
 8000cc4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cc6:	2301      	movs	r3, #1
 8000cc8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cca:	2300      	movs	r3, #0
 8000ccc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cce:	2303      	movs	r3, #3
 8000cd0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cd2:	f107 0314 	add.w	r3, r7, #20
 8000cd6:	4619      	mov	r1, r3
 8000cd8:	4805      	ldr	r0, [pc, #20]	@ (8000cf0 <MX_GPIO_Init+0x100>)
 8000cda:	f001 fdf5 	bl	80028c8 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000cde:	bf00      	nop
 8000ce0:	3728      	adds	r7, #40	@ 0x28
 8000ce2:	46bd      	mov	sp, r7
 8000ce4:	bd80      	pop	{r7, pc}
 8000ce6:	bf00      	nop
 8000ce8:	40023800 	.word	0x40023800
 8000cec:	40020000 	.word	0x40020000
 8000cf0:	40020400 	.word	0x40020400
 8000cf4:	40020800 	.word	0x40020800

08000cf8 <Get_HADC1_Ptr>:

/* USER CODE BEGIN 4 */
ADC_HandleTypeDef* Get_HADC1_Ptr(void)
{
 8000cf8:	b480      	push	{r7}
 8000cfa:	af00      	add	r7, sp, #0
    return &hadc1;
 8000cfc:	4b02      	ldr	r3, [pc, #8]	@ (8000d08 <Get_HADC1_Ptr+0x10>)
}
 8000cfe:	4618      	mov	r0, r3
 8000d00:	46bd      	mov	sp, r7
 8000d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d06:	4770      	bx	lr
 8000d08:	200000dc 	.word	0x200000dc

08000d0c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d0c:	b480      	push	{r7}
 8000d0e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d10:	b672      	cpsid	i
}
 8000d12:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d14:	bf00      	nop
 8000d16:	e7fd      	b.n	8000d14 <Error_Handler+0x8>

08000d18 <limitPWM>:

uint16_t adc_buf[NUM_SAMPLES];
uint8_t complete = 0;


float limitPWM(float pwm) {
 8000d18:	b480      	push	{r7}
 8000d1a:	b083      	sub	sp, #12
 8000d1c:	af00      	add	r7, sp, #0
 8000d1e:	ed87 0a01 	vstr	s0, [r7, #4]
	if (pwm > PWM_MAX)
 8000d22:	edd7 7a01 	vldr	s15, [r7, #4]
 8000d26:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000d2a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d32:	dd02      	ble.n	8000d3a <limitPWM+0x22>
		return PWM_MAX;
 8000d34:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000d38:	e00b      	b.n	8000d52 <limitPWM+0x3a>
	else if (pwm < -PWM_MAX)
 8000d3a:	edd7 7a01 	vldr	s15, [r7, #4]
 8000d3e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8000d42:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d4a:	d501      	bpl.n	8000d50 <limitPWM+0x38>
		return -PWM_MAX;
 8000d4c:	4b05      	ldr	r3, [pc, #20]	@ (8000d64 <limitPWM+0x4c>)
 8000d4e:	e000      	b.n	8000d52 <limitPWM+0x3a>
	return pwm;
 8000d50:	687b      	ldr	r3, [r7, #4]
}
 8000d52:	ee07 3a90 	vmov	s15, r3
 8000d56:	eeb0 0a67 	vmov.f32	s0, s15
 8000d5a:	370c      	adds	r7, #12
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d62:	4770      	bx	lr
 8000d64:	bf800000 	.word	0xbf800000

08000d68 <setMotorPWM>:



void setMotorPWM(float pwm) {
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b082      	sub	sp, #8
 8000d6c:	af00      	add	r7, sp, #0
 8000d6e:	ed87 0a01 	vstr	s0, [r7, #4]
	if (pwm >= 0) {
 8000d72:	edd7 7a01 	vldr	s15, [r7, #4]
 8000d76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000d7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d7e:	db13      	blt.n	8000da8 <setMotorPWM+0x40>
		GPIOB_BSRR = (1U << INA_PIN) | (1U << (INB_PIN + 16));
 8000d80:	4b1a      	ldr	r3, [pc, #104]	@ (8000dec <setMotorPWM+0x84>)
 8000d82:	4a1b      	ldr	r2, [pc, #108]	@ (8000df0 <setMotorPWM+0x88>)
 8000d84:	601a      	str	r2, [r3, #0]
		TIM4->CCR1 = (uint32_t) (limitPWM(pwm) * MAX_TIMER_COUNTS);
 8000d86:	ed97 0a01 	vldr	s0, [r7, #4]
 8000d8a:	f7ff ffc5 	bl	8000d18 <limitPWM>
 8000d8e:	eef0 7a40 	vmov.f32	s15, s0
 8000d92:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8000df4 <setMotorPWM+0x8c>
 8000d96:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000d9a:	4b17      	ldr	r3, [pc, #92]	@ (8000df8 <setMotorPWM+0x90>)
 8000d9c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000da0:	ee17 2a90 	vmov	r2, s15
 8000da4:	635a      	str	r2, [r3, #52]	@ 0x34
	}
	else if (pwm < 0) {
		GPIOB_BSRR = (1U << (INA_PIN + 16)) | (1U << INB_PIN);
		TIM4->CCR1 = (uint32_t) (-1 * limitPWM(pwm) * MAX_TIMER_COUNTS);
	}
}
 8000da6:	e01c      	b.n	8000de2 <setMotorPWM+0x7a>
	else if (pwm < 0) {
 8000da8:	edd7 7a01 	vldr	s15, [r7, #4]
 8000dac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000db0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000db4:	d400      	bmi.n	8000db8 <setMotorPWM+0x50>
}
 8000db6:	e014      	b.n	8000de2 <setMotorPWM+0x7a>
		GPIOB_BSRR = (1U << (INA_PIN + 16)) | (1U << INB_PIN);
 8000db8:	4b0c      	ldr	r3, [pc, #48]	@ (8000dec <setMotorPWM+0x84>)
 8000dba:	4a10      	ldr	r2, [pc, #64]	@ (8000dfc <setMotorPWM+0x94>)
 8000dbc:	601a      	str	r2, [r3, #0]
		TIM4->CCR1 = (uint32_t) (-1 * limitPWM(pwm) * MAX_TIMER_COUNTS);
 8000dbe:	ed97 0a01 	vldr	s0, [r7, #4]
 8000dc2:	f7ff ffa9 	bl	8000d18 <limitPWM>
 8000dc6:	eef0 7a40 	vmov.f32	s15, s0
 8000dca:	eef1 7a67 	vneg.f32	s15, s15
 8000dce:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8000df4 <setMotorPWM+0x8c>
 8000dd2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000dd6:	4b08      	ldr	r3, [pc, #32]	@ (8000df8 <setMotorPWM+0x90>)
 8000dd8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000ddc:	ee17 2a90 	vmov	r2, s15
 8000de0:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000de2:	bf00      	nop
 8000de4:	3708      	adds	r7, #8
 8000de6:	46bd      	mov	sp, r7
 8000de8:	bd80      	pop	{r7, pc}
 8000dea:	bf00      	nop
 8000dec:	40020418 	.word	0x40020418
 8000df0:	00020001 	.word	0x00020001
 8000df4:	45e0f800 	.word	0x45e0f800
 8000df8:	40000800 	.word	0x40000800
 8000dfc:	00010002 	.word	0x00010002

08000e00 <resetMotors>:


void resetMotors() {
 8000e00:	b580      	push	{r7, lr}
 8000e02:	af00      	add	r7, sp, #0
	GPIOB_BSRR = (1U << (INA_PIN + 16)) | (1U << (INB_PIN + 16));
 8000e04:	4b04      	ldr	r3, [pc, #16]	@ (8000e18 <resetMotors+0x18>)
 8000e06:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8000e0a:	601a      	str	r2, [r3, #0]
	setMotorPWM(0);
 8000e0c:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 8000e1c <resetMotors+0x1c>
 8000e10:	f7ff ffaa 	bl	8000d68 <setMotorPWM>
}
 8000e14:	bf00      	nop
 8000e16:	bd80      	pop	{r7, pc}
 8000e18:	40020418 	.word	0x40020418
 8000e1c:	00000000 	.word	0x00000000

08000e20 <analogRead>:


uint16_t analogRead()
{
 8000e20:	b580      	push	{r7, lr}
 8000e22:	b088      	sub	sp, #32
 8000e24:	af00      	add	r7, sp, #0
    ADC_ChannelConfTypeDef sConfig = {0};
 8000e26:	1d3b      	adds	r3, r7, #4
 8000e28:	2200      	movs	r2, #0
 8000e2a:	601a      	str	r2, [r3, #0]
 8000e2c:	605a      	str	r2, [r3, #4]
 8000e2e:	609a      	str	r2, [r3, #8]
 8000e30:	60da      	str	r2, [r3, #12]
    ADC_HandleTypeDef *hadc1_ptr = Get_HADC1_Ptr();
 8000e32:	f7ff ff61 	bl	8000cf8 <Get_HADC1_Ptr>
 8000e36:	6178      	str	r0, [r7, #20]


	sConfig.Channel = ADC_CHANNEL_15;
 8000e38:	230f      	movs	r3, #15
 8000e3a:	607b      	str	r3, [r7, #4]
    sConfig.Rank = 1;
 8000e3c:	2301      	movs	r3, #1
 8000e3e:	60bb      	str	r3, [r7, #8]
    sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000e40:	2300      	movs	r3, #0
 8000e42:	60fb      	str	r3, [r7, #12]

    if (HAL_ADC_ConfigChannel(hadc1_ptr, &sConfig) != HAL_OK)
 8000e44:	1d3b      	adds	r3, r7, #4
 8000e46:	4619      	mov	r1, r3
 8000e48:	6978      	ldr	r0, [r7, #20]
 8000e4a:	f000 fd9b 	bl	8001984 <HAL_ADC_ConfigChannel>
 8000e4e:	4603      	mov	r3, r0
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d001      	beq.n	8000e58 <analogRead+0x38>
    {
        return 0;
 8000e54:	2300      	movs	r3, #0
 8000e56:	e023      	b.n	8000ea0 <analogRead+0x80>
    }

    complete = 0;
 8000e58:	4b13      	ldr	r3, [pc, #76]	@ (8000ea8 <analogRead+0x88>)
 8000e5a:	2200      	movs	r2, #0
 8000e5c:	701a      	strb	r2, [r3, #0]

    HAL_ADC_Start_DMA(hadc1_ptr, (uint32_t*)adc_buf, NUM_SAMPLES);
 8000e5e:	2280      	movs	r2, #128	@ 0x80
 8000e60:	4912      	ldr	r1, [pc, #72]	@ (8000eac <analogRead+0x8c>)
 8000e62:	6978      	ldr	r0, [r7, #20]
 8000e64:	f000 fc10 	bl	8001688 <HAL_ADC_Start_DMA>

    while (complete == 0)
 8000e68:	e000      	b.n	8000e6c <analogRead+0x4c>
    {
        continue;
 8000e6a:	bf00      	nop
    while (complete == 0)
 8000e6c:	4b0e      	ldr	r3, [pc, #56]	@ (8000ea8 <analogRead+0x88>)
 8000e6e:	781b      	ldrb	r3, [r3, #0]
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d0fa      	beq.n	8000e6a <analogRead+0x4a>
    }

    uint32_t sum = 0;
 8000e74:	2300      	movs	r3, #0
 8000e76:	61fb      	str	r3, [r7, #28]
    uint16_t measurement = 0;
 8000e78:	2300      	movs	r3, #0
 8000e7a:	837b      	strh	r3, [r7, #26]
    while(measurement < NUM_SAMPLES)
 8000e7c:	e00a      	b.n	8000e94 <analogRead+0x74>
    {
        sum += adc_buf[measurement];
 8000e7e:	8b7b      	ldrh	r3, [r7, #26]
 8000e80:	4a0a      	ldr	r2, [pc, #40]	@ (8000eac <analogRead+0x8c>)
 8000e82:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000e86:	461a      	mov	r2, r3
 8000e88:	69fb      	ldr	r3, [r7, #28]
 8000e8a:	4413      	add	r3, r2
 8000e8c:	61fb      	str	r3, [r7, #28]
        ++measurement;
 8000e8e:	8b7b      	ldrh	r3, [r7, #26]
 8000e90:	3301      	adds	r3, #1
 8000e92:	837b      	strh	r3, [r7, #26]
    while(measurement < NUM_SAMPLES)
 8000e94:	8b7b      	ldrh	r3, [r7, #26]
 8000e96:	2b7f      	cmp	r3, #127	@ 0x7f
 8000e98:	d9f1      	bls.n	8000e7e <analogRead+0x5e>
    }

    return sum/NUM_SAMPLES;
 8000e9a:	69fb      	ldr	r3, [r7, #28]
 8000e9c:	09db      	lsrs	r3, r3, #7
 8000e9e:	b29b      	uxth	r3, r3
}
 8000ea0:	4618      	mov	r0, r3
 8000ea2:	3720      	adds	r7, #32
 8000ea4:	46bd      	mov	sp, r7
 8000ea6:	bd80      	pop	{r7, pc}
 8000ea8:	200003c8 	.word	0x200003c8
 8000eac:	200002c8 	.word	0x200002c8

08000eb0 <getCurrentMilliamps>:

uint16_t getCurrentMilliamps(){
 8000eb0:	b580      	push	{r7, lr}
 8000eb2:	af00      	add	r7, sp, #0
	// 3.3V / 4096 ADC counts / 144 mV per A = 5.5948893229166666666666666666667 mA per count
	return analogRead();
 8000eb4:	f7ff ffb4 	bl	8000e20 <analogRead>
 8000eb8:	4603      	mov	r3, r0
}
 8000eba:	4618      	mov	r0, r3
 8000ebc:	bd80      	pop	{r7, pc}
	...

08000ec0 <HAL_ADC_ConvCpltCallback>:

/*
 This function is called when the ADC buffer is filled
 It stops the ADC and changes our "complete" variable to be "true"
 */
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	b082      	sub	sp, #8
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	6078      	str	r0, [r7, #4]
    // stop the ADC
    HAL_ADC_Stop_DMA(hadc);
 8000ec8:	6878      	ldr	r0, [r7, #4]
 8000eca:	f000 fced 	bl	80018a8 <HAL_ADC_Stop_DMA>
    complete = 1;
 8000ece:	4b03      	ldr	r3, [pc, #12]	@ (8000edc <HAL_ADC_ConvCpltCallback+0x1c>)
 8000ed0:	2201      	movs	r2, #1
 8000ed2:	701a      	strb	r2, [r3, #0]
}
 8000ed4:	bf00      	nop
 8000ed6:	3708      	adds	r7, #8
 8000ed8:	46bd      	mov	sp, r7
 8000eda:	bd80      	pop	{r7, pc}
 8000edc:	200003c8 	.word	0x200003c8

08000ee0 <SerialOscilloscope_Init>:

/**
 * @brief Initialize the Serial Oscilloscope module
 */
HAL_StatusTypeDef SerialOscilloscope_Init(SerialOscilloscope_Config_t *config)
{
 8000ee0:	b580      	push	{r7, lr}
 8000ee2:	b082      	sub	sp, #8
 8000ee4:	af00      	add	r7, sp, #0
 8000ee6:	6078      	str	r0, [r7, #4]
    /* Check for null pointer */
    if (config == NULL || config->huart == NULL) {
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d003      	beq.n	8000ef6 <SerialOscilloscope_Init+0x16>
 8000eee:	687b      	ldr	r3, [r7, #4]
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	d101      	bne.n	8000efa <SerialOscilloscope_Init+0x1a>
        return HAL_ERROR;
 8000ef6:	2301      	movs	r3, #1
 8000ef8:	e00a      	b.n	8000f10 <SerialOscilloscope_Init+0x30>
    }

    /* Copy configuration parameters */
    memcpy(&osc_config, config, sizeof(SerialOscilloscope_Config_t));
 8000efa:	220c      	movs	r2, #12
 8000efc:	6879      	ldr	r1, [r7, #4]
 8000efe:	4806      	ldr	r0, [pc, #24]	@ (8000f18 <SerialOscilloscope_Init+0x38>)
 8000f00:	f004 f86c 	bl	8004fdc <memcpy>

    /* Initialize timing */
    last_sample_time = HAL_GetTick();
 8000f04:	f000 fb4c 	bl	80015a0 <HAL_GetTick>
 8000f08:	4603      	mov	r3, r0
 8000f0a:	4a04      	ldr	r2, [pc, #16]	@ (8000f1c <SerialOscilloscope_Init+0x3c>)
 8000f0c:	6013      	str	r3, [r2, #0]

    return HAL_OK;
 8000f0e:	2300      	movs	r3, #0
}
 8000f10:	4618      	mov	r0, r3
 8000f12:	3708      	adds	r7, #8
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bd80      	pop	{r7, pc}
 8000f18:	200003cc 	.word	0x200003cc
 8000f1c:	200003d8 	.word	0x200003d8

08000f20 <SerialOscilloscope_SendLabeledData>:

/**
 * @brief Send labeled data values to Serial Oscilloscope
 */
HAL_StatusTypeDef SerialOscilloscope_SendLabeledData(char **labels, int16_t *data_array, uint8_t num_channels)
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	b086      	sub	sp, #24
 8000f24:	af00      	add	r7, sp, #0
 8000f26:	60f8      	str	r0, [r7, #12]
 8000f28:	60b9      	str	r1, [r7, #8]
 8000f2a:	4613      	mov	r3, r2
 8000f2c:	71fb      	strb	r3, [r7, #7]
    uint8_t i;
    int len = 0;
 8000f2e:	2300      	movs	r3, #0
 8000f30:	613b      	str	r3, [r7, #16]

    /* Validate parameters */
    if (data_array == NULL || labels == NULL || num_channels == 0 ||
 8000f32:	68bb      	ldr	r3, [r7, #8]
 8000f34:	2b00      	cmp	r3, #0
 8000f36:	d00a      	beq.n	8000f4e <SerialOscilloscope_SendLabeledData+0x2e>
 8000f38:	68fb      	ldr	r3, [r7, #12]
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d007      	beq.n	8000f4e <SerialOscilloscope_SendLabeledData+0x2e>
 8000f3e:	79fb      	ldrb	r3, [r7, #7]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	d004      	beq.n	8000f4e <SerialOscilloscope_SendLabeledData+0x2e>
        num_channels > osc_config.max_channels) {
 8000f44:	4b2c      	ldr	r3, [pc, #176]	@ (8000ff8 <SerialOscilloscope_SendLabeledData+0xd8>)
 8000f46:	7a1b      	ldrb	r3, [r3, #8]
    if (data_array == NULL || labels == NULL || num_channels == 0 ||
 8000f48:	79fa      	ldrb	r2, [r7, #7]
 8000f4a:	429a      	cmp	r2, r3
 8000f4c:	d901      	bls.n	8000f52 <SerialOscilloscope_SendLabeledData+0x32>
        return HAL_ERROR;
 8000f4e:	2301      	movs	r3, #1
 8000f50:	e04d      	b.n	8000fee <SerialOscilloscope_SendLabeledData+0xce>
    }

    /* Format data as labeled, comma-separated values */
    for (i = 0; i < num_channels; i++) {
 8000f52:	2300      	movs	r3, #0
 8000f54:	75fb      	strb	r3, [r7, #23]
 8000f56:	e032      	b.n	8000fbe <SerialOscilloscope_SendLabeledData+0x9e>
        if (i == 0) {
 8000f58:	7dfb      	ldrb	r3, [r7, #23]
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d116      	bne.n	8000f8c <SerialOscilloscope_SendLabeledData+0x6c>
            len += sprintf(tx_buffer + len, ">%s:%d", labels[i], data_array[i]);
 8000f5e:	693b      	ldr	r3, [r7, #16]
 8000f60:	4a26      	ldr	r2, [pc, #152]	@ (8000ffc <SerialOscilloscope_SendLabeledData+0xdc>)
 8000f62:	1898      	adds	r0, r3, r2
 8000f64:	7dfb      	ldrb	r3, [r7, #23]
 8000f66:	009b      	lsls	r3, r3, #2
 8000f68:	68fa      	ldr	r2, [r7, #12]
 8000f6a:	4413      	add	r3, r2
 8000f6c:	6819      	ldr	r1, [r3, #0]
 8000f6e:	7dfb      	ldrb	r3, [r7, #23]
 8000f70:	005b      	lsls	r3, r3, #1
 8000f72:	68ba      	ldr	r2, [r7, #8]
 8000f74:	4413      	add	r3, r2
 8000f76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f7a:	460a      	mov	r2, r1
 8000f7c:	4920      	ldr	r1, [pc, #128]	@ (8001000 <SerialOscilloscope_SendLabeledData+0xe0>)
 8000f7e:	f003 ffd7 	bl	8004f30 <siprintf>
 8000f82:	4602      	mov	r2, r0
 8000f84:	693b      	ldr	r3, [r7, #16]
 8000f86:	4413      	add	r3, r2
 8000f88:	613b      	str	r3, [r7, #16]
 8000f8a:	e015      	b.n	8000fb8 <SerialOscilloscope_SendLabeledData+0x98>
        } else {
            len += sprintf(tx_buffer + len, ",%s:%d", labels[i], data_array[i]);
 8000f8c:	693b      	ldr	r3, [r7, #16]
 8000f8e:	4a1b      	ldr	r2, [pc, #108]	@ (8000ffc <SerialOscilloscope_SendLabeledData+0xdc>)
 8000f90:	1898      	adds	r0, r3, r2
 8000f92:	7dfb      	ldrb	r3, [r7, #23]
 8000f94:	009b      	lsls	r3, r3, #2
 8000f96:	68fa      	ldr	r2, [r7, #12]
 8000f98:	4413      	add	r3, r2
 8000f9a:	6819      	ldr	r1, [r3, #0]
 8000f9c:	7dfb      	ldrb	r3, [r7, #23]
 8000f9e:	005b      	lsls	r3, r3, #1
 8000fa0:	68ba      	ldr	r2, [r7, #8]
 8000fa2:	4413      	add	r3, r2
 8000fa4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fa8:	460a      	mov	r2, r1
 8000faa:	4916      	ldr	r1, [pc, #88]	@ (8001004 <SerialOscilloscope_SendLabeledData+0xe4>)
 8000fac:	f003 ffc0 	bl	8004f30 <siprintf>
 8000fb0:	4602      	mov	r2, r0
 8000fb2:	693b      	ldr	r3, [r7, #16]
 8000fb4:	4413      	add	r3, r2
 8000fb6:	613b      	str	r3, [r7, #16]
    for (i = 0; i < num_channels; i++) {
 8000fb8:	7dfb      	ldrb	r3, [r7, #23]
 8000fba:	3301      	adds	r3, #1
 8000fbc:	75fb      	strb	r3, [r7, #23]
 8000fbe:	7dfa      	ldrb	r2, [r7, #23]
 8000fc0:	79fb      	ldrb	r3, [r7, #7]
 8000fc2:	429a      	cmp	r2, r3
 8000fc4:	d3c8      	bcc.n	8000f58 <SerialOscilloscope_SendLabeledData+0x38>
        }
    }

    /* Add line ending */
    len += sprintf(tx_buffer + len, "\r\n");
 8000fc6:	693b      	ldr	r3, [r7, #16]
 8000fc8:	4a0c      	ldr	r2, [pc, #48]	@ (8000ffc <SerialOscilloscope_SendLabeledData+0xdc>)
 8000fca:	4413      	add	r3, r2
 8000fcc:	490e      	ldr	r1, [pc, #56]	@ (8001008 <SerialOscilloscope_SendLabeledData+0xe8>)
 8000fce:	4618      	mov	r0, r3
 8000fd0:	f003 ffae 	bl	8004f30 <siprintf>
 8000fd4:	4602      	mov	r2, r0
 8000fd6:	693b      	ldr	r3, [r7, #16]
 8000fd8:	4413      	add	r3, r2
 8000fda:	613b      	str	r3, [r7, #16]

    /* Send over UART */
    return HAL_UART_Transmit(osc_config.huart, (uint8_t*)tx_buffer, len, 100);
 8000fdc:	4b06      	ldr	r3, [pc, #24]	@ (8000ff8 <SerialOscilloscope_SendLabeledData+0xd8>)
 8000fde:	6818      	ldr	r0, [r3, #0]
 8000fe0:	693b      	ldr	r3, [r7, #16]
 8000fe2:	b29a      	uxth	r2, r3
 8000fe4:	2364      	movs	r3, #100	@ 0x64
 8000fe6:	4905      	ldr	r1, [pc, #20]	@ (8000ffc <SerialOscilloscope_SendLabeledData+0xdc>)
 8000fe8:	f003 fbe6 	bl	80047b8 <HAL_UART_Transmit>
 8000fec:	4603      	mov	r3, r0
}
 8000fee:	4618      	mov	r0, r3
 8000ff0:	3718      	adds	r7, #24
 8000ff2:	46bd      	mov	sp, r7
 8000ff4:	bd80      	pop	{r7, pc}
 8000ff6:	bf00      	nop
 8000ff8:	200003cc 	.word	0x200003cc
 8000ffc:	200003dc 	.word	0x200003dc
 8001000:	080058ac 	.word	0x080058ac
 8001004:	080058b4 	.word	0x080058b4
 8001008:	080058a8 	.word	0x080058a8

0800100c <SerialOscilloscope_IsTimeToSample>:

/**
 * @brief Check if it's time to sample based on the configured sample rate
 */
uint8_t SerialOscilloscope_IsTimeToSample(void)
{
 800100c:	b580      	push	{r7, lr}
 800100e:	b082      	sub	sp, #8
 8001010:	af00      	add	r7, sp, #0
    uint32_t current_time = HAL_GetTick();
 8001012:	f000 fac5 	bl	80015a0 <HAL_GetTick>
 8001016:	6078      	str	r0, [r7, #4]

    if (current_time - last_sample_time >= osc_config.sample_rate_ms) {
 8001018:	4b08      	ldr	r3, [pc, #32]	@ (800103c <SerialOscilloscope_IsTimeToSample+0x30>)
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	687a      	ldr	r2, [r7, #4]
 800101e:	1ad2      	subs	r2, r2, r3
 8001020:	4b07      	ldr	r3, [pc, #28]	@ (8001040 <SerialOscilloscope_IsTimeToSample+0x34>)
 8001022:	685b      	ldr	r3, [r3, #4]
 8001024:	429a      	cmp	r2, r3
 8001026:	d304      	bcc.n	8001032 <SerialOscilloscope_IsTimeToSample+0x26>
        last_sample_time = current_time;
 8001028:	4a04      	ldr	r2, [pc, #16]	@ (800103c <SerialOscilloscope_IsTimeToSample+0x30>)
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	6013      	str	r3, [r2, #0]
        return 1;
 800102e:	2301      	movs	r3, #1
 8001030:	e000      	b.n	8001034 <SerialOscilloscope_IsTimeToSample+0x28>
    }

    return 0;
 8001032:	2300      	movs	r3, #0
}
 8001034:	4618      	mov	r0, r3
 8001036:	3708      	adds	r7, #8
 8001038:	46bd      	mov	sp, r7
 800103a:	bd80      	pop	{r7, pc}
 800103c:	200003d8 	.word	0x200003d8
 8001040:	200003cc 	.word	0x200003cc

08001044 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b082      	sub	sp, #8
 8001048:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800104a:	2300      	movs	r3, #0
 800104c:	607b      	str	r3, [r7, #4]
 800104e:	4b10      	ldr	r3, [pc, #64]	@ (8001090 <HAL_MspInit+0x4c>)
 8001050:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001052:	4a0f      	ldr	r2, [pc, #60]	@ (8001090 <HAL_MspInit+0x4c>)
 8001054:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001058:	6453      	str	r3, [r2, #68]	@ 0x44
 800105a:	4b0d      	ldr	r3, [pc, #52]	@ (8001090 <HAL_MspInit+0x4c>)
 800105c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800105e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001062:	607b      	str	r3, [r7, #4]
 8001064:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001066:	2300      	movs	r3, #0
 8001068:	603b      	str	r3, [r7, #0]
 800106a:	4b09      	ldr	r3, [pc, #36]	@ (8001090 <HAL_MspInit+0x4c>)
 800106c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800106e:	4a08      	ldr	r2, [pc, #32]	@ (8001090 <HAL_MspInit+0x4c>)
 8001070:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001074:	6413      	str	r3, [r2, #64]	@ 0x40
 8001076:	4b06      	ldr	r3, [pc, #24]	@ (8001090 <HAL_MspInit+0x4c>)
 8001078:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800107a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800107e:	603b      	str	r3, [r7, #0]
 8001080:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001082:	2007      	movs	r0, #7
 8001084:	f000 fffe 	bl	8002084 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001088:	bf00      	nop
 800108a:	3708      	adds	r7, #8
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}
 8001090:	40023800 	.word	0x40023800

08001094 <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001094:	b580      	push	{r7, lr}
 8001096:	b08a      	sub	sp, #40	@ 0x28
 8001098:	af00      	add	r7, sp, #0
 800109a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800109c:	f107 0314 	add.w	r3, r7, #20
 80010a0:	2200      	movs	r2, #0
 80010a2:	601a      	str	r2, [r3, #0]
 80010a4:	605a      	str	r2, [r3, #4]
 80010a6:	609a      	str	r2, [r3, #8]
 80010a8:	60da      	str	r2, [r3, #12]
 80010aa:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	4a2f      	ldr	r2, [pc, #188]	@ (8001170 <HAL_ADC_MspInit+0xdc>)
 80010b2:	4293      	cmp	r3, r2
 80010b4:	d157      	bne.n	8001166 <HAL_ADC_MspInit+0xd2>
  {
    /* USER CODE BEGIN ADC1_MspInit 0 */

    /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80010b6:	2300      	movs	r3, #0
 80010b8:	613b      	str	r3, [r7, #16]
 80010ba:	4b2e      	ldr	r3, [pc, #184]	@ (8001174 <HAL_ADC_MspInit+0xe0>)
 80010bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010be:	4a2d      	ldr	r2, [pc, #180]	@ (8001174 <HAL_ADC_MspInit+0xe0>)
 80010c0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010c4:	6453      	str	r3, [r2, #68]	@ 0x44
 80010c6:	4b2b      	ldr	r3, [pc, #172]	@ (8001174 <HAL_ADC_MspInit+0xe0>)
 80010c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80010ce:	613b      	str	r3, [r7, #16]
 80010d0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80010d2:	2300      	movs	r3, #0
 80010d4:	60fb      	str	r3, [r7, #12]
 80010d6:	4b27      	ldr	r3, [pc, #156]	@ (8001174 <HAL_ADC_MspInit+0xe0>)
 80010d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010da:	4a26      	ldr	r2, [pc, #152]	@ (8001174 <HAL_ADC_MspInit+0xe0>)
 80010dc:	f043 0304 	orr.w	r3, r3, #4
 80010e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80010e2:	4b24      	ldr	r3, [pc, #144]	@ (8001174 <HAL_ADC_MspInit+0xe0>)
 80010e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010e6:	f003 0304 	and.w	r3, r3, #4
 80010ea:	60fb      	str	r3, [r7, #12]
 80010ec:	68fb      	ldr	r3, [r7, #12]
    PC2     ------> ADC1_IN12
    PC3     ------> ADC1_IN13
    PC4     ------> ADC1_IN14
    PC5     ------> ADC1_IN15
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|current_Pin;
 80010ee:	233c      	movs	r3, #60	@ 0x3c
 80010f0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010f2:	2303      	movs	r3, #3
 80010f4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f6:	2300      	movs	r3, #0
 80010f8:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80010fa:	f107 0314 	add.w	r3, r7, #20
 80010fe:	4619      	mov	r1, r3
 8001100:	481d      	ldr	r0, [pc, #116]	@ (8001178 <HAL_ADC_MspInit+0xe4>)
 8001102:	f001 fbe1 	bl	80028c8 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8001106:	4b1d      	ldr	r3, [pc, #116]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001108:	4a1d      	ldr	r2, [pc, #116]	@ (8001180 <HAL_ADC_MspInit+0xec>)
 800110a:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 800110c:	4b1b      	ldr	r3, [pc, #108]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 800110e:	2200      	movs	r2, #0
 8001110:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001112:	4b1a      	ldr	r3, [pc, #104]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001114:	2200      	movs	r2, #0
 8001116:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001118:	4b18      	ldr	r3, [pc, #96]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 800111a:	2200      	movs	r2, #0
 800111c:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 800111e:	4b17      	ldr	r3, [pc, #92]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001120:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001124:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001126:	4b15      	ldr	r3, [pc, #84]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001128:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800112c:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800112e:	4b13      	ldr	r3, [pc, #76]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001130:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001134:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8001136:	4b11      	ldr	r3, [pc, #68]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001138:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800113c:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 800113e:	4b0f      	ldr	r3, [pc, #60]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001140:	2200      	movs	r2, #0
 8001142:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001144:	4b0d      	ldr	r3, [pc, #52]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001146:	2200      	movs	r2, #0
 8001148:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 800114a:	480c      	ldr	r0, [pc, #48]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 800114c:	f000 ffdc 	bl	8002108 <HAL_DMA_Init>
 8001150:	4603      	mov	r3, r0
 8001152:	2b00      	cmp	r3, #0
 8001154:	d001      	beq.n	800115a <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 8001156:	f7ff fdd9 	bl	8000d0c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	4a07      	ldr	r2, [pc, #28]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 800115e:	639a      	str	r2, [r3, #56]	@ 0x38
 8001160:	4a06      	ldr	r2, [pc, #24]	@ (800117c <HAL_ADC_MspInit+0xe8>)
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 8001166:	bf00      	nop
 8001168:	3728      	adds	r7, #40	@ 0x28
 800116a:	46bd      	mov	sp, r7
 800116c:	bd80      	pop	{r7, pc}
 800116e:	bf00      	nop
 8001170:	40012000 	.word	0x40012000
 8001174:	40023800 	.word	0x40023800
 8001178:	40020800 	.word	0x40020800
 800117c:	20000124 	.word	0x20000124
 8001180:	40026410 	.word	0x40026410

08001184 <HAL_TIM_Encoder_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_encoder: TIM_Encoder handle pointer
  * @retval None
  */
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8001184:	b580      	push	{r7, lr}
 8001186:	b08a      	sub	sp, #40	@ 0x28
 8001188:	af00      	add	r7, sp, #0
 800118a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800118c:	f107 0314 	add.w	r3, r7, #20
 8001190:	2200      	movs	r2, #0
 8001192:	601a      	str	r2, [r3, #0]
 8001194:	605a      	str	r2, [r3, #4]
 8001196:	609a      	str	r2, [r3, #8]
 8001198:	60da      	str	r2, [r3, #12]
 800119a:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM1)
 800119c:	687b      	ldr	r3, [r7, #4]
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	4a19      	ldr	r2, [pc, #100]	@ (8001208 <HAL_TIM_Encoder_MspInit+0x84>)
 80011a2:	4293      	cmp	r3, r2
 80011a4:	d12c      	bne.n	8001200 <HAL_TIM_Encoder_MspInit+0x7c>
  {
    /* USER CODE BEGIN TIM1_MspInit 0 */

    /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80011a6:	2300      	movs	r3, #0
 80011a8:	613b      	str	r3, [r7, #16]
 80011aa:	4b18      	ldr	r3, [pc, #96]	@ (800120c <HAL_TIM_Encoder_MspInit+0x88>)
 80011ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80011ae:	4a17      	ldr	r2, [pc, #92]	@ (800120c <HAL_TIM_Encoder_MspInit+0x88>)
 80011b0:	f043 0301 	orr.w	r3, r3, #1
 80011b4:	6453      	str	r3, [r2, #68]	@ 0x44
 80011b6:	4b15      	ldr	r3, [pc, #84]	@ (800120c <HAL_TIM_Encoder_MspInit+0x88>)
 80011b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80011ba:	f003 0301 	and.w	r3, r3, #1
 80011be:	613b      	str	r3, [r7, #16]
 80011c0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80011c2:	2300      	movs	r3, #0
 80011c4:	60fb      	str	r3, [r7, #12]
 80011c6:	4b11      	ldr	r3, [pc, #68]	@ (800120c <HAL_TIM_Encoder_MspInit+0x88>)
 80011c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ca:	4a10      	ldr	r2, [pc, #64]	@ (800120c <HAL_TIM_Encoder_MspInit+0x88>)
 80011cc:	f043 0301 	orr.w	r3, r3, #1
 80011d0:	6313      	str	r3, [r2, #48]	@ 0x30
 80011d2:	4b0e      	ldr	r3, [pc, #56]	@ (800120c <HAL_TIM_Encoder_MspInit+0x88>)
 80011d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011d6:	f003 0301 	and.w	r3, r3, #1
 80011da:	60fb      	str	r3, [r7, #12]
 80011dc:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = EncoderCh2_Pin|EncoderCh1_Pin;
 80011de:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80011e2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011e4:	2302      	movs	r3, #2
 80011e6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011e8:	2300      	movs	r3, #0
 80011ea:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011ec:	2300      	movs	r3, #0
 80011ee:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 80011f0:	2301      	movs	r3, #1
 80011f2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011f4:	f107 0314 	add.w	r3, r7, #20
 80011f8:	4619      	mov	r1, r3
 80011fa:	4805      	ldr	r0, [pc, #20]	@ (8001210 <HAL_TIM_Encoder_MspInit+0x8c>)
 80011fc:	f001 fb64 	bl	80028c8 <HAL_GPIO_Init>

    /* USER CODE END TIM1_MspInit 1 */

  }

}
 8001200:	bf00      	nop
 8001202:	3728      	adds	r7, #40	@ 0x28
 8001204:	46bd      	mov	sp, r7
 8001206:	bd80      	pop	{r7, pc}
 8001208:	40010000 	.word	0x40010000
 800120c:	40023800 	.word	0x40023800
 8001210:	40020000 	.word	0x40020000

08001214 <HAL_TIM_PWM_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_pwm: TIM_PWM handle pointer
  * @retval None
  */
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001214:	b580      	push	{r7, lr}
 8001216:	b084      	sub	sp, #16
 8001218:	af00      	add	r7, sp, #0
 800121a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM4)
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	4a0e      	ldr	r2, [pc, #56]	@ (800125c <HAL_TIM_PWM_MspInit+0x48>)
 8001222:	4293      	cmp	r3, r2
 8001224:	d115      	bne.n	8001252 <HAL_TIM_PWM_MspInit+0x3e>
  {
    /* USER CODE BEGIN TIM4_MspInit 0 */

    /* USER CODE END TIM4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001226:	2300      	movs	r3, #0
 8001228:	60fb      	str	r3, [r7, #12]
 800122a:	4b0d      	ldr	r3, [pc, #52]	@ (8001260 <HAL_TIM_PWM_MspInit+0x4c>)
 800122c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800122e:	4a0c      	ldr	r2, [pc, #48]	@ (8001260 <HAL_TIM_PWM_MspInit+0x4c>)
 8001230:	f043 0304 	orr.w	r3, r3, #4
 8001234:	6413      	str	r3, [r2, #64]	@ 0x40
 8001236:	4b0a      	ldr	r3, [pc, #40]	@ (8001260 <HAL_TIM_PWM_MspInit+0x4c>)
 8001238:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800123a:	f003 0304 	and.w	r3, r3, #4
 800123e:	60fb      	str	r3, [r7, #12]
 8001240:	68fb      	ldr	r3, [r7, #12]
    /* TIM4 interrupt Init */
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001242:	2200      	movs	r2, #0
 8001244:	2100      	movs	r1, #0
 8001246:	201e      	movs	r0, #30
 8001248:	f000 ff27 	bl	800209a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 800124c:	201e      	movs	r0, #30
 800124e:	f000 ff40 	bl	80020d2 <HAL_NVIC_EnableIRQ>

    /* USER CODE END TIM4_MspInit 1 */

  }

}
 8001252:	bf00      	nop
 8001254:	3710      	adds	r7, #16
 8001256:	46bd      	mov	sp, r7
 8001258:	bd80      	pop	{r7, pc}
 800125a:	bf00      	nop
 800125c:	40000800 	.word	0x40000800
 8001260:	40023800 	.word	0x40023800

08001264 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001264:	b580      	push	{r7, lr}
 8001266:	b088      	sub	sp, #32
 8001268:	af00      	add	r7, sp, #0
 800126a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800126c:	f107 030c 	add.w	r3, r7, #12
 8001270:	2200      	movs	r2, #0
 8001272:	601a      	str	r2, [r3, #0]
 8001274:	605a      	str	r2, [r3, #4]
 8001276:	609a      	str	r2, [r3, #8]
 8001278:	60da      	str	r2, [r3, #12]
 800127a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM4)
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	4a12      	ldr	r2, [pc, #72]	@ (80012cc <HAL_TIM_MspPostInit+0x68>)
 8001282:	4293      	cmp	r3, r2
 8001284:	d11d      	bne.n	80012c2 <HAL_TIM_MspPostInit+0x5e>
  {
    /* USER CODE BEGIN TIM4_MspPostInit 0 */

    /* USER CODE END TIM4_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001286:	2300      	movs	r3, #0
 8001288:	60bb      	str	r3, [r7, #8]
 800128a:	4b11      	ldr	r3, [pc, #68]	@ (80012d0 <HAL_TIM_MspPostInit+0x6c>)
 800128c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800128e:	4a10      	ldr	r2, [pc, #64]	@ (80012d0 <HAL_TIM_MspPostInit+0x6c>)
 8001290:	f043 0302 	orr.w	r3, r3, #2
 8001294:	6313      	str	r3, [r2, #48]	@ 0x30
 8001296:	4b0e      	ldr	r3, [pc, #56]	@ (80012d0 <HAL_TIM_MspPostInit+0x6c>)
 8001298:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800129a:	f003 0302 	and.w	r3, r3, #2
 800129e:	60bb      	str	r3, [r7, #8]
 80012a0:	68bb      	ldr	r3, [r7, #8]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    */
    GPIO_InitStruct.Pin = PWM_Pin;
 80012a2:	2340      	movs	r3, #64	@ 0x40
 80012a4:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012a6:	2302      	movs	r3, #2
 80012a8:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012aa:	2300      	movs	r3, #0
 80012ac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012ae:	2300      	movs	r3, #0
 80012b0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80012b2:	2302      	movs	r3, #2
 80012b4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(PWM_GPIO_Port, &GPIO_InitStruct);
 80012b6:	f107 030c 	add.w	r3, r7, #12
 80012ba:	4619      	mov	r1, r3
 80012bc:	4805      	ldr	r0, [pc, #20]	@ (80012d4 <HAL_TIM_MspPostInit+0x70>)
 80012be:	f001 fb03 	bl	80028c8 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM4_MspPostInit 1 */

    /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 80012c2:	bf00      	nop
 80012c4:	3720      	adds	r7, #32
 80012c6:	46bd      	mov	sp, r7
 80012c8:	bd80      	pop	{r7, pc}
 80012ca:	bf00      	nop
 80012cc:	40000800 	.word	0x40000800
 80012d0:	40023800 	.word	0x40023800
 80012d4:	40020400 	.word	0x40020400

080012d8 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80012d8:	b580      	push	{r7, lr}
 80012da:	b08a      	sub	sp, #40	@ 0x28
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012e0:	f107 0314 	add.w	r3, r7, #20
 80012e4:	2200      	movs	r2, #0
 80012e6:	601a      	str	r2, [r3, #0]
 80012e8:	605a      	str	r2, [r3, #4]
 80012ea:	609a      	str	r2, [r3, #8]
 80012ec:	60da      	str	r2, [r3, #12]
 80012ee:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	4a19      	ldr	r2, [pc, #100]	@ (800135c <HAL_UART_MspInit+0x84>)
 80012f6:	4293      	cmp	r3, r2
 80012f8:	d12b      	bne.n	8001352 <HAL_UART_MspInit+0x7a>
  {
    /* USER CODE BEGIN USART2_MspInit 0 */

    /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80012fa:	2300      	movs	r3, #0
 80012fc:	613b      	str	r3, [r7, #16]
 80012fe:	4b18      	ldr	r3, [pc, #96]	@ (8001360 <HAL_UART_MspInit+0x88>)
 8001300:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001302:	4a17      	ldr	r2, [pc, #92]	@ (8001360 <HAL_UART_MspInit+0x88>)
 8001304:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001308:	6413      	str	r3, [r2, #64]	@ 0x40
 800130a:	4b15      	ldr	r3, [pc, #84]	@ (8001360 <HAL_UART_MspInit+0x88>)
 800130c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800130e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001312:	613b      	str	r3, [r7, #16]
 8001314:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001316:	2300      	movs	r3, #0
 8001318:	60fb      	str	r3, [r7, #12]
 800131a:	4b11      	ldr	r3, [pc, #68]	@ (8001360 <HAL_UART_MspInit+0x88>)
 800131c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800131e:	4a10      	ldr	r2, [pc, #64]	@ (8001360 <HAL_UART_MspInit+0x88>)
 8001320:	f043 0301 	orr.w	r3, r3, #1
 8001324:	6313      	str	r3, [r2, #48]	@ 0x30
 8001326:	4b0e      	ldr	r3, [pc, #56]	@ (8001360 <HAL_UART_MspInit+0x88>)
 8001328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800132a:	f003 0301 	and.w	r3, r3, #1
 800132e:	60fb      	str	r3, [r7, #12]
 8001330:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8001332:	230c      	movs	r3, #12
 8001334:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001336:	2302      	movs	r3, #2
 8001338:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800133a:	2300      	movs	r3, #0
 800133c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800133e:	2303      	movs	r3, #3
 8001340:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001342:	2307      	movs	r3, #7
 8001344:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001346:	f107 0314 	add.w	r3, r7, #20
 800134a:	4619      	mov	r1, r3
 800134c:	4805      	ldr	r0, [pc, #20]	@ (8001364 <HAL_UART_MspInit+0x8c>)
 800134e:	f001 fabb 	bl	80028c8 <HAL_GPIO_Init>

    /* USER CODE END USART2_MspInit 1 */

  }

}
 8001352:	bf00      	nop
 8001354:	3728      	adds	r7, #40	@ 0x28
 8001356:	46bd      	mov	sp, r7
 8001358:	bd80      	pop	{r7, pc}
 800135a:	bf00      	nop
 800135c:	40004400 	.word	0x40004400
 8001360:	40023800 	.word	0x40023800
 8001364:	40020000 	.word	0x40020000

08001368 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001368:	b480      	push	{r7}
 800136a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800136c:	bf00      	nop
 800136e:	e7fd      	b.n	800136c <NMI_Handler+0x4>

08001370 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001370:	b480      	push	{r7}
 8001372:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001374:	bf00      	nop
 8001376:	e7fd      	b.n	8001374 <HardFault_Handler+0x4>

08001378 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001378:	b480      	push	{r7}
 800137a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800137c:	bf00      	nop
 800137e:	e7fd      	b.n	800137c <MemManage_Handler+0x4>

08001380 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001380:	b480      	push	{r7}
 8001382:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001384:	bf00      	nop
 8001386:	e7fd      	b.n	8001384 <BusFault_Handler+0x4>

08001388 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001388:	b480      	push	{r7}
 800138a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800138c:	bf00      	nop
 800138e:	e7fd      	b.n	800138c <UsageFault_Handler+0x4>

08001390 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001390:	b480      	push	{r7}
 8001392:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001394:	bf00      	nop
 8001396:	46bd      	mov	sp, r7
 8001398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800139c:	4770      	bx	lr

0800139e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800139e:	b480      	push	{r7}
 80013a0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80013a2:	bf00      	nop
 80013a4:	46bd      	mov	sp, r7
 80013a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013aa:	4770      	bx	lr

080013ac <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80013ac:	b480      	push	{r7}
 80013ae:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80013b0:	bf00      	nop
 80013b2:	46bd      	mov	sp, r7
 80013b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b8:	4770      	bx	lr

080013ba <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80013ba:	b580      	push	{r7, lr}
 80013bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80013be:	f000 f8db 	bl	8001578 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80013c2:	bf00      	nop
 80013c4:	bd80      	pop	{r7, pc}
	...

080013c8 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 80013c8:	b580      	push	{r7, lr}
 80013ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 80013cc:	4802      	ldr	r0, [pc, #8]	@ (80013d8 <TIM4_IRQHandler+0x10>)
 80013ce:	f002 fcad 	bl	8003d2c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 80013d2:	bf00      	nop
 80013d4:	bd80      	pop	{r7, pc}
 80013d6:	bf00      	nop
 80013d8:	200001cc 	.word	0x200001cc

080013dc <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 80013dc:	b580      	push	{r7, lr}
 80013de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80013e0:	4802      	ldr	r0, [pc, #8]	@ (80013ec <DMA2_Stream0_IRQHandler+0x10>)
 80013e2:	f001 f807 	bl	80023f4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 80013e6:	bf00      	nop
 80013e8:	bd80      	pop	{r7, pc}
 80013ea:	bf00      	nop
 80013ec:	20000124 	.word	0x20000124

080013f0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b086      	sub	sp, #24
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80013f8:	4a14      	ldr	r2, [pc, #80]	@ (800144c <_sbrk+0x5c>)
 80013fa:	4b15      	ldr	r3, [pc, #84]	@ (8001450 <_sbrk+0x60>)
 80013fc:	1ad3      	subs	r3, r2, r3
 80013fe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001400:	697b      	ldr	r3, [r7, #20]
 8001402:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001404:	4b13      	ldr	r3, [pc, #76]	@ (8001454 <_sbrk+0x64>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	2b00      	cmp	r3, #0
 800140a:	d102      	bne.n	8001412 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800140c:	4b11      	ldr	r3, [pc, #68]	@ (8001454 <_sbrk+0x64>)
 800140e:	4a12      	ldr	r2, [pc, #72]	@ (8001458 <_sbrk+0x68>)
 8001410:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001412:	4b10      	ldr	r3, [pc, #64]	@ (8001454 <_sbrk+0x64>)
 8001414:	681a      	ldr	r2, [r3, #0]
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	4413      	add	r3, r2
 800141a:	693a      	ldr	r2, [r7, #16]
 800141c:	429a      	cmp	r2, r3
 800141e:	d207      	bcs.n	8001430 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001420:	f003 fdb0 	bl	8004f84 <__errno>
 8001424:	4603      	mov	r3, r0
 8001426:	220c      	movs	r2, #12
 8001428:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800142a:	f04f 33ff 	mov.w	r3, #4294967295
 800142e:	e009      	b.n	8001444 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001430:	4b08      	ldr	r3, [pc, #32]	@ (8001454 <_sbrk+0x64>)
 8001432:	681b      	ldr	r3, [r3, #0]
 8001434:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001436:	4b07      	ldr	r3, [pc, #28]	@ (8001454 <_sbrk+0x64>)
 8001438:	681a      	ldr	r2, [r3, #0]
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	4413      	add	r3, r2
 800143e:	4a05      	ldr	r2, [pc, #20]	@ (8001454 <_sbrk+0x64>)
 8001440:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001442:	68fb      	ldr	r3, [r7, #12]
}
 8001444:	4618      	mov	r0, r3
 8001446:	3718      	adds	r7, #24
 8001448:	46bd      	mov	sp, r7
 800144a:	bd80      	pop	{r7, pc}
 800144c:	20020000 	.word	0x20020000
 8001450:	00000400 	.word	0x00000400
 8001454:	2000045c 	.word	0x2000045c
 8001458:	200005b0 	.word	0x200005b0

0800145c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800145c:	b480      	push	{r7}
 800145e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001460:	4b06      	ldr	r3, [pc, #24]	@ (800147c <SystemInit+0x20>)
 8001462:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001466:	4a05      	ldr	r2, [pc, #20]	@ (800147c <SystemInit+0x20>)
 8001468:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800146c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001470:	bf00      	nop
 8001472:	46bd      	mov	sp, r7
 8001474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001478:	4770      	bx	lr
 800147a:	bf00      	nop
 800147c:	e000ed00 	.word	0xe000ed00

08001480 <Reset_Handler>:
 8001480:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80014b8 <LoopFillZerobss+0xe>
 8001484:	f7ff ffea 	bl	800145c <SystemInit>
 8001488:	480c      	ldr	r0, [pc, #48]	@ (80014bc <LoopFillZerobss+0x12>)
 800148a:	490d      	ldr	r1, [pc, #52]	@ (80014c0 <LoopFillZerobss+0x16>)
 800148c:	4a0d      	ldr	r2, [pc, #52]	@ (80014c4 <LoopFillZerobss+0x1a>)
 800148e:	2300      	movs	r3, #0
 8001490:	e002      	b.n	8001498 <LoopCopyDataInit>

08001492 <CopyDataInit>:
 8001492:	58d4      	ldr	r4, [r2, r3]
 8001494:	50c4      	str	r4, [r0, r3]
 8001496:	3304      	adds	r3, #4

08001498 <LoopCopyDataInit>:
 8001498:	18c4      	adds	r4, r0, r3
 800149a:	428c      	cmp	r4, r1
 800149c:	d3f9      	bcc.n	8001492 <CopyDataInit>
 800149e:	4a0a      	ldr	r2, [pc, #40]	@ (80014c8 <LoopFillZerobss+0x1e>)
 80014a0:	4c0a      	ldr	r4, [pc, #40]	@ (80014cc <LoopFillZerobss+0x22>)
 80014a2:	2300      	movs	r3, #0
 80014a4:	e001      	b.n	80014aa <LoopFillZerobss>

080014a6 <FillZerobss>:
 80014a6:	6013      	str	r3, [r2, #0]
 80014a8:	3204      	adds	r2, #4

080014aa <LoopFillZerobss>:
 80014aa:	42a2      	cmp	r2, r4
 80014ac:	d3fb      	bcc.n	80014a6 <FillZerobss>
 80014ae:	f003 fd6f 	bl	8004f90 <__libc_init_array>
 80014b2:	f7ff f911 	bl	80006d8 <main>
 80014b6:	4770      	bx	lr
 80014b8:	20020000 	.word	0x20020000
 80014bc:	20000000 	.word	0x20000000
 80014c0:	200000c0 	.word	0x200000c0
 80014c4:	08005920 	.word	0x08005920
 80014c8:	200000c0 	.word	0x200000c0
 80014cc:	200005ac 	.word	0x200005ac

080014d0 <ADC_IRQHandler>:
 80014d0:	e7fe      	b.n	80014d0 <ADC_IRQHandler>
	...

080014d4 <HAL_Init>:
 80014d4:	b580      	push	{r7, lr}
 80014d6:	af00      	add	r7, sp, #0
 80014d8:	4b0e      	ldr	r3, [pc, #56]	@ (8001514 <HAL_Init+0x40>)
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	4a0d      	ldr	r2, [pc, #52]	@ (8001514 <HAL_Init+0x40>)
 80014de:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80014e2:	6013      	str	r3, [r2, #0]
 80014e4:	4b0b      	ldr	r3, [pc, #44]	@ (8001514 <HAL_Init+0x40>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4a0a      	ldr	r2, [pc, #40]	@ (8001514 <HAL_Init+0x40>)
 80014ea:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80014ee:	6013      	str	r3, [r2, #0]
 80014f0:	4b08      	ldr	r3, [pc, #32]	@ (8001514 <HAL_Init+0x40>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4a07      	ldr	r2, [pc, #28]	@ (8001514 <HAL_Init+0x40>)
 80014f6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80014fa:	6013      	str	r3, [r2, #0]
 80014fc:	2003      	movs	r0, #3
 80014fe:	f000 fdc1 	bl	8002084 <HAL_NVIC_SetPriorityGrouping>
 8001502:	2000      	movs	r0, #0
 8001504:	f000 f808 	bl	8001518 <HAL_InitTick>
 8001508:	f7ff fd9c 	bl	8001044 <HAL_MspInit>
 800150c:	2300      	movs	r3, #0
 800150e:	4618      	mov	r0, r3
 8001510:	bd80      	pop	{r7, pc}
 8001512:	bf00      	nop
 8001514:	40023c00 	.word	0x40023c00

08001518 <HAL_InitTick>:
 8001518:	b580      	push	{r7, lr}
 800151a:	b082      	sub	sp, #8
 800151c:	af00      	add	r7, sp, #0
 800151e:	6078      	str	r0, [r7, #4]
 8001520:	4b12      	ldr	r3, [pc, #72]	@ (800156c <HAL_InitTick+0x54>)
 8001522:	681a      	ldr	r2, [r3, #0]
 8001524:	4b12      	ldr	r3, [pc, #72]	@ (8001570 <HAL_InitTick+0x58>)
 8001526:	781b      	ldrb	r3, [r3, #0]
 8001528:	4619      	mov	r1, r3
 800152a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800152e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001532:	fbb2 f3f3 	udiv	r3, r2, r3
 8001536:	4618      	mov	r0, r3
 8001538:	f000 fdd9 	bl	80020ee <HAL_SYSTICK_Config>
 800153c:	4603      	mov	r3, r0
 800153e:	2b00      	cmp	r3, #0
 8001540:	d001      	beq.n	8001546 <HAL_InitTick+0x2e>
 8001542:	2301      	movs	r3, #1
 8001544:	e00e      	b.n	8001564 <HAL_InitTick+0x4c>
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	2b0f      	cmp	r3, #15
 800154a:	d80a      	bhi.n	8001562 <HAL_InitTick+0x4a>
 800154c:	2200      	movs	r2, #0
 800154e:	6879      	ldr	r1, [r7, #4]
 8001550:	f04f 30ff 	mov.w	r0, #4294967295
 8001554:	f000 fda1 	bl	800209a <HAL_NVIC_SetPriority>
 8001558:	4a06      	ldr	r2, [pc, #24]	@ (8001574 <HAL_InitTick+0x5c>)
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	6013      	str	r3, [r2, #0]
 800155e:	2300      	movs	r3, #0
 8001560:	e000      	b.n	8001564 <HAL_InitTick+0x4c>
 8001562:	2301      	movs	r3, #1
 8001564:	4618      	mov	r0, r3
 8001566:	3708      	adds	r7, #8
 8001568:	46bd      	mov	sp, r7
 800156a:	bd80      	pop	{r7, pc}
 800156c:	20000064 	.word	0x20000064
 8001570:	2000006c 	.word	0x2000006c
 8001574:	20000068 	.word	0x20000068

08001578 <HAL_IncTick>:
 8001578:	b480      	push	{r7}
 800157a:	af00      	add	r7, sp, #0
 800157c:	4b06      	ldr	r3, [pc, #24]	@ (8001598 <HAL_IncTick+0x20>)
 800157e:	781b      	ldrb	r3, [r3, #0]
 8001580:	461a      	mov	r2, r3
 8001582:	4b06      	ldr	r3, [pc, #24]	@ (800159c <HAL_IncTick+0x24>)
 8001584:	681b      	ldr	r3, [r3, #0]
 8001586:	4413      	add	r3, r2
 8001588:	4a04      	ldr	r2, [pc, #16]	@ (800159c <HAL_IncTick+0x24>)
 800158a:	6013      	str	r3, [r2, #0]
 800158c:	bf00      	nop
 800158e:	46bd      	mov	sp, r7
 8001590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001594:	4770      	bx	lr
 8001596:	bf00      	nop
 8001598:	2000006c 	.word	0x2000006c
 800159c:	20000460 	.word	0x20000460

080015a0 <HAL_GetTick>:
 80015a0:	b480      	push	{r7}
 80015a2:	af00      	add	r7, sp, #0
 80015a4:	4b03      	ldr	r3, [pc, #12]	@ (80015b4 <HAL_GetTick+0x14>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	4618      	mov	r0, r3
 80015aa:	46bd      	mov	sp, r7
 80015ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015b0:	4770      	bx	lr
 80015b2:	bf00      	nop
 80015b4:	20000460 	.word	0x20000460

080015b8 <HAL_Delay>:
 80015b8:	b580      	push	{r7, lr}
 80015ba:	b084      	sub	sp, #16
 80015bc:	af00      	add	r7, sp, #0
 80015be:	6078      	str	r0, [r7, #4]
 80015c0:	f7ff ffee 	bl	80015a0 <HAL_GetTick>
 80015c4:	60b8      	str	r0, [r7, #8]
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	60fb      	str	r3, [r7, #12]
 80015ca:	68fb      	ldr	r3, [r7, #12]
 80015cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80015d0:	d005      	beq.n	80015de <HAL_Delay+0x26>
 80015d2:	4b0a      	ldr	r3, [pc, #40]	@ (80015fc <HAL_Delay+0x44>)
 80015d4:	781b      	ldrb	r3, [r3, #0]
 80015d6:	461a      	mov	r2, r3
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	4413      	add	r3, r2
 80015dc:	60fb      	str	r3, [r7, #12]
 80015de:	bf00      	nop
 80015e0:	f7ff ffde 	bl	80015a0 <HAL_GetTick>
 80015e4:	4602      	mov	r2, r0
 80015e6:	68bb      	ldr	r3, [r7, #8]
 80015e8:	1ad3      	subs	r3, r2, r3
 80015ea:	68fa      	ldr	r2, [r7, #12]
 80015ec:	429a      	cmp	r2, r3
 80015ee:	d8f7      	bhi.n	80015e0 <HAL_Delay+0x28>
 80015f0:	bf00      	nop
 80015f2:	bf00      	nop
 80015f4:	3710      	adds	r7, #16
 80015f6:	46bd      	mov	sp, r7
 80015f8:	bd80      	pop	{r7, pc}
 80015fa:	bf00      	nop
 80015fc:	2000006c 	.word	0x2000006c

08001600 <HAL_ADC_Init>:
 8001600:	b580      	push	{r7, lr}
 8001602:	b084      	sub	sp, #16
 8001604:	af00      	add	r7, sp, #0
 8001606:	6078      	str	r0, [r7, #4]
 8001608:	2300      	movs	r3, #0
 800160a:	73fb      	strb	r3, [r7, #15]
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	2b00      	cmp	r3, #0
 8001610:	d101      	bne.n	8001616 <HAL_ADC_Init+0x16>
 8001612:	2301      	movs	r3, #1
 8001614:	e033      	b.n	800167e <HAL_ADC_Init+0x7e>
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800161a:	2b00      	cmp	r3, #0
 800161c:	d109      	bne.n	8001632 <HAL_ADC_Init+0x32>
 800161e:	6878      	ldr	r0, [r7, #4]
 8001620:	f7ff fd38 	bl	8001094 <HAL_ADC_MspInit>
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	2200      	movs	r2, #0
 8001628:	645a      	str	r2, [r3, #68]	@ 0x44
 800162a:	687b      	ldr	r3, [r7, #4]
 800162c:	2200      	movs	r2, #0
 800162e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001636:	f003 0310 	and.w	r3, r3, #16
 800163a:	2b00      	cmp	r3, #0
 800163c:	d118      	bne.n	8001670 <HAL_ADC_Init+0x70>
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001642:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001646:	f023 0302 	bic.w	r3, r3, #2
 800164a:	f043 0202 	orr.w	r2, r3, #2
 800164e:	687b      	ldr	r3, [r7, #4]
 8001650:	641a      	str	r2, [r3, #64]	@ 0x40
 8001652:	6878      	ldr	r0, [r7, #4]
 8001654:	f000 fac8 	bl	8001be8 <ADC_Init>
 8001658:	687b      	ldr	r3, [r7, #4]
 800165a:	2200      	movs	r2, #0
 800165c:	645a      	str	r2, [r3, #68]	@ 0x44
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001662:	f023 0303 	bic.w	r3, r3, #3
 8001666:	f043 0201 	orr.w	r2, r3, #1
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	641a      	str	r2, [r3, #64]	@ 0x40
 800166e:	e001      	b.n	8001674 <HAL_ADC_Init+0x74>
 8001670:	2301      	movs	r3, #1
 8001672:	73fb      	strb	r3, [r7, #15]
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	2200      	movs	r2, #0
 8001678:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800167c:	7bfb      	ldrb	r3, [r7, #15]
 800167e:	4618      	mov	r0, r3
 8001680:	3710      	adds	r7, #16
 8001682:	46bd      	mov	sp, r7
 8001684:	bd80      	pop	{r7, pc}
	...

08001688 <HAL_ADC_Start_DMA>:
 8001688:	b580      	push	{r7, lr}
 800168a:	b086      	sub	sp, #24
 800168c:	af00      	add	r7, sp, #0
 800168e:	60f8      	str	r0, [r7, #12]
 8001690:	60b9      	str	r1, [r7, #8]
 8001692:	607a      	str	r2, [r7, #4]
 8001694:	2300      	movs	r3, #0
 8001696:	613b      	str	r3, [r7, #16]
 8001698:	68fb      	ldr	r3, [r7, #12]
 800169a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800169e:	2b01      	cmp	r3, #1
 80016a0:	d101      	bne.n	80016a6 <HAL_ADC_Start_DMA+0x1e>
 80016a2:	2302      	movs	r3, #2
 80016a4:	e0e9      	b.n	800187a <HAL_ADC_Start_DMA+0x1f2>
 80016a6:	68fb      	ldr	r3, [r7, #12]
 80016a8:	2201      	movs	r2, #1
 80016aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80016ae:	68fb      	ldr	r3, [r7, #12]
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	689b      	ldr	r3, [r3, #8]
 80016b4:	f003 0301 	and.w	r3, r3, #1
 80016b8:	2b01      	cmp	r3, #1
 80016ba:	d018      	beq.n	80016ee <HAL_ADC_Start_DMA+0x66>
 80016bc:	68fb      	ldr	r3, [r7, #12]
 80016be:	681b      	ldr	r3, [r3, #0]
 80016c0:	689a      	ldr	r2, [r3, #8]
 80016c2:	68fb      	ldr	r3, [r7, #12]
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	f042 0201 	orr.w	r2, r2, #1
 80016ca:	609a      	str	r2, [r3, #8]
 80016cc:	4b6d      	ldr	r3, [pc, #436]	@ (8001884 <HAL_ADC_Start_DMA+0x1fc>)
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	4a6d      	ldr	r2, [pc, #436]	@ (8001888 <HAL_ADC_Start_DMA+0x200>)
 80016d2:	fba2 2303 	umull	r2, r3, r2, r3
 80016d6:	0c9a      	lsrs	r2, r3, #18
 80016d8:	4613      	mov	r3, r2
 80016da:	005b      	lsls	r3, r3, #1
 80016dc:	4413      	add	r3, r2
 80016de:	613b      	str	r3, [r7, #16]
 80016e0:	e002      	b.n	80016e8 <HAL_ADC_Start_DMA+0x60>
 80016e2:	693b      	ldr	r3, [r7, #16]
 80016e4:	3b01      	subs	r3, #1
 80016e6:	613b      	str	r3, [r7, #16]
 80016e8:	693b      	ldr	r3, [r7, #16]
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d1f9      	bne.n	80016e2 <HAL_ADC_Start_DMA+0x5a>
 80016ee:	68fb      	ldr	r3, [r7, #12]
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	689b      	ldr	r3, [r3, #8]
 80016f4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80016f8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80016fc:	d107      	bne.n	800170e <HAL_ADC_Start_DMA+0x86>
 80016fe:	68fb      	ldr	r3, [r7, #12]
 8001700:	681b      	ldr	r3, [r3, #0]
 8001702:	689a      	ldr	r2, [r3, #8]
 8001704:	68fb      	ldr	r3, [r7, #12]
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800170c:	609a      	str	r2, [r3, #8]
 800170e:	68fb      	ldr	r3, [r7, #12]
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	689b      	ldr	r3, [r3, #8]
 8001714:	f003 0301 	and.w	r3, r3, #1
 8001718:	2b01      	cmp	r3, #1
 800171a:	f040 80a1 	bne.w	8001860 <HAL_ADC_Start_DMA+0x1d8>
 800171e:	68fb      	ldr	r3, [r7, #12]
 8001720:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001722:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001726:	f023 0301 	bic.w	r3, r3, #1
 800172a:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	641a      	str	r2, [r3, #64]	@ 0x40
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	685b      	ldr	r3, [r3, #4]
 8001738:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800173c:	2b00      	cmp	r3, #0
 800173e:	d007      	beq.n	8001750 <HAL_ADC_Start_DMA+0xc8>
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001744:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001748:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800174c:	68fb      	ldr	r3, [r7, #12]
 800174e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001750:	68fb      	ldr	r3, [r7, #12]
 8001752:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001754:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001758:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800175c:	d106      	bne.n	800176c <HAL_ADC_Start_DMA+0xe4>
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001762:	f023 0206 	bic.w	r2, r3, #6
 8001766:	68fb      	ldr	r3, [r7, #12]
 8001768:	645a      	str	r2, [r3, #68]	@ 0x44
 800176a:	e002      	b.n	8001772 <HAL_ADC_Start_DMA+0xea>
 800176c:	68fb      	ldr	r3, [r7, #12]
 800176e:	2200      	movs	r2, #0
 8001770:	645a      	str	r2, [r3, #68]	@ 0x44
 8001772:	68fb      	ldr	r3, [r7, #12]
 8001774:	2200      	movs	r2, #0
 8001776:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800177a:	4b44      	ldr	r3, [pc, #272]	@ (800188c <HAL_ADC_Start_DMA+0x204>)
 800177c:	617b      	str	r3, [r7, #20]
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001782:	4a43      	ldr	r2, [pc, #268]	@ (8001890 <HAL_ADC_Start_DMA+0x208>)
 8001784:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001786:	68fb      	ldr	r3, [r7, #12]
 8001788:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800178a:	4a42      	ldr	r2, [pc, #264]	@ (8001894 <HAL_ADC_Start_DMA+0x20c>)
 800178c:	641a      	str	r2, [r3, #64]	@ 0x40
 800178e:	68fb      	ldr	r3, [r7, #12]
 8001790:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001792:	4a41      	ldr	r2, [pc, #260]	@ (8001898 <HAL_ADC_Start_DMA+0x210>)
 8001794:	64da      	str	r2, [r3, #76]	@ 0x4c
 8001796:	68fb      	ldr	r3, [r7, #12]
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 800179e:	601a      	str	r2, [r3, #0]
 80017a0:	68fb      	ldr	r3, [r7, #12]
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	685a      	ldr	r2, [r3, #4]
 80017a6:	68fb      	ldr	r3, [r7, #12]
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80017ae:	605a      	str	r2, [r3, #4]
 80017b0:	68fb      	ldr	r3, [r7, #12]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	689a      	ldr	r2, [r3, #8]
 80017b6:	68fb      	ldr	r3, [r7, #12]
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80017be:	609a      	str	r2, [r3, #8]
 80017c0:	68fb      	ldr	r3, [r7, #12]
 80017c2:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	334c      	adds	r3, #76	@ 0x4c
 80017ca:	4619      	mov	r1, r3
 80017cc:	68ba      	ldr	r2, [r7, #8]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	f000 fd48 	bl	8002264 <HAL_DMA_Start_IT>
 80017d4:	697b      	ldr	r3, [r7, #20]
 80017d6:	685b      	ldr	r3, [r3, #4]
 80017d8:	f003 031f 	and.w	r3, r3, #31
 80017dc:	2b00      	cmp	r3, #0
 80017de:	d12a      	bne.n	8001836 <HAL_ADC_Start_DMA+0x1ae>
 80017e0:	68fb      	ldr	r3, [r7, #12]
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	4a2d      	ldr	r2, [pc, #180]	@ (800189c <HAL_ADC_Start_DMA+0x214>)
 80017e6:	4293      	cmp	r3, r2
 80017e8:	d015      	beq.n	8001816 <HAL_ADC_Start_DMA+0x18e>
 80017ea:	68fb      	ldr	r3, [r7, #12]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	4a2c      	ldr	r2, [pc, #176]	@ (80018a0 <HAL_ADC_Start_DMA+0x218>)
 80017f0:	4293      	cmp	r3, r2
 80017f2:	d105      	bne.n	8001800 <HAL_ADC_Start_DMA+0x178>
 80017f4:	4b25      	ldr	r3, [pc, #148]	@ (800188c <HAL_ADC_Start_DMA+0x204>)
 80017f6:	685b      	ldr	r3, [r3, #4]
 80017f8:	f003 031f 	and.w	r3, r3, #31
 80017fc:	2b00      	cmp	r3, #0
 80017fe:	d00a      	beq.n	8001816 <HAL_ADC_Start_DMA+0x18e>
 8001800:	68fb      	ldr	r3, [r7, #12]
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a27      	ldr	r2, [pc, #156]	@ (80018a4 <HAL_ADC_Start_DMA+0x21c>)
 8001806:	4293      	cmp	r3, r2
 8001808:	d136      	bne.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 800180a:	4b20      	ldr	r3, [pc, #128]	@ (800188c <HAL_ADC_Start_DMA+0x204>)
 800180c:	685b      	ldr	r3, [r3, #4]
 800180e:	f003 0310 	and.w	r3, r3, #16
 8001812:	2b00      	cmp	r3, #0
 8001814:	d130      	bne.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 8001816:	68fb      	ldr	r3, [r7, #12]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	689b      	ldr	r3, [r3, #8]
 800181c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001820:	2b00      	cmp	r3, #0
 8001822:	d129      	bne.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 8001824:	68fb      	ldr	r3, [r7, #12]
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	689a      	ldr	r2, [r3, #8]
 800182a:	68fb      	ldr	r3, [r7, #12]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001832:	609a      	str	r2, [r3, #8]
 8001834:	e020      	b.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 8001836:	68fb      	ldr	r3, [r7, #12]
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	4a18      	ldr	r2, [pc, #96]	@ (800189c <HAL_ADC_Start_DMA+0x214>)
 800183c:	4293      	cmp	r3, r2
 800183e:	d11b      	bne.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 8001840:	68fb      	ldr	r3, [r7, #12]
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	689b      	ldr	r3, [r3, #8]
 8001846:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800184a:	2b00      	cmp	r3, #0
 800184c:	d114      	bne.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 800184e:	68fb      	ldr	r3, [r7, #12]
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	689a      	ldr	r2, [r3, #8]
 8001854:	68fb      	ldr	r3, [r7, #12]
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800185c:	609a      	str	r2, [r3, #8]
 800185e:	e00b      	b.n	8001878 <HAL_ADC_Start_DMA+0x1f0>
 8001860:	68fb      	ldr	r3, [r7, #12]
 8001862:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001864:	f043 0210 	orr.w	r2, r3, #16
 8001868:	68fb      	ldr	r3, [r7, #12]
 800186a:	641a      	str	r2, [r3, #64]	@ 0x40
 800186c:	68fb      	ldr	r3, [r7, #12]
 800186e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001870:	f043 0201 	orr.w	r2, r3, #1
 8001874:	68fb      	ldr	r3, [r7, #12]
 8001876:	645a      	str	r2, [r3, #68]	@ 0x44
 8001878:	2300      	movs	r3, #0
 800187a:	4618      	mov	r0, r3
 800187c:	3718      	adds	r7, #24
 800187e:	46bd      	mov	sp, r7
 8001880:	bd80      	pop	{r7, pc}
 8001882:	bf00      	nop
 8001884:	20000064 	.word	0x20000064
 8001888:	431bde83 	.word	0x431bde83
 800188c:	40012300 	.word	0x40012300
 8001890:	08001de1 	.word	0x08001de1
 8001894:	08001e9b 	.word	0x08001e9b
 8001898:	08001eb7 	.word	0x08001eb7
 800189c:	40012000 	.word	0x40012000
 80018a0:	40012100 	.word	0x40012100
 80018a4:	40012200 	.word	0x40012200

080018a8 <HAL_ADC_Stop_DMA>:
 80018a8:	b580      	push	{r7, lr}
 80018aa:	b084      	sub	sp, #16
 80018ac:	af00      	add	r7, sp, #0
 80018ae:	6078      	str	r0, [r7, #4]
 80018b0:	2300      	movs	r3, #0
 80018b2:	73fb      	strb	r3, [r7, #15]
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80018ba:	2b01      	cmp	r3, #1
 80018bc:	d101      	bne.n	80018c2 <HAL_ADC_Stop_DMA+0x1a>
 80018be:	2302      	movs	r3, #2
 80018c0:	e048      	b.n	8001954 <HAL_ADC_Stop_DMA+0xac>
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	2201      	movs	r2, #1
 80018c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	689a      	ldr	r2, [r3, #8]
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	f022 0201 	bic.w	r2, r2, #1
 80018d8:	609a      	str	r2, [r3, #8]
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	689b      	ldr	r3, [r3, #8]
 80018e0:	f003 0301 	and.w	r3, r3, #1
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d130      	bne.n	800194a <HAL_ADC_Stop_DMA+0xa2>
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	689a      	ldr	r2, [r3, #8]
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80018f6:	609a      	str	r2, [r3, #8]
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80018fc:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001900:	b2db      	uxtb	r3, r3
 8001902:	2b02      	cmp	r3, #2
 8001904:	d10f      	bne.n	8001926 <HAL_ADC_Stop_DMA+0x7e>
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800190a:	4618      	mov	r0, r3
 800190c:	f000 fd02 	bl	8002314 <HAL_DMA_Abort>
 8001910:	4603      	mov	r3, r0
 8001912:	73fb      	strb	r3, [r7, #15]
 8001914:	7bfb      	ldrb	r3, [r7, #15]
 8001916:	2b00      	cmp	r3, #0
 8001918:	d005      	beq.n	8001926 <HAL_ADC_Stop_DMA+0x7e>
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800191e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	641a      	str	r2, [r3, #64]	@ 0x40
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	681b      	ldr	r3, [r3, #0]
 800192a:	685a      	ldr	r2, [r3, #4]
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
 8001934:	605a      	str	r2, [r3, #4]
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800193a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800193e:	f023 0301 	bic.w	r3, r3, #1
 8001942:	f043 0201 	orr.w	r2, r3, #1
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	641a      	str	r2, [r3, #64]	@ 0x40
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	2200      	movs	r2, #0
 800194e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001952:	7bfb      	ldrb	r3, [r7, #15]
 8001954:	4618      	mov	r0, r3
 8001956:	3710      	adds	r7, #16
 8001958:	46bd      	mov	sp, r7
 800195a:	bd80      	pop	{r7, pc}

0800195c <HAL_ADC_ConvHalfCpltCallback>:
 800195c:	b480      	push	{r7}
 800195e:	b083      	sub	sp, #12
 8001960:	af00      	add	r7, sp, #0
 8001962:	6078      	str	r0, [r7, #4]
 8001964:	bf00      	nop
 8001966:	370c      	adds	r7, #12
 8001968:	46bd      	mov	sp, r7
 800196a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800196e:	4770      	bx	lr

08001970 <HAL_ADC_ErrorCallback>:
 8001970:	b480      	push	{r7}
 8001972:	b083      	sub	sp, #12
 8001974:	af00      	add	r7, sp, #0
 8001976:	6078      	str	r0, [r7, #4]
 8001978:	bf00      	nop
 800197a:	370c      	adds	r7, #12
 800197c:	46bd      	mov	sp, r7
 800197e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001982:	4770      	bx	lr

08001984 <HAL_ADC_ConfigChannel>:
 8001984:	b480      	push	{r7}
 8001986:	b085      	sub	sp, #20
 8001988:	af00      	add	r7, sp, #0
 800198a:	6078      	str	r0, [r7, #4]
 800198c:	6039      	str	r1, [r7, #0]
 800198e:	2300      	movs	r3, #0
 8001990:	60bb      	str	r3, [r7, #8]
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001998:	2b01      	cmp	r3, #1
 800199a:	d101      	bne.n	80019a0 <HAL_ADC_ConfigChannel+0x1c>
 800199c:	2302      	movs	r3, #2
 800199e:	e113      	b.n	8001bc8 <HAL_ADC_ConfigChannel+0x244>
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	2201      	movs	r2, #1
 80019a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80019a8:	683b      	ldr	r3, [r7, #0]
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	2b09      	cmp	r3, #9
 80019ae:	d925      	bls.n	80019fc <HAL_ADC_ConfigChannel+0x78>
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	681b      	ldr	r3, [r3, #0]
 80019b4:	68d9      	ldr	r1, [r3, #12]
 80019b6:	683b      	ldr	r3, [r7, #0]
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	b29b      	uxth	r3, r3
 80019bc:	461a      	mov	r2, r3
 80019be:	4613      	mov	r3, r2
 80019c0:	005b      	lsls	r3, r3, #1
 80019c2:	4413      	add	r3, r2
 80019c4:	3b1e      	subs	r3, #30
 80019c6:	2207      	movs	r2, #7
 80019c8:	fa02 f303 	lsl.w	r3, r2, r3
 80019cc:	43da      	mvns	r2, r3
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	400a      	ands	r2, r1
 80019d4:	60da      	str	r2, [r3, #12]
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	68d9      	ldr	r1, [r3, #12]
 80019dc:	683b      	ldr	r3, [r7, #0]
 80019de:	689a      	ldr	r2, [r3, #8]
 80019e0:	683b      	ldr	r3, [r7, #0]
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	b29b      	uxth	r3, r3
 80019e6:	4618      	mov	r0, r3
 80019e8:	4603      	mov	r3, r0
 80019ea:	005b      	lsls	r3, r3, #1
 80019ec:	4403      	add	r3, r0
 80019ee:	3b1e      	subs	r3, #30
 80019f0:	409a      	lsls	r2, r3
 80019f2:	687b      	ldr	r3, [r7, #4]
 80019f4:	681b      	ldr	r3, [r3, #0]
 80019f6:	430a      	orrs	r2, r1
 80019f8:	60da      	str	r2, [r3, #12]
 80019fa:	e022      	b.n	8001a42 <HAL_ADC_ConfigChannel+0xbe>
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	681b      	ldr	r3, [r3, #0]
 8001a00:	6919      	ldr	r1, [r3, #16]
 8001a02:	683b      	ldr	r3, [r7, #0]
 8001a04:	681b      	ldr	r3, [r3, #0]
 8001a06:	b29b      	uxth	r3, r3
 8001a08:	461a      	mov	r2, r3
 8001a0a:	4613      	mov	r3, r2
 8001a0c:	005b      	lsls	r3, r3, #1
 8001a0e:	4413      	add	r3, r2
 8001a10:	2207      	movs	r2, #7
 8001a12:	fa02 f303 	lsl.w	r3, r2, r3
 8001a16:	43da      	mvns	r2, r3
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	400a      	ands	r2, r1
 8001a1e:	611a      	str	r2, [r3, #16]
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	6919      	ldr	r1, [r3, #16]
 8001a26:	683b      	ldr	r3, [r7, #0]
 8001a28:	689a      	ldr	r2, [r3, #8]
 8001a2a:	683b      	ldr	r3, [r7, #0]
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	b29b      	uxth	r3, r3
 8001a30:	4618      	mov	r0, r3
 8001a32:	4603      	mov	r3, r0
 8001a34:	005b      	lsls	r3, r3, #1
 8001a36:	4403      	add	r3, r0
 8001a38:	409a      	lsls	r2, r3
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	430a      	orrs	r2, r1
 8001a40:	611a      	str	r2, [r3, #16]
 8001a42:	683b      	ldr	r3, [r7, #0]
 8001a44:	685b      	ldr	r3, [r3, #4]
 8001a46:	2b06      	cmp	r3, #6
 8001a48:	d824      	bhi.n	8001a94 <HAL_ADC_ConfigChannel+0x110>
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001a50:	683b      	ldr	r3, [r7, #0]
 8001a52:	685a      	ldr	r2, [r3, #4]
 8001a54:	4613      	mov	r3, r2
 8001a56:	009b      	lsls	r3, r3, #2
 8001a58:	4413      	add	r3, r2
 8001a5a:	3b05      	subs	r3, #5
 8001a5c:	221f      	movs	r2, #31
 8001a5e:	fa02 f303 	lsl.w	r3, r2, r3
 8001a62:	43da      	mvns	r2, r3
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	400a      	ands	r2, r1
 8001a6a:	635a      	str	r2, [r3, #52]	@ 0x34
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001a72:	683b      	ldr	r3, [r7, #0]
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	b29b      	uxth	r3, r3
 8001a78:	4618      	mov	r0, r3
 8001a7a:	683b      	ldr	r3, [r7, #0]
 8001a7c:	685a      	ldr	r2, [r3, #4]
 8001a7e:	4613      	mov	r3, r2
 8001a80:	009b      	lsls	r3, r3, #2
 8001a82:	4413      	add	r3, r2
 8001a84:	3b05      	subs	r3, #5
 8001a86:	fa00 f203 	lsl.w	r2, r0, r3
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	430a      	orrs	r2, r1
 8001a90:	635a      	str	r2, [r3, #52]	@ 0x34
 8001a92:	e04c      	b.n	8001b2e <HAL_ADC_ConfigChannel+0x1aa>
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	685b      	ldr	r3, [r3, #4]
 8001a98:	2b0c      	cmp	r3, #12
 8001a9a:	d824      	bhi.n	8001ae6 <HAL_ADC_ConfigChannel+0x162>
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001aa2:	683b      	ldr	r3, [r7, #0]
 8001aa4:	685a      	ldr	r2, [r3, #4]
 8001aa6:	4613      	mov	r3, r2
 8001aa8:	009b      	lsls	r3, r3, #2
 8001aaa:	4413      	add	r3, r2
 8001aac:	3b23      	subs	r3, #35	@ 0x23
 8001aae:	221f      	movs	r2, #31
 8001ab0:	fa02 f303 	lsl.w	r3, r2, r3
 8001ab4:	43da      	mvns	r2, r3
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	400a      	ands	r2, r1
 8001abc:	631a      	str	r2, [r3, #48]	@ 0x30
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001ac4:	683b      	ldr	r3, [r7, #0]
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	b29b      	uxth	r3, r3
 8001aca:	4618      	mov	r0, r3
 8001acc:	683b      	ldr	r3, [r7, #0]
 8001ace:	685a      	ldr	r2, [r3, #4]
 8001ad0:	4613      	mov	r3, r2
 8001ad2:	009b      	lsls	r3, r3, #2
 8001ad4:	4413      	add	r3, r2
 8001ad6:	3b23      	subs	r3, #35	@ 0x23
 8001ad8:	fa00 f203 	lsl.w	r2, r0, r3
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	681b      	ldr	r3, [r3, #0]
 8001ae0:	430a      	orrs	r2, r1
 8001ae2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ae4:	e023      	b.n	8001b2e <HAL_ADC_ConfigChannel+0x1aa>
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001aec:	683b      	ldr	r3, [r7, #0]
 8001aee:	685a      	ldr	r2, [r3, #4]
 8001af0:	4613      	mov	r3, r2
 8001af2:	009b      	lsls	r3, r3, #2
 8001af4:	4413      	add	r3, r2
 8001af6:	3b41      	subs	r3, #65	@ 0x41
 8001af8:	221f      	movs	r2, #31
 8001afa:	fa02 f303 	lsl.w	r3, r2, r3
 8001afe:	43da      	mvns	r2, r3
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	400a      	ands	r2, r1
 8001b06:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001b0e:	683b      	ldr	r3, [r7, #0]
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	b29b      	uxth	r3, r3
 8001b14:	4618      	mov	r0, r3
 8001b16:	683b      	ldr	r3, [r7, #0]
 8001b18:	685a      	ldr	r2, [r3, #4]
 8001b1a:	4613      	mov	r3, r2
 8001b1c:	009b      	lsls	r3, r3, #2
 8001b1e:	4413      	add	r3, r2
 8001b20:	3b41      	subs	r3, #65	@ 0x41
 8001b22:	fa00 f203 	lsl.w	r2, r0, r3
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	681b      	ldr	r3, [r3, #0]
 8001b2a:	430a      	orrs	r2, r1
 8001b2c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001b2e:	4b29      	ldr	r3, [pc, #164]	@ (8001bd4 <HAL_ADC_ConfigChannel+0x250>)
 8001b30:	60fb      	str	r3, [r7, #12]
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	4a28      	ldr	r2, [pc, #160]	@ (8001bd8 <HAL_ADC_ConfigChannel+0x254>)
 8001b38:	4293      	cmp	r3, r2
 8001b3a:	d10f      	bne.n	8001b5c <HAL_ADC_ConfigChannel+0x1d8>
 8001b3c:	683b      	ldr	r3, [r7, #0]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	2b12      	cmp	r3, #18
 8001b42:	d10b      	bne.n	8001b5c <HAL_ADC_ConfigChannel+0x1d8>
 8001b44:	68fb      	ldr	r3, [r7, #12]
 8001b46:	685b      	ldr	r3, [r3, #4]
 8001b48:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	605a      	str	r2, [r3, #4]
 8001b50:	68fb      	ldr	r3, [r7, #12]
 8001b52:	685b      	ldr	r3, [r3, #4]
 8001b54:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	605a      	str	r2, [r3, #4]
 8001b5c:	687b      	ldr	r3, [r7, #4]
 8001b5e:	681b      	ldr	r3, [r3, #0]
 8001b60:	4a1d      	ldr	r2, [pc, #116]	@ (8001bd8 <HAL_ADC_ConfigChannel+0x254>)
 8001b62:	4293      	cmp	r3, r2
 8001b64:	d12b      	bne.n	8001bbe <HAL_ADC_ConfigChannel+0x23a>
 8001b66:	683b      	ldr	r3, [r7, #0]
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4a1c      	ldr	r2, [pc, #112]	@ (8001bdc <HAL_ADC_ConfigChannel+0x258>)
 8001b6c:	4293      	cmp	r3, r2
 8001b6e:	d003      	beq.n	8001b78 <HAL_ADC_ConfigChannel+0x1f4>
 8001b70:	683b      	ldr	r3, [r7, #0]
 8001b72:	681b      	ldr	r3, [r3, #0]
 8001b74:	2b11      	cmp	r3, #17
 8001b76:	d122      	bne.n	8001bbe <HAL_ADC_ConfigChannel+0x23a>
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	685b      	ldr	r3, [r3, #4]
 8001b7c:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8001b80:	68fb      	ldr	r3, [r7, #12]
 8001b82:	605a      	str	r2, [r3, #4]
 8001b84:	68fb      	ldr	r3, [r7, #12]
 8001b86:	685b      	ldr	r3, [r3, #4]
 8001b88:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	605a      	str	r2, [r3, #4]
 8001b90:	683b      	ldr	r3, [r7, #0]
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	4a11      	ldr	r2, [pc, #68]	@ (8001bdc <HAL_ADC_ConfigChannel+0x258>)
 8001b96:	4293      	cmp	r3, r2
 8001b98:	d111      	bne.n	8001bbe <HAL_ADC_ConfigChannel+0x23a>
 8001b9a:	4b11      	ldr	r3, [pc, #68]	@ (8001be0 <HAL_ADC_ConfigChannel+0x25c>)
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	4a11      	ldr	r2, [pc, #68]	@ (8001be4 <HAL_ADC_ConfigChannel+0x260>)
 8001ba0:	fba2 2303 	umull	r2, r3, r2, r3
 8001ba4:	0c9a      	lsrs	r2, r3, #18
 8001ba6:	4613      	mov	r3, r2
 8001ba8:	009b      	lsls	r3, r3, #2
 8001baa:	4413      	add	r3, r2
 8001bac:	005b      	lsls	r3, r3, #1
 8001bae:	60bb      	str	r3, [r7, #8]
 8001bb0:	e002      	b.n	8001bb8 <HAL_ADC_ConfigChannel+0x234>
 8001bb2:	68bb      	ldr	r3, [r7, #8]
 8001bb4:	3b01      	subs	r3, #1
 8001bb6:	60bb      	str	r3, [r7, #8]
 8001bb8:	68bb      	ldr	r3, [r7, #8]
 8001bba:	2b00      	cmp	r3, #0
 8001bbc:	d1f9      	bne.n	8001bb2 <HAL_ADC_ConfigChannel+0x22e>
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	2200      	movs	r2, #0
 8001bc2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	4618      	mov	r0, r3
 8001bca:	3714      	adds	r7, #20
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bd2:	4770      	bx	lr
 8001bd4:	40012300 	.word	0x40012300
 8001bd8:	40012000 	.word	0x40012000
 8001bdc:	10000012 	.word	0x10000012
 8001be0:	20000064 	.word	0x20000064
 8001be4:	431bde83 	.word	0x431bde83

08001be8 <ADC_Init>:
 8001be8:	b480      	push	{r7}
 8001bea:	b085      	sub	sp, #20
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	6078      	str	r0, [r7, #4]
 8001bf0:	4b79      	ldr	r3, [pc, #484]	@ (8001dd8 <ADC_Init+0x1f0>)
 8001bf2:	60fb      	str	r3, [r7, #12]
 8001bf4:	68fb      	ldr	r3, [r7, #12]
 8001bf6:	685b      	ldr	r3, [r3, #4]
 8001bf8:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	605a      	str	r2, [r3, #4]
 8001c00:	68fb      	ldr	r3, [r7, #12]
 8001c02:	685a      	ldr	r2, [r3, #4]
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	685b      	ldr	r3, [r3, #4]
 8001c08:	431a      	orrs	r2, r3
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	605a      	str	r2, [r3, #4]
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	685a      	ldr	r2, [r3, #4]
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001c1c:	605a      	str	r2, [r3, #4]
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	681b      	ldr	r3, [r3, #0]
 8001c22:	6859      	ldr	r1, [r3, #4]
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	691b      	ldr	r3, [r3, #16]
 8001c28:	021a      	lsls	r2, r3, #8
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	430a      	orrs	r2, r1
 8001c30:	605a      	str	r2, [r3, #4]
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	685a      	ldr	r2, [r3, #4]
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8001c40:	605a      	str	r2, [r3, #4]
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	681b      	ldr	r3, [r3, #0]
 8001c46:	6859      	ldr	r1, [r3, #4]
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	689a      	ldr	r2, [r3, #8]
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	430a      	orrs	r2, r1
 8001c52:	605a      	str	r2, [r3, #4]
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	689a      	ldr	r2, [r3, #8]
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001c62:	609a      	str	r2, [r3, #8]
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	681b      	ldr	r3, [r3, #0]
 8001c68:	6899      	ldr	r1, [r3, #8]
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	68da      	ldr	r2, [r3, #12]
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	430a      	orrs	r2, r1
 8001c74:	609a      	str	r2, [r3, #8]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001c7a:	4a58      	ldr	r2, [pc, #352]	@ (8001ddc <ADC_Init+0x1f4>)
 8001c7c:	4293      	cmp	r3, r2
 8001c7e:	d022      	beq.n	8001cc6 <ADC_Init+0xde>
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	689a      	ldr	r2, [r3, #8]
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001c8e:	609a      	str	r2, [r3, #8]
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	6899      	ldr	r1, [r3, #8]
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	430a      	orrs	r2, r1
 8001ca0:	609a      	str	r2, [r3, #8]
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	689a      	ldr	r2, [r3, #8]
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001cb0:	609a      	str	r2, [r3, #8]
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	6899      	ldr	r1, [r3, #8]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	681b      	ldr	r3, [r3, #0]
 8001cc0:	430a      	orrs	r2, r1
 8001cc2:	609a      	str	r2, [r3, #8]
 8001cc4:	e00f      	b.n	8001ce6 <ADC_Init+0xfe>
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	689a      	ldr	r2, [r3, #8]
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001cd4:	609a      	str	r2, [r3, #8]
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	681b      	ldr	r3, [r3, #0]
 8001cda:	689a      	ldr	r2, [r3, #8]
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001ce4:	609a      	str	r2, [r3, #8]
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	689a      	ldr	r2, [r3, #8]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	f022 0202 	bic.w	r2, r2, #2
 8001cf4:	609a      	str	r2, [r3, #8]
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	6899      	ldr	r1, [r3, #8]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	7e1b      	ldrb	r3, [r3, #24]
 8001d00:	005a      	lsls	r2, r3, #1
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	430a      	orrs	r2, r1
 8001d08:	609a      	str	r2, [r3, #8]
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001d10:	2b00      	cmp	r3, #0
 8001d12:	d01b      	beq.n	8001d4c <ADC_Init+0x164>
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	685a      	ldr	r2, [r3, #4]
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8001d22:	605a      	str	r2, [r3, #4]
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	685a      	ldr	r2, [r3, #4]
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8001d32:	605a      	str	r2, [r3, #4]
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	681b      	ldr	r3, [r3, #0]
 8001d38:	6859      	ldr	r1, [r3, #4]
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d3e:	3b01      	subs	r3, #1
 8001d40:	035a      	lsls	r2, r3, #13
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	430a      	orrs	r2, r1
 8001d48:	605a      	str	r2, [r3, #4]
 8001d4a:	e007      	b.n	8001d5c <ADC_Init+0x174>
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	681b      	ldr	r3, [r3, #0]
 8001d50:	685a      	ldr	r2, [r3, #4]
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001d5a:	605a      	str	r2, [r3, #4]
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8001d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	69db      	ldr	r3, [r3, #28]
 8001d76:	3b01      	subs	r3, #1
 8001d78:	051a      	lsls	r2, r3, #20
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	430a      	orrs	r2, r1
 8001d80:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	689a      	ldr	r2, [r3, #8]
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001d90:	609a      	str	r2, [r3, #8]
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	6899      	ldr	r1, [r3, #8]
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8001d9e:	025a      	lsls	r2, r3, #9
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	430a      	orrs	r2, r1
 8001da6:	609a      	str	r2, [r3, #8]
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	689a      	ldr	r2, [r3, #8]
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001db6:	609a      	str	r2, [r3, #8]
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	6899      	ldr	r1, [r3, #8]
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	695b      	ldr	r3, [r3, #20]
 8001dc2:	029a      	lsls	r2, r3, #10
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	430a      	orrs	r2, r1
 8001dca:	609a      	str	r2, [r3, #8]
 8001dcc:	bf00      	nop
 8001dce:	3714      	adds	r7, #20
 8001dd0:	46bd      	mov	sp, r7
 8001dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd6:	4770      	bx	lr
 8001dd8:	40012300 	.word	0x40012300
 8001ddc:	0f000001 	.word	0x0f000001

08001de0 <ADC_DMAConvCplt>:
 8001de0:	b580      	push	{r7, lr}
 8001de2:	b084      	sub	sp, #16
 8001de4:	af00      	add	r7, sp, #0
 8001de6:	6078      	str	r0, [r7, #4]
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001dec:	60fb      	str	r3, [r7, #12]
 8001dee:	68fb      	ldr	r3, [r7, #12]
 8001df0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001df2:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8001df6:	2b00      	cmp	r3, #0
 8001df8:	d13c      	bne.n	8001e74 <ADC_DMAConvCplt+0x94>
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dfe:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001e02:	68fb      	ldr	r3, [r7, #12]
 8001e04:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	689b      	ldr	r3, [r3, #8]
 8001e0c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	d12b      	bne.n	8001e6c <ADC_DMAConvCplt+0x8c>
 8001e14:	68fb      	ldr	r3, [r7, #12]
 8001e16:	7e1b      	ldrb	r3, [r3, #24]
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d127      	bne.n	8001e6c <ADC_DMAConvCplt+0x8c>
 8001e1c:	68fb      	ldr	r3, [r7, #12]
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e22:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8001e26:	2b00      	cmp	r3, #0
 8001e28:	d006      	beq.n	8001e38 <ADC_DMAConvCplt+0x58>
 8001e2a:	68fb      	ldr	r3, [r7, #12]
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	689b      	ldr	r3, [r3, #8]
 8001e30:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001e34:	2b00      	cmp	r3, #0
 8001e36:	d119      	bne.n	8001e6c <ADC_DMAConvCplt+0x8c>
 8001e38:	68fb      	ldr	r3, [r7, #12]
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	685a      	ldr	r2, [r3, #4]
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	681b      	ldr	r3, [r3, #0]
 8001e42:	f022 0220 	bic.w	r2, r2, #32
 8001e46:	605a      	str	r2, [r3, #4]
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e4c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e58:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001e5c:	2b00      	cmp	r3, #0
 8001e5e:	d105      	bne.n	8001e6c <ADC_DMAConvCplt+0x8c>
 8001e60:	68fb      	ldr	r3, [r7, #12]
 8001e62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e64:	f043 0201 	orr.w	r2, r3, #1
 8001e68:	68fb      	ldr	r3, [r7, #12]
 8001e6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e6c:	68f8      	ldr	r0, [r7, #12]
 8001e6e:	f7ff f827 	bl	8000ec0 <HAL_ADC_ConvCpltCallback>
 8001e72:	e00e      	b.n	8001e92 <ADC_DMAConvCplt+0xb2>
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e78:	f003 0310 	and.w	r3, r3, #16
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d003      	beq.n	8001e88 <ADC_DMAConvCplt+0xa8>
 8001e80:	68f8      	ldr	r0, [r7, #12]
 8001e82:	f7ff fd75 	bl	8001970 <HAL_ADC_ErrorCallback>
 8001e86:	e004      	b.n	8001e92 <ADC_DMAConvCplt+0xb2>
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001e8c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001e8e:	6878      	ldr	r0, [r7, #4]
 8001e90:	4798      	blx	r3
 8001e92:	bf00      	nop
 8001e94:	3710      	adds	r7, #16
 8001e96:	46bd      	mov	sp, r7
 8001e98:	bd80      	pop	{r7, pc}

08001e9a <ADC_DMAHalfConvCplt>:
 8001e9a:	b580      	push	{r7, lr}
 8001e9c:	b084      	sub	sp, #16
 8001e9e:	af00      	add	r7, sp, #0
 8001ea0:	6078      	str	r0, [r7, #4]
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001ea6:	60fb      	str	r3, [r7, #12]
 8001ea8:	68f8      	ldr	r0, [r7, #12]
 8001eaa:	f7ff fd57 	bl	800195c <HAL_ADC_ConvHalfCpltCallback>
 8001eae:	bf00      	nop
 8001eb0:	3710      	adds	r7, #16
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	bd80      	pop	{r7, pc}

08001eb6 <ADC_DMAError>:
 8001eb6:	b580      	push	{r7, lr}
 8001eb8:	b084      	sub	sp, #16
 8001eba:	af00      	add	r7, sp, #0
 8001ebc:	6078      	str	r0, [r7, #4]
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001ec2:	60fb      	str	r3, [r7, #12]
 8001ec4:	68fb      	ldr	r3, [r7, #12]
 8001ec6:	2240      	movs	r2, #64	@ 0x40
 8001ec8:	641a      	str	r2, [r3, #64]	@ 0x40
 8001eca:	68fb      	ldr	r3, [r7, #12]
 8001ecc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ece:	f043 0204 	orr.w	r2, r3, #4
 8001ed2:	68fb      	ldr	r3, [r7, #12]
 8001ed4:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ed6:	68f8      	ldr	r0, [r7, #12]
 8001ed8:	f7ff fd4a 	bl	8001970 <HAL_ADC_ErrorCallback>
 8001edc:	bf00      	nop
 8001ede:	3710      	adds	r7, #16
 8001ee0:	46bd      	mov	sp, r7
 8001ee2:	bd80      	pop	{r7, pc}

08001ee4 <__NVIC_SetPriorityGrouping>:
 8001ee4:	b480      	push	{r7}
 8001ee6:	b085      	sub	sp, #20
 8001ee8:	af00      	add	r7, sp, #0
 8001eea:	6078      	str	r0, [r7, #4]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	f003 0307 	and.w	r3, r3, #7
 8001ef2:	60fb      	str	r3, [r7, #12]
 8001ef4:	4b0c      	ldr	r3, [pc, #48]	@ (8001f28 <__NVIC_SetPriorityGrouping+0x44>)
 8001ef6:	68db      	ldr	r3, [r3, #12]
 8001ef8:	60bb      	str	r3, [r7, #8]
 8001efa:	68ba      	ldr	r2, [r7, #8]
 8001efc:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001f00:	4013      	ands	r3, r2
 8001f02:	60bb      	str	r3, [r7, #8]
 8001f04:	68fb      	ldr	r3, [r7, #12]
 8001f06:	021a      	lsls	r2, r3, #8
 8001f08:	68bb      	ldr	r3, [r7, #8]
 8001f0a:	4313      	orrs	r3, r2
 8001f0c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001f10:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001f14:	60bb      	str	r3, [r7, #8]
 8001f16:	4a04      	ldr	r2, [pc, #16]	@ (8001f28 <__NVIC_SetPriorityGrouping+0x44>)
 8001f18:	68bb      	ldr	r3, [r7, #8]
 8001f1a:	60d3      	str	r3, [r2, #12]
 8001f1c:	bf00      	nop
 8001f1e:	3714      	adds	r7, #20
 8001f20:	46bd      	mov	sp, r7
 8001f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f26:	4770      	bx	lr
 8001f28:	e000ed00 	.word	0xe000ed00

08001f2c <__NVIC_GetPriorityGrouping>:
 8001f2c:	b480      	push	{r7}
 8001f2e:	af00      	add	r7, sp, #0
 8001f30:	4b04      	ldr	r3, [pc, #16]	@ (8001f44 <__NVIC_GetPriorityGrouping+0x18>)
 8001f32:	68db      	ldr	r3, [r3, #12]
 8001f34:	0a1b      	lsrs	r3, r3, #8
 8001f36:	f003 0307 	and.w	r3, r3, #7
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	46bd      	mov	sp, r7
 8001f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f42:	4770      	bx	lr
 8001f44:	e000ed00 	.word	0xe000ed00

08001f48 <__NVIC_EnableIRQ>:
 8001f48:	b480      	push	{r7}
 8001f4a:	b083      	sub	sp, #12
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	4603      	mov	r3, r0
 8001f50:	71fb      	strb	r3, [r7, #7]
 8001f52:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f56:	2b00      	cmp	r3, #0
 8001f58:	db0b      	blt.n	8001f72 <__NVIC_EnableIRQ+0x2a>
 8001f5a:	79fb      	ldrb	r3, [r7, #7]
 8001f5c:	f003 021f 	and.w	r2, r3, #31
 8001f60:	4907      	ldr	r1, [pc, #28]	@ (8001f80 <__NVIC_EnableIRQ+0x38>)
 8001f62:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f66:	095b      	lsrs	r3, r3, #5
 8001f68:	2001      	movs	r0, #1
 8001f6a:	fa00 f202 	lsl.w	r2, r0, r2
 8001f6e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001f72:	bf00      	nop
 8001f74:	370c      	adds	r7, #12
 8001f76:	46bd      	mov	sp, r7
 8001f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f7c:	4770      	bx	lr
 8001f7e:	bf00      	nop
 8001f80:	e000e100 	.word	0xe000e100

08001f84 <__NVIC_SetPriority>:
 8001f84:	b480      	push	{r7}
 8001f86:	b083      	sub	sp, #12
 8001f88:	af00      	add	r7, sp, #0
 8001f8a:	4603      	mov	r3, r0
 8001f8c:	6039      	str	r1, [r7, #0]
 8001f8e:	71fb      	strb	r3, [r7, #7]
 8001f90:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	db0a      	blt.n	8001fae <__NVIC_SetPriority+0x2a>
 8001f98:	683b      	ldr	r3, [r7, #0]
 8001f9a:	b2da      	uxtb	r2, r3
 8001f9c:	490c      	ldr	r1, [pc, #48]	@ (8001fd0 <__NVIC_SetPriority+0x4c>)
 8001f9e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fa2:	0112      	lsls	r2, r2, #4
 8001fa4:	b2d2      	uxtb	r2, r2
 8001fa6:	440b      	add	r3, r1
 8001fa8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001fac:	e00a      	b.n	8001fc4 <__NVIC_SetPriority+0x40>
 8001fae:	683b      	ldr	r3, [r7, #0]
 8001fb0:	b2da      	uxtb	r2, r3
 8001fb2:	4908      	ldr	r1, [pc, #32]	@ (8001fd4 <__NVIC_SetPriority+0x50>)
 8001fb4:	79fb      	ldrb	r3, [r7, #7]
 8001fb6:	f003 030f 	and.w	r3, r3, #15
 8001fba:	3b04      	subs	r3, #4
 8001fbc:	0112      	lsls	r2, r2, #4
 8001fbe:	b2d2      	uxtb	r2, r2
 8001fc0:	440b      	add	r3, r1
 8001fc2:	761a      	strb	r2, [r3, #24]
 8001fc4:	bf00      	nop
 8001fc6:	370c      	adds	r7, #12
 8001fc8:	46bd      	mov	sp, r7
 8001fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fce:	4770      	bx	lr
 8001fd0:	e000e100 	.word	0xe000e100
 8001fd4:	e000ed00 	.word	0xe000ed00

08001fd8 <NVIC_EncodePriority>:
 8001fd8:	b480      	push	{r7}
 8001fda:	b089      	sub	sp, #36	@ 0x24
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	60f8      	str	r0, [r7, #12]
 8001fe0:	60b9      	str	r1, [r7, #8]
 8001fe2:	607a      	str	r2, [r7, #4]
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	f003 0307 	and.w	r3, r3, #7
 8001fea:	61fb      	str	r3, [r7, #28]
 8001fec:	69fb      	ldr	r3, [r7, #28]
 8001fee:	f1c3 0307 	rsb	r3, r3, #7
 8001ff2:	2b04      	cmp	r3, #4
 8001ff4:	bf28      	it	cs
 8001ff6:	2304      	movcs	r3, #4
 8001ff8:	61bb      	str	r3, [r7, #24]
 8001ffa:	69fb      	ldr	r3, [r7, #28]
 8001ffc:	3304      	adds	r3, #4
 8001ffe:	2b06      	cmp	r3, #6
 8002000:	d902      	bls.n	8002008 <NVIC_EncodePriority+0x30>
 8002002:	69fb      	ldr	r3, [r7, #28]
 8002004:	3b03      	subs	r3, #3
 8002006:	e000      	b.n	800200a <NVIC_EncodePriority+0x32>
 8002008:	2300      	movs	r3, #0
 800200a:	617b      	str	r3, [r7, #20]
 800200c:	f04f 32ff 	mov.w	r2, #4294967295
 8002010:	69bb      	ldr	r3, [r7, #24]
 8002012:	fa02 f303 	lsl.w	r3, r2, r3
 8002016:	43da      	mvns	r2, r3
 8002018:	68bb      	ldr	r3, [r7, #8]
 800201a:	401a      	ands	r2, r3
 800201c:	697b      	ldr	r3, [r7, #20]
 800201e:	409a      	lsls	r2, r3
 8002020:	f04f 31ff 	mov.w	r1, #4294967295
 8002024:	697b      	ldr	r3, [r7, #20]
 8002026:	fa01 f303 	lsl.w	r3, r1, r3
 800202a:	43d9      	mvns	r1, r3
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	400b      	ands	r3, r1
 8002030:	4313      	orrs	r3, r2
 8002032:	4618      	mov	r0, r3
 8002034:	3724      	adds	r7, #36	@ 0x24
 8002036:	46bd      	mov	sp, r7
 8002038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203c:	4770      	bx	lr
	...

08002040 <SysTick_Config>:
 8002040:	b580      	push	{r7, lr}
 8002042:	b082      	sub	sp, #8
 8002044:	af00      	add	r7, sp, #0
 8002046:	6078      	str	r0, [r7, #4]
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	3b01      	subs	r3, #1
 800204c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002050:	d301      	bcc.n	8002056 <SysTick_Config+0x16>
 8002052:	2301      	movs	r3, #1
 8002054:	e00f      	b.n	8002076 <SysTick_Config+0x36>
 8002056:	4a0a      	ldr	r2, [pc, #40]	@ (8002080 <SysTick_Config+0x40>)
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	3b01      	subs	r3, #1
 800205c:	6053      	str	r3, [r2, #4]
 800205e:	210f      	movs	r1, #15
 8002060:	f04f 30ff 	mov.w	r0, #4294967295
 8002064:	f7ff ff8e 	bl	8001f84 <__NVIC_SetPriority>
 8002068:	4b05      	ldr	r3, [pc, #20]	@ (8002080 <SysTick_Config+0x40>)
 800206a:	2200      	movs	r2, #0
 800206c:	609a      	str	r2, [r3, #8]
 800206e:	4b04      	ldr	r3, [pc, #16]	@ (8002080 <SysTick_Config+0x40>)
 8002070:	2207      	movs	r2, #7
 8002072:	601a      	str	r2, [r3, #0]
 8002074:	2300      	movs	r3, #0
 8002076:	4618      	mov	r0, r3
 8002078:	3708      	adds	r7, #8
 800207a:	46bd      	mov	sp, r7
 800207c:	bd80      	pop	{r7, pc}
 800207e:	bf00      	nop
 8002080:	e000e010 	.word	0xe000e010

08002084 <HAL_NVIC_SetPriorityGrouping>:
 8002084:	b580      	push	{r7, lr}
 8002086:	b082      	sub	sp, #8
 8002088:	af00      	add	r7, sp, #0
 800208a:	6078      	str	r0, [r7, #4]
 800208c:	6878      	ldr	r0, [r7, #4]
 800208e:	f7ff ff29 	bl	8001ee4 <__NVIC_SetPriorityGrouping>
 8002092:	bf00      	nop
 8002094:	3708      	adds	r7, #8
 8002096:	46bd      	mov	sp, r7
 8002098:	bd80      	pop	{r7, pc}

0800209a <HAL_NVIC_SetPriority>:
 800209a:	b580      	push	{r7, lr}
 800209c:	b086      	sub	sp, #24
 800209e:	af00      	add	r7, sp, #0
 80020a0:	4603      	mov	r3, r0
 80020a2:	60b9      	str	r1, [r7, #8]
 80020a4:	607a      	str	r2, [r7, #4]
 80020a6:	73fb      	strb	r3, [r7, #15]
 80020a8:	2300      	movs	r3, #0
 80020aa:	617b      	str	r3, [r7, #20]
 80020ac:	f7ff ff3e 	bl	8001f2c <__NVIC_GetPriorityGrouping>
 80020b0:	6178      	str	r0, [r7, #20]
 80020b2:	687a      	ldr	r2, [r7, #4]
 80020b4:	68b9      	ldr	r1, [r7, #8]
 80020b6:	6978      	ldr	r0, [r7, #20]
 80020b8:	f7ff ff8e 	bl	8001fd8 <NVIC_EncodePriority>
 80020bc:	4602      	mov	r2, r0
 80020be:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80020c2:	4611      	mov	r1, r2
 80020c4:	4618      	mov	r0, r3
 80020c6:	f7ff ff5d 	bl	8001f84 <__NVIC_SetPriority>
 80020ca:	bf00      	nop
 80020cc:	3718      	adds	r7, #24
 80020ce:	46bd      	mov	sp, r7
 80020d0:	bd80      	pop	{r7, pc}

080020d2 <HAL_NVIC_EnableIRQ>:
 80020d2:	b580      	push	{r7, lr}
 80020d4:	b082      	sub	sp, #8
 80020d6:	af00      	add	r7, sp, #0
 80020d8:	4603      	mov	r3, r0
 80020da:	71fb      	strb	r3, [r7, #7]
 80020dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020e0:	4618      	mov	r0, r3
 80020e2:	f7ff ff31 	bl	8001f48 <__NVIC_EnableIRQ>
 80020e6:	bf00      	nop
 80020e8:	3708      	adds	r7, #8
 80020ea:	46bd      	mov	sp, r7
 80020ec:	bd80      	pop	{r7, pc}

080020ee <HAL_SYSTICK_Config>:
 80020ee:	b580      	push	{r7, lr}
 80020f0:	b082      	sub	sp, #8
 80020f2:	af00      	add	r7, sp, #0
 80020f4:	6078      	str	r0, [r7, #4]
 80020f6:	6878      	ldr	r0, [r7, #4]
 80020f8:	f7ff ffa2 	bl	8002040 <SysTick_Config>
 80020fc:	4603      	mov	r3, r0
 80020fe:	4618      	mov	r0, r3
 8002100:	3708      	adds	r7, #8
 8002102:	46bd      	mov	sp, r7
 8002104:	bd80      	pop	{r7, pc}
	...

08002108 <HAL_DMA_Init>:
 8002108:	b580      	push	{r7, lr}
 800210a:	b086      	sub	sp, #24
 800210c:	af00      	add	r7, sp, #0
 800210e:	6078      	str	r0, [r7, #4]
 8002110:	2300      	movs	r3, #0
 8002112:	617b      	str	r3, [r7, #20]
 8002114:	f7ff fa44 	bl	80015a0 <HAL_GetTick>
 8002118:	6138      	str	r0, [r7, #16]
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	2b00      	cmp	r3, #0
 800211e:	d101      	bne.n	8002124 <HAL_DMA_Init+0x1c>
 8002120:	2301      	movs	r3, #1
 8002122:	e099      	b.n	8002258 <HAL_DMA_Init+0x150>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	2202      	movs	r2, #2
 8002128:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	2200      	movs	r2, #0
 8002130:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	681a      	ldr	r2, [r3, #0]
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	f022 0201 	bic.w	r2, r2, #1
 8002142:	601a      	str	r2, [r3, #0]
 8002144:	e00f      	b.n	8002166 <HAL_DMA_Init+0x5e>
 8002146:	f7ff fa2b 	bl	80015a0 <HAL_GetTick>
 800214a:	4602      	mov	r2, r0
 800214c:	693b      	ldr	r3, [r7, #16]
 800214e:	1ad3      	subs	r3, r2, r3
 8002150:	2b05      	cmp	r3, #5
 8002152:	d908      	bls.n	8002166 <HAL_DMA_Init+0x5e>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	2220      	movs	r2, #32
 8002158:	655a      	str	r2, [r3, #84]	@ 0x54
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	2203      	movs	r2, #3
 800215e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002162:	2303      	movs	r3, #3
 8002164:	e078      	b.n	8002258 <HAL_DMA_Init+0x150>
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	681b      	ldr	r3, [r3, #0]
 800216c:	f003 0301 	and.w	r3, r3, #1
 8002170:	2b00      	cmp	r3, #0
 8002172:	d1e8      	bne.n	8002146 <HAL_DMA_Init+0x3e>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	617b      	str	r3, [r7, #20]
 800217c:	697a      	ldr	r2, [r7, #20]
 800217e:	4b38      	ldr	r3, [pc, #224]	@ (8002260 <HAL_DMA_Init+0x158>)
 8002180:	4013      	ands	r3, r2
 8002182:	617b      	str	r3, [r7, #20]
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	685a      	ldr	r2, [r3, #4]
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	689b      	ldr	r3, [r3, #8]
 800218c:	431a      	orrs	r2, r3
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	68db      	ldr	r3, [r3, #12]
 8002192:	431a      	orrs	r2, r3
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	691b      	ldr	r3, [r3, #16]
 8002198:	431a      	orrs	r2, r3
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	695b      	ldr	r3, [r3, #20]
 800219e:	431a      	orrs	r2, r3
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	699b      	ldr	r3, [r3, #24]
 80021a4:	431a      	orrs	r2, r3
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	69db      	ldr	r3, [r3, #28]
 80021aa:	431a      	orrs	r2, r3
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	6a1b      	ldr	r3, [r3, #32]
 80021b0:	4313      	orrs	r3, r2
 80021b2:	697a      	ldr	r2, [r7, #20]
 80021b4:	4313      	orrs	r3, r2
 80021b6:	617b      	str	r3, [r7, #20]
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021bc:	2b04      	cmp	r3, #4
 80021be:	d107      	bne.n	80021d0 <HAL_DMA_Init+0xc8>
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021c8:	4313      	orrs	r3, r2
 80021ca:	697a      	ldr	r2, [r7, #20]
 80021cc:	4313      	orrs	r3, r2
 80021ce:	617b      	str	r3, [r7, #20]
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	697a      	ldr	r2, [r7, #20]
 80021d6:	601a      	str	r2, [r3, #0]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	695b      	ldr	r3, [r3, #20]
 80021de:	617b      	str	r3, [r7, #20]
 80021e0:	697b      	ldr	r3, [r7, #20]
 80021e2:	f023 0307 	bic.w	r3, r3, #7
 80021e6:	617b      	str	r3, [r7, #20]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021ec:	697a      	ldr	r2, [r7, #20]
 80021ee:	4313      	orrs	r3, r2
 80021f0:	617b      	str	r3, [r7, #20]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021f6:	2b04      	cmp	r3, #4
 80021f8:	d117      	bne.n	800222a <HAL_DMA_Init+0x122>
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021fe:	697a      	ldr	r2, [r7, #20]
 8002200:	4313      	orrs	r3, r2
 8002202:	617b      	str	r3, [r7, #20]
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002208:	2b00      	cmp	r3, #0
 800220a:	d00e      	beq.n	800222a <HAL_DMA_Init+0x122>
 800220c:	6878      	ldr	r0, [r7, #4]
 800220e:	f000 fadf 	bl	80027d0 <DMA_CheckFifoParam>
 8002212:	4603      	mov	r3, r0
 8002214:	2b00      	cmp	r3, #0
 8002216:	d008      	beq.n	800222a <HAL_DMA_Init+0x122>
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	2240      	movs	r2, #64	@ 0x40
 800221c:	655a      	str	r2, [r3, #84]	@ 0x54
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	2201      	movs	r2, #1
 8002222:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002226:	2301      	movs	r3, #1
 8002228:	e016      	b.n	8002258 <HAL_DMA_Init+0x150>
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	697a      	ldr	r2, [r7, #20]
 8002230:	615a      	str	r2, [r3, #20]
 8002232:	6878      	ldr	r0, [r7, #4]
 8002234:	f000 fa96 	bl	8002764 <DMA_CalcBaseAndBitshift>
 8002238:	4603      	mov	r3, r0
 800223a:	60fb      	str	r3, [r7, #12]
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002240:	223f      	movs	r2, #63	@ 0x3f
 8002242:	409a      	lsls	r2, r3
 8002244:	68fb      	ldr	r3, [r7, #12]
 8002246:	609a      	str	r2, [r3, #8]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	2200      	movs	r2, #0
 800224c:	655a      	str	r2, [r3, #84]	@ 0x54
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	2201      	movs	r2, #1
 8002252:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002256:	2300      	movs	r3, #0
 8002258:	4618      	mov	r0, r3
 800225a:	3718      	adds	r7, #24
 800225c:	46bd      	mov	sp, r7
 800225e:	bd80      	pop	{r7, pc}
 8002260:	f010803f 	.word	0xf010803f

08002264 <HAL_DMA_Start_IT>:
 8002264:	b580      	push	{r7, lr}
 8002266:	b086      	sub	sp, #24
 8002268:	af00      	add	r7, sp, #0
 800226a:	60f8      	str	r0, [r7, #12]
 800226c:	60b9      	str	r1, [r7, #8]
 800226e:	607a      	str	r2, [r7, #4]
 8002270:	603b      	str	r3, [r7, #0]
 8002272:	2300      	movs	r3, #0
 8002274:	75fb      	strb	r3, [r7, #23]
 8002276:	68fb      	ldr	r3, [r7, #12]
 8002278:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800227a:	613b      	str	r3, [r7, #16]
 800227c:	68fb      	ldr	r3, [r7, #12]
 800227e:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8002282:	2b01      	cmp	r3, #1
 8002284:	d101      	bne.n	800228a <HAL_DMA_Start_IT+0x26>
 8002286:	2302      	movs	r3, #2
 8002288:	e040      	b.n	800230c <HAL_DMA_Start_IT+0xa8>
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	2201      	movs	r2, #1
 800228e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002292:	68fb      	ldr	r3, [r7, #12]
 8002294:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002298:	b2db      	uxtb	r3, r3
 800229a:	2b01      	cmp	r3, #1
 800229c:	d12f      	bne.n	80022fe <HAL_DMA_Start_IT+0x9a>
 800229e:	68fb      	ldr	r3, [r7, #12]
 80022a0:	2202      	movs	r2, #2
 80022a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022a6:	68fb      	ldr	r3, [r7, #12]
 80022a8:	2200      	movs	r2, #0
 80022aa:	655a      	str	r2, [r3, #84]	@ 0x54
 80022ac:	683b      	ldr	r3, [r7, #0]
 80022ae:	687a      	ldr	r2, [r7, #4]
 80022b0:	68b9      	ldr	r1, [r7, #8]
 80022b2:	68f8      	ldr	r0, [r7, #12]
 80022b4:	f000 fa28 	bl	8002708 <DMA_SetConfig>
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80022bc:	223f      	movs	r2, #63	@ 0x3f
 80022be:	409a      	lsls	r2, r3
 80022c0:	693b      	ldr	r3, [r7, #16]
 80022c2:	609a      	str	r2, [r3, #8]
 80022c4:	68fb      	ldr	r3, [r7, #12]
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	681a      	ldr	r2, [r3, #0]
 80022ca:	68fb      	ldr	r3, [r7, #12]
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	f042 0216 	orr.w	r2, r2, #22
 80022d2:	601a      	str	r2, [r3, #0]
 80022d4:	68fb      	ldr	r3, [r7, #12]
 80022d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d007      	beq.n	80022ec <HAL_DMA_Start_IT+0x88>
 80022dc:	68fb      	ldr	r3, [r7, #12]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	681a      	ldr	r2, [r3, #0]
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	f042 0208 	orr.w	r2, r2, #8
 80022ea:	601a      	str	r2, [r3, #0]
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	681a      	ldr	r2, [r3, #0]
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	f042 0201 	orr.w	r2, r2, #1
 80022fa:	601a      	str	r2, [r3, #0]
 80022fc:	e005      	b.n	800230a <HAL_DMA_Start_IT+0xa6>
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	2200      	movs	r2, #0
 8002302:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002306:	2302      	movs	r3, #2
 8002308:	75fb      	strb	r3, [r7, #23]
 800230a:	7dfb      	ldrb	r3, [r7, #23]
 800230c:	4618      	mov	r0, r3
 800230e:	3718      	adds	r7, #24
 8002310:	46bd      	mov	sp, r7
 8002312:	bd80      	pop	{r7, pc}

08002314 <HAL_DMA_Abort>:
 8002314:	b580      	push	{r7, lr}
 8002316:	b084      	sub	sp, #16
 8002318:	af00      	add	r7, sp, #0
 800231a:	6078      	str	r0, [r7, #4]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002320:	60fb      	str	r3, [r7, #12]
 8002322:	f7ff f93d 	bl	80015a0 <HAL_GetTick>
 8002326:	60b8      	str	r0, [r7, #8]
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800232e:	b2db      	uxtb	r3, r3
 8002330:	2b02      	cmp	r3, #2
 8002332:	d008      	beq.n	8002346 <HAL_DMA_Abort+0x32>
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	2280      	movs	r2, #128	@ 0x80
 8002338:	655a      	str	r2, [r3, #84]	@ 0x54
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	2200      	movs	r2, #0
 800233e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002342:	2301      	movs	r3, #1
 8002344:	e052      	b.n	80023ec <HAL_DMA_Abort+0xd8>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	681a      	ldr	r2, [r3, #0]
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	f022 0216 	bic.w	r2, r2, #22
 8002354:	601a      	str	r2, [r3, #0]
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	695a      	ldr	r2, [r3, #20]
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002364:	615a      	str	r2, [r3, #20]
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800236a:	2b00      	cmp	r3, #0
 800236c:	d103      	bne.n	8002376 <HAL_DMA_Abort+0x62>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002372:	2b00      	cmp	r3, #0
 8002374:	d007      	beq.n	8002386 <HAL_DMA_Abort+0x72>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	681a      	ldr	r2, [r3, #0]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	f022 0208 	bic.w	r2, r2, #8
 8002384:	601a      	str	r2, [r3, #0]
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	681a      	ldr	r2, [r3, #0]
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	f022 0201 	bic.w	r2, r2, #1
 8002394:	601a      	str	r2, [r3, #0]
 8002396:	e013      	b.n	80023c0 <HAL_DMA_Abort+0xac>
 8002398:	f7ff f902 	bl	80015a0 <HAL_GetTick>
 800239c:	4602      	mov	r2, r0
 800239e:	68bb      	ldr	r3, [r7, #8]
 80023a0:	1ad3      	subs	r3, r2, r3
 80023a2:	2b05      	cmp	r3, #5
 80023a4:	d90c      	bls.n	80023c0 <HAL_DMA_Abort+0xac>
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	2220      	movs	r2, #32
 80023aa:	655a      	str	r2, [r3, #84]	@ 0x54
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	2203      	movs	r2, #3
 80023b0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	2200      	movs	r2, #0
 80023b8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80023bc:	2303      	movs	r3, #3
 80023be:	e015      	b.n	80023ec <HAL_DMA_Abort+0xd8>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	f003 0301 	and.w	r3, r3, #1
 80023ca:	2b00      	cmp	r3, #0
 80023cc:	d1e4      	bne.n	8002398 <HAL_DMA_Abort+0x84>
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80023d2:	223f      	movs	r2, #63	@ 0x3f
 80023d4:	409a      	lsls	r2, r3
 80023d6:	68fb      	ldr	r3, [r7, #12]
 80023d8:	609a      	str	r2, [r3, #8]
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	2201      	movs	r2, #1
 80023de:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	2200      	movs	r2, #0
 80023e6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80023ea:	2300      	movs	r3, #0
 80023ec:	4618      	mov	r0, r3
 80023ee:	3710      	adds	r7, #16
 80023f0:	46bd      	mov	sp, r7
 80023f2:	bd80      	pop	{r7, pc}

080023f4 <HAL_DMA_IRQHandler>:
 80023f4:	b580      	push	{r7, lr}
 80023f6:	b086      	sub	sp, #24
 80023f8:	af00      	add	r7, sp, #0
 80023fa:	6078      	str	r0, [r7, #4]
 80023fc:	2300      	movs	r3, #0
 80023fe:	60bb      	str	r3, [r7, #8]
 8002400:	4b8e      	ldr	r3, [pc, #568]	@ (800263c <HAL_DMA_IRQHandler+0x248>)
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	4a8e      	ldr	r2, [pc, #568]	@ (8002640 <HAL_DMA_IRQHandler+0x24c>)
 8002406:	fba2 2303 	umull	r2, r3, r2, r3
 800240a:	0a9b      	lsrs	r3, r3, #10
 800240c:	617b      	str	r3, [r7, #20]
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002412:	613b      	str	r3, [r7, #16]
 8002414:	693b      	ldr	r3, [r7, #16]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	60fb      	str	r3, [r7, #12]
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800241e:	2208      	movs	r2, #8
 8002420:	409a      	lsls	r2, r3
 8002422:	68fb      	ldr	r3, [r7, #12]
 8002424:	4013      	ands	r3, r2
 8002426:	2b00      	cmp	r3, #0
 8002428:	d01a      	beq.n	8002460 <HAL_DMA_IRQHandler+0x6c>
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	f003 0304 	and.w	r3, r3, #4
 8002434:	2b00      	cmp	r3, #0
 8002436:	d013      	beq.n	8002460 <HAL_DMA_IRQHandler+0x6c>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	681a      	ldr	r2, [r3, #0]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	f022 0204 	bic.w	r2, r2, #4
 8002446:	601a      	str	r2, [r3, #0]
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800244c:	2208      	movs	r2, #8
 800244e:	409a      	lsls	r2, r3
 8002450:	693b      	ldr	r3, [r7, #16]
 8002452:	609a      	str	r2, [r3, #8]
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002458:	f043 0201 	orr.w	r2, r3, #1
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002464:	2201      	movs	r2, #1
 8002466:	409a      	lsls	r2, r3
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	4013      	ands	r3, r2
 800246c:	2b00      	cmp	r3, #0
 800246e:	d012      	beq.n	8002496 <HAL_DMA_IRQHandler+0xa2>
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	695b      	ldr	r3, [r3, #20]
 8002476:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800247a:	2b00      	cmp	r3, #0
 800247c:	d00b      	beq.n	8002496 <HAL_DMA_IRQHandler+0xa2>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002482:	2201      	movs	r2, #1
 8002484:	409a      	lsls	r2, r3
 8002486:	693b      	ldr	r3, [r7, #16]
 8002488:	609a      	str	r2, [r3, #8]
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800248e:	f043 0202 	orr.w	r2, r3, #2
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	655a      	str	r2, [r3, #84]	@ 0x54
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800249a:	2204      	movs	r2, #4
 800249c:	409a      	lsls	r2, r3
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	4013      	ands	r3, r2
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d012      	beq.n	80024cc <HAL_DMA_IRQHandler+0xd8>
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	f003 0302 	and.w	r3, r3, #2
 80024b0:	2b00      	cmp	r3, #0
 80024b2:	d00b      	beq.n	80024cc <HAL_DMA_IRQHandler+0xd8>
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024b8:	2204      	movs	r2, #4
 80024ba:	409a      	lsls	r2, r3
 80024bc:	693b      	ldr	r3, [r7, #16]
 80024be:	609a      	str	r2, [r3, #8]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80024c4:	f043 0204 	orr.w	r2, r3, #4
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	655a      	str	r2, [r3, #84]	@ 0x54
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024d0:	2210      	movs	r2, #16
 80024d2:	409a      	lsls	r2, r3
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	4013      	ands	r3, r2
 80024d8:	2b00      	cmp	r3, #0
 80024da:	d043      	beq.n	8002564 <HAL_DMA_IRQHandler+0x170>
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	681b      	ldr	r3, [r3, #0]
 80024e2:	f003 0308 	and.w	r3, r3, #8
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d03c      	beq.n	8002564 <HAL_DMA_IRQHandler+0x170>
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80024ee:	2210      	movs	r2, #16
 80024f0:	409a      	lsls	r2, r3
 80024f2:	693b      	ldr	r3, [r7, #16]
 80024f4:	609a      	str	r2, [r3, #8]
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	681b      	ldr	r3, [r3, #0]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002500:	2b00      	cmp	r3, #0
 8002502:	d018      	beq.n	8002536 <HAL_DMA_IRQHandler+0x142>
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800250e:	2b00      	cmp	r3, #0
 8002510:	d108      	bne.n	8002524 <HAL_DMA_IRQHandler+0x130>
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002516:	2b00      	cmp	r3, #0
 8002518:	d024      	beq.n	8002564 <HAL_DMA_IRQHandler+0x170>
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800251e:	6878      	ldr	r0, [r7, #4]
 8002520:	4798      	blx	r3
 8002522:	e01f      	b.n	8002564 <HAL_DMA_IRQHandler+0x170>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002528:	2b00      	cmp	r3, #0
 800252a:	d01b      	beq.n	8002564 <HAL_DMA_IRQHandler+0x170>
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002530:	6878      	ldr	r0, [r7, #4]
 8002532:	4798      	blx	r3
 8002534:	e016      	b.n	8002564 <HAL_DMA_IRQHandler+0x170>
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002540:	2b00      	cmp	r3, #0
 8002542:	d107      	bne.n	8002554 <HAL_DMA_IRQHandler+0x160>
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	681a      	ldr	r2, [r3, #0]
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	f022 0208 	bic.w	r2, r2, #8
 8002552:	601a      	str	r2, [r3, #0]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002558:	2b00      	cmp	r3, #0
 800255a:	d003      	beq.n	8002564 <HAL_DMA_IRQHandler+0x170>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002560:	6878      	ldr	r0, [r7, #4]
 8002562:	4798      	blx	r3
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002568:	2220      	movs	r2, #32
 800256a:	409a      	lsls	r2, r3
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	4013      	ands	r3, r2
 8002570:	2b00      	cmp	r3, #0
 8002572:	f000 808f 	beq.w	8002694 <HAL_DMA_IRQHandler+0x2a0>
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	f003 0310 	and.w	r3, r3, #16
 8002580:	2b00      	cmp	r3, #0
 8002582:	f000 8087 	beq.w	8002694 <HAL_DMA_IRQHandler+0x2a0>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800258a:	2220      	movs	r2, #32
 800258c:	409a      	lsls	r2, r3
 800258e:	693b      	ldr	r3, [r7, #16]
 8002590:	609a      	str	r2, [r3, #8]
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002598:	b2db      	uxtb	r3, r3
 800259a:	2b05      	cmp	r3, #5
 800259c:	d136      	bne.n	800260c <HAL_DMA_IRQHandler+0x218>
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	681a      	ldr	r2, [r3, #0]
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	f022 0216 	bic.w	r2, r2, #22
 80025ac:	601a      	str	r2, [r3, #0]
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	695a      	ldr	r2, [r3, #20]
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80025bc:	615a      	str	r2, [r3, #20]
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d103      	bne.n	80025ce <HAL_DMA_IRQHandler+0x1da>
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	d007      	beq.n	80025de <HAL_DMA_IRQHandler+0x1ea>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	681a      	ldr	r2, [r3, #0]
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	f022 0208 	bic.w	r2, r2, #8
 80025dc:	601a      	str	r2, [r3, #0]
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80025e2:	223f      	movs	r2, #63	@ 0x3f
 80025e4:	409a      	lsls	r2, r3
 80025e6:	693b      	ldr	r3, [r7, #16]
 80025e8:	609a      	str	r2, [r3, #8]
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	2201      	movs	r2, #1
 80025ee:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	2200      	movs	r2, #0
 80025f6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d07e      	beq.n	8002700 <HAL_DMA_IRQHandler+0x30c>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002606:	6878      	ldr	r0, [r7, #4]
 8002608:	4798      	blx	r3
 800260a:	e079      	b.n	8002700 <HAL_DMA_IRQHandler+0x30c>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002616:	2b00      	cmp	r3, #0
 8002618:	d01d      	beq.n	8002656 <HAL_DMA_IRQHandler+0x262>
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002624:	2b00      	cmp	r3, #0
 8002626:	d10d      	bne.n	8002644 <HAL_DMA_IRQHandler+0x250>
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800262c:	2b00      	cmp	r3, #0
 800262e:	d031      	beq.n	8002694 <HAL_DMA_IRQHandler+0x2a0>
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002634:	6878      	ldr	r0, [r7, #4]
 8002636:	4798      	blx	r3
 8002638:	e02c      	b.n	8002694 <HAL_DMA_IRQHandler+0x2a0>
 800263a:	bf00      	nop
 800263c:	20000064 	.word	0x20000064
 8002640:	1b4e81b5 	.word	0x1b4e81b5
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002648:	2b00      	cmp	r3, #0
 800264a:	d023      	beq.n	8002694 <HAL_DMA_IRQHandler+0x2a0>
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002650:	6878      	ldr	r0, [r7, #4]
 8002652:	4798      	blx	r3
 8002654:	e01e      	b.n	8002694 <HAL_DMA_IRQHandler+0x2a0>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	681b      	ldr	r3, [r3, #0]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002660:	2b00      	cmp	r3, #0
 8002662:	d10f      	bne.n	8002684 <HAL_DMA_IRQHandler+0x290>
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	681a      	ldr	r2, [r3, #0]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	f022 0210 	bic.w	r2, r2, #16
 8002672:	601a      	str	r2, [r3, #0]
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	2201      	movs	r2, #1
 8002678:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	2200      	movs	r2, #0
 8002680:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002688:	2b00      	cmp	r3, #0
 800268a:	d003      	beq.n	8002694 <HAL_DMA_IRQHandler+0x2a0>
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002690:	6878      	ldr	r0, [r7, #4]
 8002692:	4798      	blx	r3
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002698:	2b00      	cmp	r3, #0
 800269a:	d032      	beq.n	8002702 <HAL_DMA_IRQHandler+0x30e>
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80026a0:	f003 0301 	and.w	r3, r3, #1
 80026a4:	2b00      	cmp	r3, #0
 80026a6:	d022      	beq.n	80026ee <HAL_DMA_IRQHandler+0x2fa>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	2205      	movs	r2, #5
 80026ac:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	681a      	ldr	r2, [r3, #0]
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	f022 0201 	bic.w	r2, r2, #1
 80026be:	601a      	str	r2, [r3, #0]
 80026c0:	68bb      	ldr	r3, [r7, #8]
 80026c2:	3301      	adds	r3, #1
 80026c4:	60bb      	str	r3, [r7, #8]
 80026c6:	697a      	ldr	r2, [r7, #20]
 80026c8:	429a      	cmp	r2, r3
 80026ca:	d307      	bcc.n	80026dc <HAL_DMA_IRQHandler+0x2e8>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	f003 0301 	and.w	r3, r3, #1
 80026d6:	2b00      	cmp	r3, #0
 80026d8:	d1f2      	bne.n	80026c0 <HAL_DMA_IRQHandler+0x2cc>
 80026da:	e000      	b.n	80026de <HAL_DMA_IRQHandler+0x2ea>
 80026dc:	bf00      	nop
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	2201      	movs	r2, #1
 80026e2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	2200      	movs	r2, #0
 80026ea:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80026f2:	2b00      	cmp	r3, #0
 80026f4:	d005      	beq.n	8002702 <HAL_DMA_IRQHandler+0x30e>
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80026fa:	6878      	ldr	r0, [r7, #4]
 80026fc:	4798      	blx	r3
 80026fe:	e000      	b.n	8002702 <HAL_DMA_IRQHandler+0x30e>
 8002700:	bf00      	nop
 8002702:	3718      	adds	r7, #24
 8002704:	46bd      	mov	sp, r7
 8002706:	bd80      	pop	{r7, pc}

08002708 <DMA_SetConfig>:
 8002708:	b480      	push	{r7}
 800270a:	b085      	sub	sp, #20
 800270c:	af00      	add	r7, sp, #0
 800270e:	60f8      	str	r0, [r7, #12]
 8002710:	60b9      	str	r1, [r7, #8]
 8002712:	607a      	str	r2, [r7, #4]
 8002714:	603b      	str	r3, [r7, #0]
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	681a      	ldr	r2, [r3, #0]
 800271c:	68fb      	ldr	r3, [r7, #12]
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8002724:	601a      	str	r2, [r3, #0]
 8002726:	68fb      	ldr	r3, [r7, #12]
 8002728:	681b      	ldr	r3, [r3, #0]
 800272a:	683a      	ldr	r2, [r7, #0]
 800272c:	605a      	str	r2, [r3, #4]
 800272e:	68fb      	ldr	r3, [r7, #12]
 8002730:	689b      	ldr	r3, [r3, #8]
 8002732:	2b40      	cmp	r3, #64	@ 0x40
 8002734:	d108      	bne.n	8002748 <DMA_SetConfig+0x40>
 8002736:	68fb      	ldr	r3, [r7, #12]
 8002738:	681b      	ldr	r3, [r3, #0]
 800273a:	687a      	ldr	r2, [r7, #4]
 800273c:	609a      	str	r2, [r3, #8]
 800273e:	68fb      	ldr	r3, [r7, #12]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	68ba      	ldr	r2, [r7, #8]
 8002744:	60da      	str	r2, [r3, #12]
 8002746:	e007      	b.n	8002758 <DMA_SetConfig+0x50>
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	68ba      	ldr	r2, [r7, #8]
 800274e:	609a      	str	r2, [r3, #8]
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	687a      	ldr	r2, [r7, #4]
 8002756:	60da      	str	r2, [r3, #12]
 8002758:	bf00      	nop
 800275a:	3714      	adds	r7, #20
 800275c:	46bd      	mov	sp, r7
 800275e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002762:	4770      	bx	lr

08002764 <DMA_CalcBaseAndBitshift>:
 8002764:	b480      	push	{r7}
 8002766:	b085      	sub	sp, #20
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	b2db      	uxtb	r3, r3
 8002772:	3b10      	subs	r3, #16
 8002774:	4a14      	ldr	r2, [pc, #80]	@ (80027c8 <DMA_CalcBaseAndBitshift+0x64>)
 8002776:	fba2 2303 	umull	r2, r3, r2, r3
 800277a:	091b      	lsrs	r3, r3, #4
 800277c:	60fb      	str	r3, [r7, #12]
 800277e:	4a13      	ldr	r2, [pc, #76]	@ (80027cc <DMA_CalcBaseAndBitshift+0x68>)
 8002780:	68fb      	ldr	r3, [r7, #12]
 8002782:	4413      	add	r3, r2
 8002784:	781b      	ldrb	r3, [r3, #0]
 8002786:	461a      	mov	r2, r3
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800278c:	68fb      	ldr	r3, [r7, #12]
 800278e:	2b03      	cmp	r3, #3
 8002790:	d909      	bls.n	80027a6 <DMA_CalcBaseAndBitshift+0x42>
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800279a:	f023 0303 	bic.w	r3, r3, #3
 800279e:	1d1a      	adds	r2, r3, #4
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	659a      	str	r2, [r3, #88]	@ 0x58
 80027a4:	e007      	b.n	80027b6 <DMA_CalcBaseAndBitshift+0x52>
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 80027ae:	f023 0303 	bic.w	r3, r3, #3
 80027b2:	687a      	ldr	r2, [r7, #4]
 80027b4:	6593      	str	r3, [r2, #88]	@ 0x58
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80027ba:	4618      	mov	r0, r3
 80027bc:	3714      	adds	r7, #20
 80027be:	46bd      	mov	sp, r7
 80027c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c4:	4770      	bx	lr
 80027c6:	bf00      	nop
 80027c8:	aaaaaaab 	.word	0xaaaaaaab
 80027cc:	080058d4 	.word	0x080058d4

080027d0 <DMA_CheckFifoParam>:
 80027d0:	b480      	push	{r7}
 80027d2:	b085      	sub	sp, #20
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	6078      	str	r0, [r7, #4]
 80027d8:	2300      	movs	r3, #0
 80027da:	73fb      	strb	r3, [r7, #15]
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80027e0:	60bb      	str	r3, [r7, #8]
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	699b      	ldr	r3, [r3, #24]
 80027e6:	2b00      	cmp	r3, #0
 80027e8:	d11f      	bne.n	800282a <DMA_CheckFifoParam+0x5a>
 80027ea:	68bb      	ldr	r3, [r7, #8]
 80027ec:	2b03      	cmp	r3, #3
 80027ee:	d856      	bhi.n	800289e <DMA_CheckFifoParam+0xce>
 80027f0:	a201      	add	r2, pc, #4	@ (adr r2, 80027f8 <DMA_CheckFifoParam+0x28>)
 80027f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027f6:	bf00      	nop
 80027f8:	08002809 	.word	0x08002809
 80027fc:	0800281b 	.word	0x0800281b
 8002800:	08002809 	.word	0x08002809
 8002804:	0800289f 	.word	0x0800289f
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800280c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002810:	2b00      	cmp	r3, #0
 8002812:	d046      	beq.n	80028a2 <DMA_CheckFifoParam+0xd2>
 8002814:	2301      	movs	r3, #1
 8002816:	73fb      	strb	r3, [r7, #15]
 8002818:	e043      	b.n	80028a2 <DMA_CheckFifoParam+0xd2>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800281e:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002822:	d140      	bne.n	80028a6 <DMA_CheckFifoParam+0xd6>
 8002824:	2301      	movs	r3, #1
 8002826:	73fb      	strb	r3, [r7, #15]
 8002828:	e03d      	b.n	80028a6 <DMA_CheckFifoParam+0xd6>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	699b      	ldr	r3, [r3, #24]
 800282e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002832:	d121      	bne.n	8002878 <DMA_CheckFifoParam+0xa8>
 8002834:	68bb      	ldr	r3, [r7, #8]
 8002836:	2b03      	cmp	r3, #3
 8002838:	d837      	bhi.n	80028aa <DMA_CheckFifoParam+0xda>
 800283a:	a201      	add	r2, pc, #4	@ (adr r2, 8002840 <DMA_CheckFifoParam+0x70>)
 800283c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002840:	08002851 	.word	0x08002851
 8002844:	08002857 	.word	0x08002857
 8002848:	08002851 	.word	0x08002851
 800284c:	08002869 	.word	0x08002869
 8002850:	2301      	movs	r3, #1
 8002852:	73fb      	strb	r3, [r7, #15]
 8002854:	e030      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800285a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800285e:	2b00      	cmp	r3, #0
 8002860:	d025      	beq.n	80028ae <DMA_CheckFifoParam+0xde>
 8002862:	2301      	movs	r3, #1
 8002864:	73fb      	strb	r3, [r7, #15]
 8002866:	e022      	b.n	80028ae <DMA_CheckFifoParam+0xde>
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800286c:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002870:	d11f      	bne.n	80028b2 <DMA_CheckFifoParam+0xe2>
 8002872:	2301      	movs	r3, #1
 8002874:	73fb      	strb	r3, [r7, #15]
 8002876:	e01c      	b.n	80028b2 <DMA_CheckFifoParam+0xe2>
 8002878:	68bb      	ldr	r3, [r7, #8]
 800287a:	2b02      	cmp	r3, #2
 800287c:	d903      	bls.n	8002886 <DMA_CheckFifoParam+0xb6>
 800287e:	68bb      	ldr	r3, [r7, #8]
 8002880:	2b03      	cmp	r3, #3
 8002882:	d003      	beq.n	800288c <DMA_CheckFifoParam+0xbc>
 8002884:	e018      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 8002886:	2301      	movs	r3, #1
 8002888:	73fb      	strb	r3, [r7, #15]
 800288a:	e015      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002890:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002894:	2b00      	cmp	r3, #0
 8002896:	d00e      	beq.n	80028b6 <DMA_CheckFifoParam+0xe6>
 8002898:	2301      	movs	r3, #1
 800289a:	73fb      	strb	r3, [r7, #15]
 800289c:	e00b      	b.n	80028b6 <DMA_CheckFifoParam+0xe6>
 800289e:	bf00      	nop
 80028a0:	e00a      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 80028a2:	bf00      	nop
 80028a4:	e008      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 80028a6:	bf00      	nop
 80028a8:	e006      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 80028aa:	bf00      	nop
 80028ac:	e004      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 80028ae:	bf00      	nop
 80028b0:	e002      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 80028b2:	bf00      	nop
 80028b4:	e000      	b.n	80028b8 <DMA_CheckFifoParam+0xe8>
 80028b6:	bf00      	nop
 80028b8:	7bfb      	ldrb	r3, [r7, #15]
 80028ba:	4618      	mov	r0, r3
 80028bc:	3714      	adds	r7, #20
 80028be:	46bd      	mov	sp, r7
 80028c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c4:	4770      	bx	lr
 80028c6:	bf00      	nop

080028c8 <HAL_GPIO_Init>:
 80028c8:	b480      	push	{r7}
 80028ca:	b089      	sub	sp, #36	@ 0x24
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	6078      	str	r0, [r7, #4]
 80028d0:	6039      	str	r1, [r7, #0]
 80028d2:	2300      	movs	r3, #0
 80028d4:	617b      	str	r3, [r7, #20]
 80028d6:	2300      	movs	r3, #0
 80028d8:	613b      	str	r3, [r7, #16]
 80028da:	2300      	movs	r3, #0
 80028dc:	61bb      	str	r3, [r7, #24]
 80028de:	2300      	movs	r3, #0
 80028e0:	61fb      	str	r3, [r7, #28]
 80028e2:	e165      	b.n	8002bb0 <HAL_GPIO_Init+0x2e8>
 80028e4:	2201      	movs	r2, #1
 80028e6:	69fb      	ldr	r3, [r7, #28]
 80028e8:	fa02 f303 	lsl.w	r3, r2, r3
 80028ec:	617b      	str	r3, [r7, #20]
 80028ee:	683b      	ldr	r3, [r7, #0]
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	697a      	ldr	r2, [r7, #20]
 80028f4:	4013      	ands	r3, r2
 80028f6:	613b      	str	r3, [r7, #16]
 80028f8:	693a      	ldr	r2, [r7, #16]
 80028fa:	697b      	ldr	r3, [r7, #20]
 80028fc:	429a      	cmp	r2, r3
 80028fe:	f040 8154 	bne.w	8002baa <HAL_GPIO_Init+0x2e2>
 8002902:	683b      	ldr	r3, [r7, #0]
 8002904:	685b      	ldr	r3, [r3, #4]
 8002906:	f003 0303 	and.w	r3, r3, #3
 800290a:	2b01      	cmp	r3, #1
 800290c:	d005      	beq.n	800291a <HAL_GPIO_Init+0x52>
 800290e:	683b      	ldr	r3, [r7, #0]
 8002910:	685b      	ldr	r3, [r3, #4]
 8002912:	f003 0303 	and.w	r3, r3, #3
 8002916:	2b02      	cmp	r3, #2
 8002918:	d130      	bne.n	800297c <HAL_GPIO_Init+0xb4>
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	689b      	ldr	r3, [r3, #8]
 800291e:	61bb      	str	r3, [r7, #24]
 8002920:	69fb      	ldr	r3, [r7, #28]
 8002922:	005b      	lsls	r3, r3, #1
 8002924:	2203      	movs	r2, #3
 8002926:	fa02 f303 	lsl.w	r3, r2, r3
 800292a:	43db      	mvns	r3, r3
 800292c:	69ba      	ldr	r2, [r7, #24]
 800292e:	4013      	ands	r3, r2
 8002930:	61bb      	str	r3, [r7, #24]
 8002932:	683b      	ldr	r3, [r7, #0]
 8002934:	68da      	ldr	r2, [r3, #12]
 8002936:	69fb      	ldr	r3, [r7, #28]
 8002938:	005b      	lsls	r3, r3, #1
 800293a:	fa02 f303 	lsl.w	r3, r2, r3
 800293e:	69ba      	ldr	r2, [r7, #24]
 8002940:	4313      	orrs	r3, r2
 8002942:	61bb      	str	r3, [r7, #24]
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	69ba      	ldr	r2, [r7, #24]
 8002948:	609a      	str	r2, [r3, #8]
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	685b      	ldr	r3, [r3, #4]
 800294e:	61bb      	str	r3, [r7, #24]
 8002950:	2201      	movs	r2, #1
 8002952:	69fb      	ldr	r3, [r7, #28]
 8002954:	fa02 f303 	lsl.w	r3, r2, r3
 8002958:	43db      	mvns	r3, r3
 800295a:	69ba      	ldr	r2, [r7, #24]
 800295c:	4013      	ands	r3, r2
 800295e:	61bb      	str	r3, [r7, #24]
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	685b      	ldr	r3, [r3, #4]
 8002964:	091b      	lsrs	r3, r3, #4
 8002966:	f003 0201 	and.w	r2, r3, #1
 800296a:	69fb      	ldr	r3, [r7, #28]
 800296c:	fa02 f303 	lsl.w	r3, r2, r3
 8002970:	69ba      	ldr	r2, [r7, #24]
 8002972:	4313      	orrs	r3, r2
 8002974:	61bb      	str	r3, [r7, #24]
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	69ba      	ldr	r2, [r7, #24]
 800297a:	605a      	str	r2, [r3, #4]
 800297c:	683b      	ldr	r3, [r7, #0]
 800297e:	685b      	ldr	r3, [r3, #4]
 8002980:	f003 0303 	and.w	r3, r3, #3
 8002984:	2b03      	cmp	r3, #3
 8002986:	d017      	beq.n	80029b8 <HAL_GPIO_Init+0xf0>
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	68db      	ldr	r3, [r3, #12]
 800298c:	61bb      	str	r3, [r7, #24]
 800298e:	69fb      	ldr	r3, [r7, #28]
 8002990:	005b      	lsls	r3, r3, #1
 8002992:	2203      	movs	r2, #3
 8002994:	fa02 f303 	lsl.w	r3, r2, r3
 8002998:	43db      	mvns	r3, r3
 800299a:	69ba      	ldr	r2, [r7, #24]
 800299c:	4013      	ands	r3, r2
 800299e:	61bb      	str	r3, [r7, #24]
 80029a0:	683b      	ldr	r3, [r7, #0]
 80029a2:	689a      	ldr	r2, [r3, #8]
 80029a4:	69fb      	ldr	r3, [r7, #28]
 80029a6:	005b      	lsls	r3, r3, #1
 80029a8:	fa02 f303 	lsl.w	r3, r2, r3
 80029ac:	69ba      	ldr	r2, [r7, #24]
 80029ae:	4313      	orrs	r3, r2
 80029b0:	61bb      	str	r3, [r7, #24]
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	69ba      	ldr	r2, [r7, #24]
 80029b6:	60da      	str	r2, [r3, #12]
 80029b8:	683b      	ldr	r3, [r7, #0]
 80029ba:	685b      	ldr	r3, [r3, #4]
 80029bc:	f003 0303 	and.w	r3, r3, #3
 80029c0:	2b02      	cmp	r3, #2
 80029c2:	d123      	bne.n	8002a0c <HAL_GPIO_Init+0x144>
 80029c4:	69fb      	ldr	r3, [r7, #28]
 80029c6:	08da      	lsrs	r2, r3, #3
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	3208      	adds	r2, #8
 80029cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80029d0:	61bb      	str	r3, [r7, #24]
 80029d2:	69fb      	ldr	r3, [r7, #28]
 80029d4:	f003 0307 	and.w	r3, r3, #7
 80029d8:	009b      	lsls	r3, r3, #2
 80029da:	220f      	movs	r2, #15
 80029dc:	fa02 f303 	lsl.w	r3, r2, r3
 80029e0:	43db      	mvns	r3, r3
 80029e2:	69ba      	ldr	r2, [r7, #24]
 80029e4:	4013      	ands	r3, r2
 80029e6:	61bb      	str	r3, [r7, #24]
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	691a      	ldr	r2, [r3, #16]
 80029ec:	69fb      	ldr	r3, [r7, #28]
 80029ee:	f003 0307 	and.w	r3, r3, #7
 80029f2:	009b      	lsls	r3, r3, #2
 80029f4:	fa02 f303 	lsl.w	r3, r2, r3
 80029f8:	69ba      	ldr	r2, [r7, #24]
 80029fa:	4313      	orrs	r3, r2
 80029fc:	61bb      	str	r3, [r7, #24]
 80029fe:	69fb      	ldr	r3, [r7, #28]
 8002a00:	08da      	lsrs	r2, r3, #3
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	3208      	adds	r2, #8
 8002a06:	69b9      	ldr	r1, [r7, #24]
 8002a08:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	61bb      	str	r3, [r7, #24]
 8002a12:	69fb      	ldr	r3, [r7, #28]
 8002a14:	005b      	lsls	r3, r3, #1
 8002a16:	2203      	movs	r2, #3
 8002a18:	fa02 f303 	lsl.w	r3, r2, r3
 8002a1c:	43db      	mvns	r3, r3
 8002a1e:	69ba      	ldr	r2, [r7, #24]
 8002a20:	4013      	ands	r3, r2
 8002a22:	61bb      	str	r3, [r7, #24]
 8002a24:	683b      	ldr	r3, [r7, #0]
 8002a26:	685b      	ldr	r3, [r3, #4]
 8002a28:	f003 0203 	and.w	r2, r3, #3
 8002a2c:	69fb      	ldr	r3, [r7, #28]
 8002a2e:	005b      	lsls	r3, r3, #1
 8002a30:	fa02 f303 	lsl.w	r3, r2, r3
 8002a34:	69ba      	ldr	r2, [r7, #24]
 8002a36:	4313      	orrs	r3, r2
 8002a38:	61bb      	str	r3, [r7, #24]
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	69ba      	ldr	r2, [r7, #24]
 8002a3e:	601a      	str	r2, [r3, #0]
 8002a40:	683b      	ldr	r3, [r7, #0]
 8002a42:	685b      	ldr	r3, [r3, #4]
 8002a44:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	f000 80ae 	beq.w	8002baa <HAL_GPIO_Init+0x2e2>
 8002a4e:	2300      	movs	r3, #0
 8002a50:	60fb      	str	r3, [r7, #12]
 8002a52:	4b5d      	ldr	r3, [pc, #372]	@ (8002bc8 <HAL_GPIO_Init+0x300>)
 8002a54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a56:	4a5c      	ldr	r2, [pc, #368]	@ (8002bc8 <HAL_GPIO_Init+0x300>)
 8002a58:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002a5c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002a5e:	4b5a      	ldr	r3, [pc, #360]	@ (8002bc8 <HAL_GPIO_Init+0x300>)
 8002a60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a62:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002a66:	60fb      	str	r3, [r7, #12]
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	4a58      	ldr	r2, [pc, #352]	@ (8002bcc <HAL_GPIO_Init+0x304>)
 8002a6c:	69fb      	ldr	r3, [r7, #28]
 8002a6e:	089b      	lsrs	r3, r3, #2
 8002a70:	3302      	adds	r3, #2
 8002a72:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002a76:	61bb      	str	r3, [r7, #24]
 8002a78:	69fb      	ldr	r3, [r7, #28]
 8002a7a:	f003 0303 	and.w	r3, r3, #3
 8002a7e:	009b      	lsls	r3, r3, #2
 8002a80:	220f      	movs	r2, #15
 8002a82:	fa02 f303 	lsl.w	r3, r2, r3
 8002a86:	43db      	mvns	r3, r3
 8002a88:	69ba      	ldr	r2, [r7, #24]
 8002a8a:	4013      	ands	r3, r2
 8002a8c:	61bb      	str	r3, [r7, #24]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	4a4f      	ldr	r2, [pc, #316]	@ (8002bd0 <HAL_GPIO_Init+0x308>)
 8002a92:	4293      	cmp	r3, r2
 8002a94:	d025      	beq.n	8002ae2 <HAL_GPIO_Init+0x21a>
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	4a4e      	ldr	r2, [pc, #312]	@ (8002bd4 <HAL_GPIO_Init+0x30c>)
 8002a9a:	4293      	cmp	r3, r2
 8002a9c:	d01f      	beq.n	8002ade <HAL_GPIO_Init+0x216>
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	4a4d      	ldr	r2, [pc, #308]	@ (8002bd8 <HAL_GPIO_Init+0x310>)
 8002aa2:	4293      	cmp	r3, r2
 8002aa4:	d019      	beq.n	8002ada <HAL_GPIO_Init+0x212>
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	4a4c      	ldr	r2, [pc, #304]	@ (8002bdc <HAL_GPIO_Init+0x314>)
 8002aaa:	4293      	cmp	r3, r2
 8002aac:	d013      	beq.n	8002ad6 <HAL_GPIO_Init+0x20e>
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	4a4b      	ldr	r2, [pc, #300]	@ (8002be0 <HAL_GPIO_Init+0x318>)
 8002ab2:	4293      	cmp	r3, r2
 8002ab4:	d00d      	beq.n	8002ad2 <HAL_GPIO_Init+0x20a>
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	4a4a      	ldr	r2, [pc, #296]	@ (8002be4 <HAL_GPIO_Init+0x31c>)
 8002aba:	4293      	cmp	r3, r2
 8002abc:	d007      	beq.n	8002ace <HAL_GPIO_Init+0x206>
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	4a49      	ldr	r2, [pc, #292]	@ (8002be8 <HAL_GPIO_Init+0x320>)
 8002ac2:	4293      	cmp	r3, r2
 8002ac4:	d101      	bne.n	8002aca <HAL_GPIO_Init+0x202>
 8002ac6:	2306      	movs	r3, #6
 8002ac8:	e00c      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002aca:	2307      	movs	r3, #7
 8002acc:	e00a      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002ace:	2305      	movs	r3, #5
 8002ad0:	e008      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002ad2:	2304      	movs	r3, #4
 8002ad4:	e006      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002ad6:	2303      	movs	r3, #3
 8002ad8:	e004      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002ada:	2302      	movs	r3, #2
 8002adc:	e002      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002ade:	2301      	movs	r3, #1
 8002ae0:	e000      	b.n	8002ae4 <HAL_GPIO_Init+0x21c>
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	69fa      	ldr	r2, [r7, #28]
 8002ae6:	f002 0203 	and.w	r2, r2, #3
 8002aea:	0092      	lsls	r2, r2, #2
 8002aec:	4093      	lsls	r3, r2
 8002aee:	69ba      	ldr	r2, [r7, #24]
 8002af0:	4313      	orrs	r3, r2
 8002af2:	61bb      	str	r3, [r7, #24]
 8002af4:	4935      	ldr	r1, [pc, #212]	@ (8002bcc <HAL_GPIO_Init+0x304>)
 8002af6:	69fb      	ldr	r3, [r7, #28]
 8002af8:	089b      	lsrs	r3, r3, #2
 8002afa:	3302      	adds	r3, #2
 8002afc:	69ba      	ldr	r2, [r7, #24]
 8002afe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002b02:	4b3a      	ldr	r3, [pc, #232]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b04:	689b      	ldr	r3, [r3, #8]
 8002b06:	61bb      	str	r3, [r7, #24]
 8002b08:	693b      	ldr	r3, [r7, #16]
 8002b0a:	43db      	mvns	r3, r3
 8002b0c:	69ba      	ldr	r2, [r7, #24]
 8002b0e:	4013      	ands	r3, r2
 8002b10:	61bb      	str	r3, [r7, #24]
 8002b12:	683b      	ldr	r3, [r7, #0]
 8002b14:	685b      	ldr	r3, [r3, #4]
 8002b16:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	d003      	beq.n	8002b26 <HAL_GPIO_Init+0x25e>
 8002b1e:	69ba      	ldr	r2, [r7, #24]
 8002b20:	693b      	ldr	r3, [r7, #16]
 8002b22:	4313      	orrs	r3, r2
 8002b24:	61bb      	str	r3, [r7, #24]
 8002b26:	4a31      	ldr	r2, [pc, #196]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b28:	69bb      	ldr	r3, [r7, #24]
 8002b2a:	6093      	str	r3, [r2, #8]
 8002b2c:	4b2f      	ldr	r3, [pc, #188]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b2e:	68db      	ldr	r3, [r3, #12]
 8002b30:	61bb      	str	r3, [r7, #24]
 8002b32:	693b      	ldr	r3, [r7, #16]
 8002b34:	43db      	mvns	r3, r3
 8002b36:	69ba      	ldr	r2, [r7, #24]
 8002b38:	4013      	ands	r3, r2
 8002b3a:	61bb      	str	r3, [r7, #24]
 8002b3c:	683b      	ldr	r3, [r7, #0]
 8002b3e:	685b      	ldr	r3, [r3, #4]
 8002b40:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	d003      	beq.n	8002b50 <HAL_GPIO_Init+0x288>
 8002b48:	69ba      	ldr	r2, [r7, #24]
 8002b4a:	693b      	ldr	r3, [r7, #16]
 8002b4c:	4313      	orrs	r3, r2
 8002b4e:	61bb      	str	r3, [r7, #24]
 8002b50:	4a26      	ldr	r2, [pc, #152]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b52:	69bb      	ldr	r3, [r7, #24]
 8002b54:	60d3      	str	r3, [r2, #12]
 8002b56:	4b25      	ldr	r3, [pc, #148]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b58:	685b      	ldr	r3, [r3, #4]
 8002b5a:	61bb      	str	r3, [r7, #24]
 8002b5c:	693b      	ldr	r3, [r7, #16]
 8002b5e:	43db      	mvns	r3, r3
 8002b60:	69ba      	ldr	r2, [r7, #24]
 8002b62:	4013      	ands	r3, r2
 8002b64:	61bb      	str	r3, [r7, #24]
 8002b66:	683b      	ldr	r3, [r7, #0]
 8002b68:	685b      	ldr	r3, [r3, #4]
 8002b6a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d003      	beq.n	8002b7a <HAL_GPIO_Init+0x2b2>
 8002b72:	69ba      	ldr	r2, [r7, #24]
 8002b74:	693b      	ldr	r3, [r7, #16]
 8002b76:	4313      	orrs	r3, r2
 8002b78:	61bb      	str	r3, [r7, #24]
 8002b7a:	4a1c      	ldr	r2, [pc, #112]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b7c:	69bb      	ldr	r3, [r7, #24]
 8002b7e:	6053      	str	r3, [r2, #4]
 8002b80:	4b1a      	ldr	r3, [pc, #104]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	61bb      	str	r3, [r7, #24]
 8002b86:	693b      	ldr	r3, [r7, #16]
 8002b88:	43db      	mvns	r3, r3
 8002b8a:	69ba      	ldr	r2, [r7, #24]
 8002b8c:	4013      	ands	r3, r2
 8002b8e:	61bb      	str	r3, [r7, #24]
 8002b90:	683b      	ldr	r3, [r7, #0]
 8002b92:	685b      	ldr	r3, [r3, #4]
 8002b94:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	d003      	beq.n	8002ba4 <HAL_GPIO_Init+0x2dc>
 8002b9c:	69ba      	ldr	r2, [r7, #24]
 8002b9e:	693b      	ldr	r3, [r7, #16]
 8002ba0:	4313      	orrs	r3, r2
 8002ba2:	61bb      	str	r3, [r7, #24]
 8002ba4:	4a11      	ldr	r2, [pc, #68]	@ (8002bec <HAL_GPIO_Init+0x324>)
 8002ba6:	69bb      	ldr	r3, [r7, #24]
 8002ba8:	6013      	str	r3, [r2, #0]
 8002baa:	69fb      	ldr	r3, [r7, #28]
 8002bac:	3301      	adds	r3, #1
 8002bae:	61fb      	str	r3, [r7, #28]
 8002bb0:	69fb      	ldr	r3, [r7, #28]
 8002bb2:	2b0f      	cmp	r3, #15
 8002bb4:	f67f ae96 	bls.w	80028e4 <HAL_GPIO_Init+0x1c>
 8002bb8:	bf00      	nop
 8002bba:	bf00      	nop
 8002bbc:	3724      	adds	r7, #36	@ 0x24
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bc4:	4770      	bx	lr
 8002bc6:	bf00      	nop
 8002bc8:	40023800 	.word	0x40023800
 8002bcc:	40013800 	.word	0x40013800
 8002bd0:	40020000 	.word	0x40020000
 8002bd4:	40020400 	.word	0x40020400
 8002bd8:	40020800 	.word	0x40020800
 8002bdc:	40020c00 	.word	0x40020c00
 8002be0:	40021000 	.word	0x40021000
 8002be4:	40021400 	.word	0x40021400
 8002be8:	40021800 	.word	0x40021800
 8002bec:	40013c00 	.word	0x40013c00

08002bf0 <HAL_GPIO_WritePin>:
 8002bf0:	b480      	push	{r7}
 8002bf2:	b083      	sub	sp, #12
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	460b      	mov	r3, r1
 8002bfa:	807b      	strh	r3, [r7, #2]
 8002bfc:	4613      	mov	r3, r2
 8002bfe:	707b      	strb	r3, [r7, #1]
 8002c00:	787b      	ldrb	r3, [r7, #1]
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d003      	beq.n	8002c0e <HAL_GPIO_WritePin+0x1e>
 8002c06:	887a      	ldrh	r2, [r7, #2]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	619a      	str	r2, [r3, #24]
 8002c0c:	e003      	b.n	8002c16 <HAL_GPIO_WritePin+0x26>
 8002c0e:	887b      	ldrh	r3, [r7, #2]
 8002c10:	041a      	lsls	r2, r3, #16
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	619a      	str	r2, [r3, #24]
 8002c16:	bf00      	nop
 8002c18:	370c      	adds	r7, #12
 8002c1a:	46bd      	mov	sp, r7
 8002c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c20:	4770      	bx	lr
	...

08002c24 <HAL_PWREx_EnableOverDrive>:
 8002c24:	b580      	push	{r7, lr}
 8002c26:	b082      	sub	sp, #8
 8002c28:	af00      	add	r7, sp, #0
 8002c2a:	2300      	movs	r3, #0
 8002c2c:	607b      	str	r3, [r7, #4]
 8002c2e:	2300      	movs	r3, #0
 8002c30:	603b      	str	r3, [r7, #0]
 8002c32:	4b20      	ldr	r3, [pc, #128]	@ (8002cb4 <HAL_PWREx_EnableOverDrive+0x90>)
 8002c34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c36:	4a1f      	ldr	r2, [pc, #124]	@ (8002cb4 <HAL_PWREx_EnableOverDrive+0x90>)
 8002c38:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002c3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002c3e:	4b1d      	ldr	r3, [pc, #116]	@ (8002cb4 <HAL_PWREx_EnableOverDrive+0x90>)
 8002c40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c42:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002c46:	603b      	str	r3, [r7, #0]
 8002c48:	683b      	ldr	r3, [r7, #0]
 8002c4a:	4b1b      	ldr	r3, [pc, #108]	@ (8002cb8 <HAL_PWREx_EnableOverDrive+0x94>)
 8002c4c:	2201      	movs	r2, #1
 8002c4e:	601a      	str	r2, [r3, #0]
 8002c50:	f7fe fca6 	bl	80015a0 <HAL_GetTick>
 8002c54:	6078      	str	r0, [r7, #4]
 8002c56:	e009      	b.n	8002c6c <HAL_PWREx_EnableOverDrive+0x48>
 8002c58:	f7fe fca2 	bl	80015a0 <HAL_GetTick>
 8002c5c:	4602      	mov	r2, r0
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	1ad3      	subs	r3, r2, r3
 8002c62:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002c66:	d901      	bls.n	8002c6c <HAL_PWREx_EnableOverDrive+0x48>
 8002c68:	2303      	movs	r3, #3
 8002c6a:	e01f      	b.n	8002cac <HAL_PWREx_EnableOverDrive+0x88>
 8002c6c:	4b13      	ldr	r3, [pc, #76]	@ (8002cbc <HAL_PWREx_EnableOverDrive+0x98>)
 8002c6e:	685b      	ldr	r3, [r3, #4]
 8002c70:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002c74:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002c78:	d1ee      	bne.n	8002c58 <HAL_PWREx_EnableOverDrive+0x34>
 8002c7a:	4b11      	ldr	r3, [pc, #68]	@ (8002cc0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8002c7c:	2201      	movs	r2, #1
 8002c7e:	601a      	str	r2, [r3, #0]
 8002c80:	f7fe fc8e 	bl	80015a0 <HAL_GetTick>
 8002c84:	6078      	str	r0, [r7, #4]
 8002c86:	e009      	b.n	8002c9c <HAL_PWREx_EnableOverDrive+0x78>
 8002c88:	f7fe fc8a 	bl	80015a0 <HAL_GetTick>
 8002c8c:	4602      	mov	r2, r0
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	1ad3      	subs	r3, r2, r3
 8002c92:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002c96:	d901      	bls.n	8002c9c <HAL_PWREx_EnableOverDrive+0x78>
 8002c98:	2303      	movs	r3, #3
 8002c9a:	e007      	b.n	8002cac <HAL_PWREx_EnableOverDrive+0x88>
 8002c9c:	4b07      	ldr	r3, [pc, #28]	@ (8002cbc <HAL_PWREx_EnableOverDrive+0x98>)
 8002c9e:	685b      	ldr	r3, [r3, #4]
 8002ca0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ca4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8002ca8:	d1ee      	bne.n	8002c88 <HAL_PWREx_EnableOverDrive+0x64>
 8002caa:	2300      	movs	r3, #0
 8002cac:	4618      	mov	r0, r3
 8002cae:	3708      	adds	r7, #8
 8002cb0:	46bd      	mov	sp, r7
 8002cb2:	bd80      	pop	{r7, pc}
 8002cb4:	40023800 	.word	0x40023800
 8002cb8:	420e0040 	.word	0x420e0040
 8002cbc:	40007000 	.word	0x40007000
 8002cc0:	420e0044 	.word	0x420e0044

08002cc4 <HAL_RCC_ClockConfig>:
 8002cc4:	b580      	push	{r7, lr}
 8002cc6:	b084      	sub	sp, #16
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	6078      	str	r0, [r7, #4]
 8002ccc:	6039      	str	r1, [r7, #0]
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d101      	bne.n	8002cd8 <HAL_RCC_ClockConfig+0x14>
 8002cd4:	2301      	movs	r3, #1
 8002cd6:	e0cc      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002cd8:	4b68      	ldr	r3, [pc, #416]	@ (8002e7c <HAL_RCC_ClockConfig+0x1b8>)
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	f003 030f 	and.w	r3, r3, #15
 8002ce0:	683a      	ldr	r2, [r7, #0]
 8002ce2:	429a      	cmp	r2, r3
 8002ce4:	d90c      	bls.n	8002d00 <HAL_RCC_ClockConfig+0x3c>
 8002ce6:	4b65      	ldr	r3, [pc, #404]	@ (8002e7c <HAL_RCC_ClockConfig+0x1b8>)
 8002ce8:	683a      	ldr	r2, [r7, #0]
 8002cea:	b2d2      	uxtb	r2, r2
 8002cec:	701a      	strb	r2, [r3, #0]
 8002cee:	4b63      	ldr	r3, [pc, #396]	@ (8002e7c <HAL_RCC_ClockConfig+0x1b8>)
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	f003 030f 	and.w	r3, r3, #15
 8002cf6:	683a      	ldr	r2, [r7, #0]
 8002cf8:	429a      	cmp	r2, r3
 8002cfa:	d001      	beq.n	8002d00 <HAL_RCC_ClockConfig+0x3c>
 8002cfc:	2301      	movs	r3, #1
 8002cfe:	e0b8      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	f003 0302 	and.w	r3, r3, #2
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d020      	beq.n	8002d4e <HAL_RCC_ClockConfig+0x8a>
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	f003 0304 	and.w	r3, r3, #4
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d005      	beq.n	8002d24 <HAL_RCC_ClockConfig+0x60>
 8002d18:	4b59      	ldr	r3, [pc, #356]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d1a:	689b      	ldr	r3, [r3, #8]
 8002d1c:	4a58      	ldr	r2, [pc, #352]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d1e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002d22:	6093      	str	r3, [r2, #8]
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	f003 0308 	and.w	r3, r3, #8
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	d005      	beq.n	8002d3c <HAL_RCC_ClockConfig+0x78>
 8002d30:	4b53      	ldr	r3, [pc, #332]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d32:	689b      	ldr	r3, [r3, #8]
 8002d34:	4a52      	ldr	r2, [pc, #328]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d36:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002d3a:	6093      	str	r3, [r2, #8]
 8002d3c:	4b50      	ldr	r3, [pc, #320]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d3e:	689b      	ldr	r3, [r3, #8]
 8002d40:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	689b      	ldr	r3, [r3, #8]
 8002d48:	494d      	ldr	r1, [pc, #308]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d4a:	4313      	orrs	r3, r2
 8002d4c:	608b      	str	r3, [r1, #8]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	f003 0301 	and.w	r3, r3, #1
 8002d56:	2b00      	cmp	r3, #0
 8002d58:	d044      	beq.n	8002de4 <HAL_RCC_ClockConfig+0x120>
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	685b      	ldr	r3, [r3, #4]
 8002d5e:	2b01      	cmp	r3, #1
 8002d60:	d107      	bne.n	8002d72 <HAL_RCC_ClockConfig+0xae>
 8002d62:	4b47      	ldr	r3, [pc, #284]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d119      	bne.n	8002da2 <HAL_RCC_ClockConfig+0xde>
 8002d6e:	2301      	movs	r3, #1
 8002d70:	e07f      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	685b      	ldr	r3, [r3, #4]
 8002d76:	2b02      	cmp	r3, #2
 8002d78:	d003      	beq.n	8002d82 <HAL_RCC_ClockConfig+0xbe>
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	685b      	ldr	r3, [r3, #4]
 8002d7e:	2b03      	cmp	r3, #3
 8002d80:	d107      	bne.n	8002d92 <HAL_RCC_ClockConfig+0xce>
 8002d82:	4b3f      	ldr	r3, [pc, #252]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d109      	bne.n	8002da2 <HAL_RCC_ClockConfig+0xde>
 8002d8e:	2301      	movs	r3, #1
 8002d90:	e06f      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002d92:	4b3b      	ldr	r3, [pc, #236]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f003 0302 	and.w	r3, r3, #2
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	d101      	bne.n	8002da2 <HAL_RCC_ClockConfig+0xde>
 8002d9e:	2301      	movs	r3, #1
 8002da0:	e067      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002da2:	4b37      	ldr	r3, [pc, #220]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002da4:	689b      	ldr	r3, [r3, #8]
 8002da6:	f023 0203 	bic.w	r2, r3, #3
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	685b      	ldr	r3, [r3, #4]
 8002dae:	4934      	ldr	r1, [pc, #208]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002db0:	4313      	orrs	r3, r2
 8002db2:	608b      	str	r3, [r1, #8]
 8002db4:	f7fe fbf4 	bl	80015a0 <HAL_GetTick>
 8002db8:	60f8      	str	r0, [r7, #12]
 8002dba:	e00a      	b.n	8002dd2 <HAL_RCC_ClockConfig+0x10e>
 8002dbc:	f7fe fbf0 	bl	80015a0 <HAL_GetTick>
 8002dc0:	4602      	mov	r2, r0
 8002dc2:	68fb      	ldr	r3, [r7, #12]
 8002dc4:	1ad3      	subs	r3, r2, r3
 8002dc6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002dca:	4293      	cmp	r3, r2
 8002dcc:	d901      	bls.n	8002dd2 <HAL_RCC_ClockConfig+0x10e>
 8002dce:	2303      	movs	r3, #3
 8002dd0:	e04f      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002dd2:	4b2b      	ldr	r3, [pc, #172]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002dd4:	689b      	ldr	r3, [r3, #8]
 8002dd6:	f003 020c 	and.w	r2, r3, #12
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	685b      	ldr	r3, [r3, #4]
 8002dde:	009b      	lsls	r3, r3, #2
 8002de0:	429a      	cmp	r2, r3
 8002de2:	d1eb      	bne.n	8002dbc <HAL_RCC_ClockConfig+0xf8>
 8002de4:	4b25      	ldr	r3, [pc, #148]	@ (8002e7c <HAL_RCC_ClockConfig+0x1b8>)
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	f003 030f 	and.w	r3, r3, #15
 8002dec:	683a      	ldr	r2, [r7, #0]
 8002dee:	429a      	cmp	r2, r3
 8002df0:	d20c      	bcs.n	8002e0c <HAL_RCC_ClockConfig+0x148>
 8002df2:	4b22      	ldr	r3, [pc, #136]	@ (8002e7c <HAL_RCC_ClockConfig+0x1b8>)
 8002df4:	683a      	ldr	r2, [r7, #0]
 8002df6:	b2d2      	uxtb	r2, r2
 8002df8:	701a      	strb	r2, [r3, #0]
 8002dfa:	4b20      	ldr	r3, [pc, #128]	@ (8002e7c <HAL_RCC_ClockConfig+0x1b8>)
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	f003 030f 	and.w	r3, r3, #15
 8002e02:	683a      	ldr	r2, [r7, #0]
 8002e04:	429a      	cmp	r2, r3
 8002e06:	d001      	beq.n	8002e0c <HAL_RCC_ClockConfig+0x148>
 8002e08:	2301      	movs	r3, #1
 8002e0a:	e032      	b.n	8002e72 <HAL_RCC_ClockConfig+0x1ae>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	f003 0304 	and.w	r3, r3, #4
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d008      	beq.n	8002e2a <HAL_RCC_ClockConfig+0x166>
 8002e18:	4b19      	ldr	r3, [pc, #100]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002e1a:	689b      	ldr	r3, [r3, #8]
 8002e1c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	68db      	ldr	r3, [r3, #12]
 8002e24:	4916      	ldr	r1, [pc, #88]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002e26:	4313      	orrs	r3, r2
 8002e28:	608b      	str	r3, [r1, #8]
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	f003 0308 	and.w	r3, r3, #8
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d009      	beq.n	8002e4a <HAL_RCC_ClockConfig+0x186>
 8002e36:	4b12      	ldr	r3, [pc, #72]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002e38:	689b      	ldr	r3, [r3, #8]
 8002e3a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	691b      	ldr	r3, [r3, #16]
 8002e42:	00db      	lsls	r3, r3, #3
 8002e44:	490e      	ldr	r1, [pc, #56]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002e46:	4313      	orrs	r3, r2
 8002e48:	608b      	str	r3, [r1, #8]
 8002e4a:	f000 f855 	bl	8002ef8 <HAL_RCC_GetSysClockFreq>
 8002e4e:	4602      	mov	r2, r0
 8002e50:	4b0b      	ldr	r3, [pc, #44]	@ (8002e80 <HAL_RCC_ClockConfig+0x1bc>)
 8002e52:	689b      	ldr	r3, [r3, #8]
 8002e54:	091b      	lsrs	r3, r3, #4
 8002e56:	f003 030f 	and.w	r3, r3, #15
 8002e5a:	490a      	ldr	r1, [pc, #40]	@ (8002e84 <HAL_RCC_ClockConfig+0x1c0>)
 8002e5c:	5ccb      	ldrb	r3, [r1, r3]
 8002e5e:	fa22 f303 	lsr.w	r3, r2, r3
 8002e62:	4a09      	ldr	r2, [pc, #36]	@ (8002e88 <HAL_RCC_ClockConfig+0x1c4>)
 8002e64:	6013      	str	r3, [r2, #0]
 8002e66:	4b09      	ldr	r3, [pc, #36]	@ (8002e8c <HAL_RCC_ClockConfig+0x1c8>)
 8002e68:	681b      	ldr	r3, [r3, #0]
 8002e6a:	4618      	mov	r0, r3
 8002e6c:	f7fe fb54 	bl	8001518 <HAL_InitTick>
 8002e70:	2300      	movs	r3, #0
 8002e72:	4618      	mov	r0, r3
 8002e74:	3710      	adds	r7, #16
 8002e76:	46bd      	mov	sp, r7
 8002e78:	bd80      	pop	{r7, pc}
 8002e7a:	bf00      	nop
 8002e7c:	40023c00 	.word	0x40023c00
 8002e80:	40023800 	.word	0x40023800
 8002e84:	080058bc 	.word	0x080058bc
 8002e88:	20000064 	.word	0x20000064
 8002e8c:	20000068 	.word	0x20000068

08002e90 <HAL_RCC_GetHCLKFreq>:
 8002e90:	b480      	push	{r7}
 8002e92:	af00      	add	r7, sp, #0
 8002e94:	4b03      	ldr	r3, [pc, #12]	@ (8002ea4 <HAL_RCC_GetHCLKFreq+0x14>)
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	4618      	mov	r0, r3
 8002e9a:	46bd      	mov	sp, r7
 8002e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ea0:	4770      	bx	lr
 8002ea2:	bf00      	nop
 8002ea4:	20000064 	.word	0x20000064

08002ea8 <HAL_RCC_GetPCLK1Freq>:
 8002ea8:	b580      	push	{r7, lr}
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	f7ff fff0 	bl	8002e90 <HAL_RCC_GetHCLKFreq>
 8002eb0:	4602      	mov	r2, r0
 8002eb2:	4b05      	ldr	r3, [pc, #20]	@ (8002ec8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002eb4:	689b      	ldr	r3, [r3, #8]
 8002eb6:	0a9b      	lsrs	r3, r3, #10
 8002eb8:	f003 0307 	and.w	r3, r3, #7
 8002ebc:	4903      	ldr	r1, [pc, #12]	@ (8002ecc <HAL_RCC_GetPCLK1Freq+0x24>)
 8002ebe:	5ccb      	ldrb	r3, [r1, r3]
 8002ec0:	fa22 f303 	lsr.w	r3, r2, r3
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	bd80      	pop	{r7, pc}
 8002ec8:	40023800 	.word	0x40023800
 8002ecc:	080058cc 	.word	0x080058cc

08002ed0 <HAL_RCC_GetPCLK2Freq>:
 8002ed0:	b580      	push	{r7, lr}
 8002ed2:	af00      	add	r7, sp, #0
 8002ed4:	f7ff ffdc 	bl	8002e90 <HAL_RCC_GetHCLKFreq>
 8002ed8:	4602      	mov	r2, r0
 8002eda:	4b05      	ldr	r3, [pc, #20]	@ (8002ef0 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002edc:	689b      	ldr	r3, [r3, #8]
 8002ede:	0b5b      	lsrs	r3, r3, #13
 8002ee0:	f003 0307 	and.w	r3, r3, #7
 8002ee4:	4903      	ldr	r1, [pc, #12]	@ (8002ef4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002ee6:	5ccb      	ldrb	r3, [r1, r3]
 8002ee8:	fa22 f303 	lsr.w	r3, r2, r3
 8002eec:	4618      	mov	r0, r3
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	40023800 	.word	0x40023800
 8002ef4:	080058cc 	.word	0x080058cc

08002ef8 <HAL_RCC_GetSysClockFreq>:
 8002ef8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002efc:	b0ae      	sub	sp, #184	@ 0xb8
 8002efe:	af00      	add	r7, sp, #0
 8002f00:	2300      	movs	r3, #0
 8002f02:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002f06:	2300      	movs	r3, #0
 8002f08:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002f0c:	2300      	movs	r3, #0
 8002f0e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002f12:	2300      	movs	r3, #0
 8002f14:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002f18:	2300      	movs	r3, #0
 8002f1a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002f1e:	4bcb      	ldr	r3, [pc, #812]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8002f20:	689b      	ldr	r3, [r3, #8]
 8002f22:	f003 030c 	and.w	r3, r3, #12
 8002f26:	2b0c      	cmp	r3, #12
 8002f28:	f200 8206 	bhi.w	8003338 <HAL_RCC_GetSysClockFreq+0x440>
 8002f2c:	a201      	add	r2, pc, #4	@ (adr r2, 8002f34 <HAL_RCC_GetSysClockFreq+0x3c>)
 8002f2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f32:	bf00      	nop
 8002f34:	08002f69 	.word	0x08002f69
 8002f38:	08003339 	.word	0x08003339
 8002f3c:	08003339 	.word	0x08003339
 8002f40:	08003339 	.word	0x08003339
 8002f44:	08002f71 	.word	0x08002f71
 8002f48:	08003339 	.word	0x08003339
 8002f4c:	08003339 	.word	0x08003339
 8002f50:	08003339 	.word	0x08003339
 8002f54:	08002f79 	.word	0x08002f79
 8002f58:	08003339 	.word	0x08003339
 8002f5c:	08003339 	.word	0x08003339
 8002f60:	08003339 	.word	0x08003339
 8002f64:	08003169 	.word	0x08003169
 8002f68:	4bb9      	ldr	r3, [pc, #740]	@ (8003250 <HAL_RCC_GetSysClockFreq+0x358>)
 8002f6a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002f6e:	e1e7      	b.n	8003340 <HAL_RCC_GetSysClockFreq+0x448>
 8002f70:	4bb8      	ldr	r3, [pc, #736]	@ (8003254 <HAL_RCC_GetSysClockFreq+0x35c>)
 8002f72:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002f76:	e1e3      	b.n	8003340 <HAL_RCC_GetSysClockFreq+0x448>
 8002f78:	4bb4      	ldr	r3, [pc, #720]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8002f7a:	685b      	ldr	r3, [r3, #4]
 8002f7c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002f80:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002f84:	4bb1      	ldr	r3, [pc, #708]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8002f86:	685b      	ldr	r3, [r3, #4]
 8002f88:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002f8c:	2b00      	cmp	r3, #0
 8002f8e:	d071      	beq.n	8003074 <HAL_RCC_GetSysClockFreq+0x17c>
 8002f90:	4bae      	ldr	r3, [pc, #696]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8002f92:	685b      	ldr	r3, [r3, #4]
 8002f94:	099b      	lsrs	r3, r3, #6
 8002f96:	2200      	movs	r2, #0
 8002f98:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8002f9c:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8002fa0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002fa4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002fa8:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002fac:	2300      	movs	r3, #0
 8002fae:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002fb2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8002fb6:	4622      	mov	r2, r4
 8002fb8:	462b      	mov	r3, r5
 8002fba:	f04f 0000 	mov.w	r0, #0
 8002fbe:	f04f 0100 	mov.w	r1, #0
 8002fc2:	0159      	lsls	r1, r3, #5
 8002fc4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002fc8:	0150      	lsls	r0, r2, #5
 8002fca:	4602      	mov	r2, r0
 8002fcc:	460b      	mov	r3, r1
 8002fce:	4621      	mov	r1, r4
 8002fd0:	1a51      	subs	r1, r2, r1
 8002fd2:	6439      	str	r1, [r7, #64]	@ 0x40
 8002fd4:	4629      	mov	r1, r5
 8002fd6:	eb63 0301 	sbc.w	r3, r3, r1
 8002fda:	647b      	str	r3, [r7, #68]	@ 0x44
 8002fdc:	f04f 0200 	mov.w	r2, #0
 8002fe0:	f04f 0300 	mov.w	r3, #0
 8002fe4:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8002fe8:	4649      	mov	r1, r9
 8002fea:	018b      	lsls	r3, r1, #6
 8002fec:	4641      	mov	r1, r8
 8002fee:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002ff2:	4641      	mov	r1, r8
 8002ff4:	018a      	lsls	r2, r1, #6
 8002ff6:	4641      	mov	r1, r8
 8002ff8:	1a51      	subs	r1, r2, r1
 8002ffa:	63b9      	str	r1, [r7, #56]	@ 0x38
 8002ffc:	4649      	mov	r1, r9
 8002ffe:	eb63 0301 	sbc.w	r3, r3, r1
 8003002:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003004:	f04f 0200 	mov.w	r2, #0
 8003008:	f04f 0300 	mov.w	r3, #0
 800300c:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8003010:	4649      	mov	r1, r9
 8003012:	00cb      	lsls	r3, r1, #3
 8003014:	4641      	mov	r1, r8
 8003016:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800301a:	4641      	mov	r1, r8
 800301c:	00ca      	lsls	r2, r1, #3
 800301e:	4610      	mov	r0, r2
 8003020:	4619      	mov	r1, r3
 8003022:	4603      	mov	r3, r0
 8003024:	4622      	mov	r2, r4
 8003026:	189b      	adds	r3, r3, r2
 8003028:	633b      	str	r3, [r7, #48]	@ 0x30
 800302a:	462b      	mov	r3, r5
 800302c:	460a      	mov	r2, r1
 800302e:	eb42 0303 	adc.w	r3, r2, r3
 8003032:	637b      	str	r3, [r7, #52]	@ 0x34
 8003034:	f04f 0200 	mov.w	r2, #0
 8003038:	f04f 0300 	mov.w	r3, #0
 800303c:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8003040:	4629      	mov	r1, r5
 8003042:	024b      	lsls	r3, r1, #9
 8003044:	4621      	mov	r1, r4
 8003046:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800304a:	4621      	mov	r1, r4
 800304c:	024a      	lsls	r2, r1, #9
 800304e:	4610      	mov	r0, r2
 8003050:	4619      	mov	r1, r3
 8003052:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003056:	2200      	movs	r2, #0
 8003058:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800305c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003060:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8003064:	f7fd f924 	bl	80002b0 <__aeabi_uldivmod>
 8003068:	4602      	mov	r2, r0
 800306a:	460b      	mov	r3, r1
 800306c:	4613      	mov	r3, r2
 800306e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003072:	e067      	b.n	8003144 <HAL_RCC_GetSysClockFreq+0x24c>
 8003074:	4b75      	ldr	r3, [pc, #468]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8003076:	685b      	ldr	r3, [r3, #4]
 8003078:	099b      	lsrs	r3, r3, #6
 800307a:	2200      	movs	r2, #0
 800307c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003080:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8003084:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003088:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800308c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800308e:	2300      	movs	r3, #0
 8003090:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003092:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 8003096:	4622      	mov	r2, r4
 8003098:	462b      	mov	r3, r5
 800309a:	f04f 0000 	mov.w	r0, #0
 800309e:	f04f 0100 	mov.w	r1, #0
 80030a2:	0159      	lsls	r1, r3, #5
 80030a4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80030a8:	0150      	lsls	r0, r2, #5
 80030aa:	4602      	mov	r2, r0
 80030ac:	460b      	mov	r3, r1
 80030ae:	4621      	mov	r1, r4
 80030b0:	1a51      	subs	r1, r2, r1
 80030b2:	62b9      	str	r1, [r7, #40]	@ 0x28
 80030b4:	4629      	mov	r1, r5
 80030b6:	eb63 0301 	sbc.w	r3, r3, r1
 80030ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80030bc:	f04f 0200 	mov.w	r2, #0
 80030c0:	f04f 0300 	mov.w	r3, #0
 80030c4:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 80030c8:	4649      	mov	r1, r9
 80030ca:	018b      	lsls	r3, r1, #6
 80030cc:	4641      	mov	r1, r8
 80030ce:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80030d2:	4641      	mov	r1, r8
 80030d4:	018a      	lsls	r2, r1, #6
 80030d6:	4641      	mov	r1, r8
 80030d8:	ebb2 0a01 	subs.w	sl, r2, r1
 80030dc:	4649      	mov	r1, r9
 80030de:	eb63 0b01 	sbc.w	fp, r3, r1
 80030e2:	f04f 0200 	mov.w	r2, #0
 80030e6:	f04f 0300 	mov.w	r3, #0
 80030ea:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80030ee:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80030f2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80030f6:	4692      	mov	sl, r2
 80030f8:	469b      	mov	fp, r3
 80030fa:	4623      	mov	r3, r4
 80030fc:	eb1a 0303 	adds.w	r3, sl, r3
 8003100:	623b      	str	r3, [r7, #32]
 8003102:	462b      	mov	r3, r5
 8003104:	eb4b 0303 	adc.w	r3, fp, r3
 8003108:	627b      	str	r3, [r7, #36]	@ 0x24
 800310a:	f04f 0200 	mov.w	r2, #0
 800310e:	f04f 0300 	mov.w	r3, #0
 8003112:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8003116:	4629      	mov	r1, r5
 8003118:	028b      	lsls	r3, r1, #10
 800311a:	4621      	mov	r1, r4
 800311c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003120:	4621      	mov	r1, r4
 8003122:	028a      	lsls	r2, r1, #10
 8003124:	4610      	mov	r0, r2
 8003126:	4619      	mov	r1, r3
 8003128:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800312c:	2200      	movs	r2, #0
 800312e:	673b      	str	r3, [r7, #112]	@ 0x70
 8003130:	677a      	str	r2, [r7, #116]	@ 0x74
 8003132:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8003136:	f7fd f8bb 	bl	80002b0 <__aeabi_uldivmod>
 800313a:	4602      	mov	r2, r0
 800313c:	460b      	mov	r3, r1
 800313e:	4613      	mov	r3, r2
 8003140:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003144:	4b41      	ldr	r3, [pc, #260]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8003146:	685b      	ldr	r3, [r3, #4]
 8003148:	0c1b      	lsrs	r3, r3, #16
 800314a:	f003 0303 	and.w	r3, r3, #3
 800314e:	3301      	adds	r3, #1
 8003150:	005b      	lsls	r3, r3, #1
 8003152:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003156:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800315a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800315e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003162:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003166:	e0eb      	b.n	8003340 <HAL_RCC_GetSysClockFreq+0x448>
 8003168:	4b38      	ldr	r3, [pc, #224]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 800316a:	685b      	ldr	r3, [r3, #4]
 800316c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003170:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003174:	4b35      	ldr	r3, [pc, #212]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8003176:	685b      	ldr	r3, [r3, #4]
 8003178:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800317c:	2b00      	cmp	r3, #0
 800317e:	d06b      	beq.n	8003258 <HAL_RCC_GetSysClockFreq+0x360>
 8003180:	4b32      	ldr	r3, [pc, #200]	@ (800324c <HAL_RCC_GetSysClockFreq+0x354>)
 8003182:	685b      	ldr	r3, [r3, #4]
 8003184:	099b      	lsrs	r3, r3, #6
 8003186:	2200      	movs	r2, #0
 8003188:	66bb      	str	r3, [r7, #104]	@ 0x68
 800318a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800318c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800318e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003192:	663b      	str	r3, [r7, #96]	@ 0x60
 8003194:	2300      	movs	r3, #0
 8003196:	667b      	str	r3, [r7, #100]	@ 0x64
 8003198:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 800319c:	4622      	mov	r2, r4
 800319e:	462b      	mov	r3, r5
 80031a0:	f04f 0000 	mov.w	r0, #0
 80031a4:	f04f 0100 	mov.w	r1, #0
 80031a8:	0159      	lsls	r1, r3, #5
 80031aa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80031ae:	0150      	lsls	r0, r2, #5
 80031b0:	4602      	mov	r2, r0
 80031b2:	460b      	mov	r3, r1
 80031b4:	4621      	mov	r1, r4
 80031b6:	1a51      	subs	r1, r2, r1
 80031b8:	61b9      	str	r1, [r7, #24]
 80031ba:	4629      	mov	r1, r5
 80031bc:	eb63 0301 	sbc.w	r3, r3, r1
 80031c0:	61fb      	str	r3, [r7, #28]
 80031c2:	f04f 0200 	mov.w	r2, #0
 80031c6:	f04f 0300 	mov.w	r3, #0
 80031ca:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 80031ce:	4659      	mov	r1, fp
 80031d0:	018b      	lsls	r3, r1, #6
 80031d2:	4651      	mov	r1, sl
 80031d4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80031d8:	4651      	mov	r1, sl
 80031da:	018a      	lsls	r2, r1, #6
 80031dc:	4651      	mov	r1, sl
 80031de:	ebb2 0801 	subs.w	r8, r2, r1
 80031e2:	4659      	mov	r1, fp
 80031e4:	eb63 0901 	sbc.w	r9, r3, r1
 80031e8:	f04f 0200 	mov.w	r2, #0
 80031ec:	f04f 0300 	mov.w	r3, #0
 80031f0:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80031f4:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80031f8:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80031fc:	4690      	mov	r8, r2
 80031fe:	4699      	mov	r9, r3
 8003200:	4623      	mov	r3, r4
 8003202:	eb18 0303 	adds.w	r3, r8, r3
 8003206:	613b      	str	r3, [r7, #16]
 8003208:	462b      	mov	r3, r5
 800320a:	eb49 0303 	adc.w	r3, r9, r3
 800320e:	617b      	str	r3, [r7, #20]
 8003210:	f04f 0200 	mov.w	r2, #0
 8003214:	f04f 0300 	mov.w	r3, #0
 8003218:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 800321c:	4629      	mov	r1, r5
 800321e:	024b      	lsls	r3, r1, #9
 8003220:	4621      	mov	r1, r4
 8003222:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003226:	4621      	mov	r1, r4
 8003228:	024a      	lsls	r2, r1, #9
 800322a:	4610      	mov	r0, r2
 800322c:	4619      	mov	r1, r3
 800322e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003232:	2200      	movs	r2, #0
 8003234:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003236:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8003238:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800323c:	f7fd f838 	bl	80002b0 <__aeabi_uldivmod>
 8003240:	4602      	mov	r2, r0
 8003242:	460b      	mov	r3, r1
 8003244:	4613      	mov	r3, r2
 8003246:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800324a:	e065      	b.n	8003318 <HAL_RCC_GetSysClockFreq+0x420>
 800324c:	40023800 	.word	0x40023800
 8003250:	00f42400 	.word	0x00f42400
 8003254:	007a1200 	.word	0x007a1200
 8003258:	4b3d      	ldr	r3, [pc, #244]	@ (8003350 <HAL_RCC_GetSysClockFreq+0x458>)
 800325a:	685b      	ldr	r3, [r3, #4]
 800325c:	099b      	lsrs	r3, r3, #6
 800325e:	2200      	movs	r2, #0
 8003260:	4618      	mov	r0, r3
 8003262:	4611      	mov	r1, r2
 8003264:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003268:	653b      	str	r3, [r7, #80]	@ 0x50
 800326a:	2300      	movs	r3, #0
 800326c:	657b      	str	r3, [r7, #84]	@ 0x54
 800326e:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8003272:	4642      	mov	r2, r8
 8003274:	464b      	mov	r3, r9
 8003276:	f04f 0000 	mov.w	r0, #0
 800327a:	f04f 0100 	mov.w	r1, #0
 800327e:	0159      	lsls	r1, r3, #5
 8003280:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003284:	0150      	lsls	r0, r2, #5
 8003286:	4602      	mov	r2, r0
 8003288:	460b      	mov	r3, r1
 800328a:	4641      	mov	r1, r8
 800328c:	1a51      	subs	r1, r2, r1
 800328e:	60b9      	str	r1, [r7, #8]
 8003290:	4649      	mov	r1, r9
 8003292:	eb63 0301 	sbc.w	r3, r3, r1
 8003296:	60fb      	str	r3, [r7, #12]
 8003298:	f04f 0200 	mov.w	r2, #0
 800329c:	f04f 0300 	mov.w	r3, #0
 80032a0:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80032a4:	4659      	mov	r1, fp
 80032a6:	018b      	lsls	r3, r1, #6
 80032a8:	4651      	mov	r1, sl
 80032aa:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80032ae:	4651      	mov	r1, sl
 80032b0:	018a      	lsls	r2, r1, #6
 80032b2:	4651      	mov	r1, sl
 80032b4:	1a54      	subs	r4, r2, r1
 80032b6:	4659      	mov	r1, fp
 80032b8:	eb63 0501 	sbc.w	r5, r3, r1
 80032bc:	f04f 0200 	mov.w	r2, #0
 80032c0:	f04f 0300 	mov.w	r3, #0
 80032c4:	00eb      	lsls	r3, r5, #3
 80032c6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80032ca:	00e2      	lsls	r2, r4, #3
 80032cc:	4614      	mov	r4, r2
 80032ce:	461d      	mov	r5, r3
 80032d0:	4643      	mov	r3, r8
 80032d2:	18e3      	adds	r3, r4, r3
 80032d4:	603b      	str	r3, [r7, #0]
 80032d6:	464b      	mov	r3, r9
 80032d8:	eb45 0303 	adc.w	r3, r5, r3
 80032dc:	607b      	str	r3, [r7, #4]
 80032de:	f04f 0200 	mov.w	r2, #0
 80032e2:	f04f 0300 	mov.w	r3, #0
 80032e6:	e9d7 4500 	ldrd	r4, r5, [r7]
 80032ea:	4629      	mov	r1, r5
 80032ec:	028b      	lsls	r3, r1, #10
 80032ee:	4621      	mov	r1, r4
 80032f0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80032f4:	4621      	mov	r1, r4
 80032f6:	028a      	lsls	r2, r1, #10
 80032f8:	4610      	mov	r0, r2
 80032fa:	4619      	mov	r1, r3
 80032fc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003300:	2200      	movs	r2, #0
 8003302:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003304:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8003306:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800330a:	f7fc ffd1 	bl	80002b0 <__aeabi_uldivmod>
 800330e:	4602      	mov	r2, r0
 8003310:	460b      	mov	r3, r1
 8003312:	4613      	mov	r3, r2
 8003314:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003318:	4b0d      	ldr	r3, [pc, #52]	@ (8003350 <HAL_RCC_GetSysClockFreq+0x458>)
 800331a:	685b      	ldr	r3, [r3, #4]
 800331c:	0f1b      	lsrs	r3, r3, #28
 800331e:	f003 0307 	and.w	r3, r3, #7
 8003322:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003326:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800332a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800332e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003332:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003336:	e003      	b.n	8003340 <HAL_RCC_GetSysClockFreq+0x448>
 8003338:	4b06      	ldr	r3, [pc, #24]	@ (8003354 <HAL_RCC_GetSysClockFreq+0x45c>)
 800333a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800333e:	bf00      	nop
 8003340:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8003344:	4618      	mov	r0, r3
 8003346:	37b8      	adds	r7, #184	@ 0xb8
 8003348:	46bd      	mov	sp, r7
 800334a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800334e:	bf00      	nop
 8003350:	40023800 	.word	0x40023800
 8003354:	00f42400 	.word	0x00f42400

08003358 <HAL_RCC_OscConfig>:
 8003358:	b580      	push	{r7, lr}
 800335a:	b086      	sub	sp, #24
 800335c:	af00      	add	r7, sp, #0
 800335e:	6078      	str	r0, [r7, #4]
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	2b00      	cmp	r3, #0
 8003364:	d101      	bne.n	800336a <HAL_RCC_OscConfig+0x12>
 8003366:	2301      	movs	r3, #1
 8003368:	e28d      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	f003 0301 	and.w	r3, r3, #1
 8003372:	2b00      	cmp	r3, #0
 8003374:	f000 8083 	beq.w	800347e <HAL_RCC_OscConfig+0x126>
 8003378:	4b94      	ldr	r3, [pc, #592]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800337a:	689b      	ldr	r3, [r3, #8]
 800337c:	f003 030c 	and.w	r3, r3, #12
 8003380:	2b04      	cmp	r3, #4
 8003382:	d019      	beq.n	80033b8 <HAL_RCC_OscConfig+0x60>
 8003384:	4b91      	ldr	r3, [pc, #580]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003386:	689b      	ldr	r3, [r3, #8]
 8003388:	f003 030c 	and.w	r3, r3, #12
 800338c:	2b08      	cmp	r3, #8
 800338e:	d106      	bne.n	800339e <HAL_RCC_OscConfig+0x46>
 8003390:	4b8e      	ldr	r3, [pc, #568]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003392:	685b      	ldr	r3, [r3, #4]
 8003394:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003398:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800339c:	d00c      	beq.n	80033b8 <HAL_RCC_OscConfig+0x60>
 800339e:	4b8b      	ldr	r3, [pc, #556]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033a0:	689b      	ldr	r3, [r3, #8]
 80033a2:	f003 030c 	and.w	r3, r3, #12
 80033a6:	2b0c      	cmp	r3, #12
 80033a8:	d112      	bne.n	80033d0 <HAL_RCC_OscConfig+0x78>
 80033aa:	4b88      	ldr	r3, [pc, #544]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033ac:	685b      	ldr	r3, [r3, #4]
 80033ae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80033b2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80033b6:	d10b      	bne.n	80033d0 <HAL_RCC_OscConfig+0x78>
 80033b8:	4b84      	ldr	r3, [pc, #528]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	d05b      	beq.n	800347c <HAL_RCC_OscConfig+0x124>
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	685b      	ldr	r3, [r3, #4]
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d157      	bne.n	800347c <HAL_RCC_OscConfig+0x124>
 80033cc:	2301      	movs	r3, #1
 80033ce:	e25a      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	685b      	ldr	r3, [r3, #4]
 80033d4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80033d8:	d106      	bne.n	80033e8 <HAL_RCC_OscConfig+0x90>
 80033da:	4b7c      	ldr	r3, [pc, #496]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	4a7b      	ldr	r2, [pc, #492]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033e0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80033e4:	6013      	str	r3, [r2, #0]
 80033e6:	e01d      	b.n	8003424 <HAL_RCC_OscConfig+0xcc>
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	685b      	ldr	r3, [r3, #4]
 80033ec:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80033f0:	d10c      	bne.n	800340c <HAL_RCC_OscConfig+0xb4>
 80033f2:	4b76      	ldr	r3, [pc, #472]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	4a75      	ldr	r2, [pc, #468]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80033f8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80033fc:	6013      	str	r3, [r2, #0]
 80033fe:	4b73      	ldr	r3, [pc, #460]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	4a72      	ldr	r2, [pc, #456]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003404:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003408:	6013      	str	r3, [r2, #0]
 800340a:	e00b      	b.n	8003424 <HAL_RCC_OscConfig+0xcc>
 800340c:	4b6f      	ldr	r3, [pc, #444]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	4a6e      	ldr	r2, [pc, #440]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003412:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003416:	6013      	str	r3, [r2, #0]
 8003418:	4b6c      	ldr	r3, [pc, #432]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	4a6b      	ldr	r2, [pc, #428]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800341e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003422:	6013      	str	r3, [r2, #0]
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	685b      	ldr	r3, [r3, #4]
 8003428:	2b00      	cmp	r3, #0
 800342a:	d013      	beq.n	8003454 <HAL_RCC_OscConfig+0xfc>
 800342c:	f7fe f8b8 	bl	80015a0 <HAL_GetTick>
 8003430:	6138      	str	r0, [r7, #16]
 8003432:	e008      	b.n	8003446 <HAL_RCC_OscConfig+0xee>
 8003434:	f7fe f8b4 	bl	80015a0 <HAL_GetTick>
 8003438:	4602      	mov	r2, r0
 800343a:	693b      	ldr	r3, [r7, #16]
 800343c:	1ad3      	subs	r3, r2, r3
 800343e:	2b64      	cmp	r3, #100	@ 0x64
 8003440:	d901      	bls.n	8003446 <HAL_RCC_OscConfig+0xee>
 8003442:	2303      	movs	r3, #3
 8003444:	e21f      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 8003446:	4b61      	ldr	r3, [pc, #388]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800344e:	2b00      	cmp	r3, #0
 8003450:	d0f0      	beq.n	8003434 <HAL_RCC_OscConfig+0xdc>
 8003452:	e014      	b.n	800347e <HAL_RCC_OscConfig+0x126>
 8003454:	f7fe f8a4 	bl	80015a0 <HAL_GetTick>
 8003458:	6138      	str	r0, [r7, #16]
 800345a:	e008      	b.n	800346e <HAL_RCC_OscConfig+0x116>
 800345c:	f7fe f8a0 	bl	80015a0 <HAL_GetTick>
 8003460:	4602      	mov	r2, r0
 8003462:	693b      	ldr	r3, [r7, #16]
 8003464:	1ad3      	subs	r3, r2, r3
 8003466:	2b64      	cmp	r3, #100	@ 0x64
 8003468:	d901      	bls.n	800346e <HAL_RCC_OscConfig+0x116>
 800346a:	2303      	movs	r3, #3
 800346c:	e20b      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 800346e:	4b57      	ldr	r3, [pc, #348]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003476:	2b00      	cmp	r3, #0
 8003478:	d1f0      	bne.n	800345c <HAL_RCC_OscConfig+0x104>
 800347a:	e000      	b.n	800347e <HAL_RCC_OscConfig+0x126>
 800347c:	bf00      	nop
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	f003 0302 	and.w	r3, r3, #2
 8003486:	2b00      	cmp	r3, #0
 8003488:	d06f      	beq.n	800356a <HAL_RCC_OscConfig+0x212>
 800348a:	4b50      	ldr	r3, [pc, #320]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800348c:	689b      	ldr	r3, [r3, #8]
 800348e:	f003 030c 	and.w	r3, r3, #12
 8003492:	2b00      	cmp	r3, #0
 8003494:	d017      	beq.n	80034c6 <HAL_RCC_OscConfig+0x16e>
 8003496:	4b4d      	ldr	r3, [pc, #308]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003498:	689b      	ldr	r3, [r3, #8]
 800349a:	f003 030c 	and.w	r3, r3, #12
 800349e:	2b08      	cmp	r3, #8
 80034a0:	d105      	bne.n	80034ae <HAL_RCC_OscConfig+0x156>
 80034a2:	4b4a      	ldr	r3, [pc, #296]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80034a4:	685b      	ldr	r3, [r3, #4]
 80034a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d00b      	beq.n	80034c6 <HAL_RCC_OscConfig+0x16e>
 80034ae:	4b47      	ldr	r3, [pc, #284]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80034b0:	689b      	ldr	r3, [r3, #8]
 80034b2:	f003 030c 	and.w	r3, r3, #12
 80034b6:	2b0c      	cmp	r3, #12
 80034b8:	d11c      	bne.n	80034f4 <HAL_RCC_OscConfig+0x19c>
 80034ba:	4b44      	ldr	r3, [pc, #272]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80034bc:	685b      	ldr	r3, [r3, #4]
 80034be:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80034c2:	2b00      	cmp	r3, #0
 80034c4:	d116      	bne.n	80034f4 <HAL_RCC_OscConfig+0x19c>
 80034c6:	4b41      	ldr	r3, [pc, #260]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	f003 0302 	and.w	r3, r3, #2
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	d005      	beq.n	80034de <HAL_RCC_OscConfig+0x186>
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	68db      	ldr	r3, [r3, #12]
 80034d6:	2b01      	cmp	r3, #1
 80034d8:	d001      	beq.n	80034de <HAL_RCC_OscConfig+0x186>
 80034da:	2301      	movs	r3, #1
 80034dc:	e1d3      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 80034de:	4b3b      	ldr	r3, [pc, #236]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	691b      	ldr	r3, [r3, #16]
 80034ea:	00db      	lsls	r3, r3, #3
 80034ec:	4937      	ldr	r1, [pc, #220]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80034ee:	4313      	orrs	r3, r2
 80034f0:	600b      	str	r3, [r1, #0]
 80034f2:	e03a      	b.n	800356a <HAL_RCC_OscConfig+0x212>
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	68db      	ldr	r3, [r3, #12]
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	d020      	beq.n	800353e <HAL_RCC_OscConfig+0x1e6>
 80034fc:	4b34      	ldr	r3, [pc, #208]	@ (80035d0 <HAL_RCC_OscConfig+0x278>)
 80034fe:	2201      	movs	r2, #1
 8003500:	601a      	str	r2, [r3, #0]
 8003502:	f7fe f84d 	bl	80015a0 <HAL_GetTick>
 8003506:	6138      	str	r0, [r7, #16]
 8003508:	e008      	b.n	800351c <HAL_RCC_OscConfig+0x1c4>
 800350a:	f7fe f849 	bl	80015a0 <HAL_GetTick>
 800350e:	4602      	mov	r2, r0
 8003510:	693b      	ldr	r3, [r7, #16]
 8003512:	1ad3      	subs	r3, r2, r3
 8003514:	2b02      	cmp	r3, #2
 8003516:	d901      	bls.n	800351c <HAL_RCC_OscConfig+0x1c4>
 8003518:	2303      	movs	r3, #3
 800351a:	e1b4      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 800351c:	4b2b      	ldr	r3, [pc, #172]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	f003 0302 	and.w	r3, r3, #2
 8003524:	2b00      	cmp	r3, #0
 8003526:	d0f0      	beq.n	800350a <HAL_RCC_OscConfig+0x1b2>
 8003528:	4b28      	ldr	r3, [pc, #160]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	691b      	ldr	r3, [r3, #16]
 8003534:	00db      	lsls	r3, r3, #3
 8003536:	4925      	ldr	r1, [pc, #148]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003538:	4313      	orrs	r3, r2
 800353a:	600b      	str	r3, [r1, #0]
 800353c:	e015      	b.n	800356a <HAL_RCC_OscConfig+0x212>
 800353e:	4b24      	ldr	r3, [pc, #144]	@ (80035d0 <HAL_RCC_OscConfig+0x278>)
 8003540:	2200      	movs	r2, #0
 8003542:	601a      	str	r2, [r3, #0]
 8003544:	f7fe f82c 	bl	80015a0 <HAL_GetTick>
 8003548:	6138      	str	r0, [r7, #16]
 800354a:	e008      	b.n	800355e <HAL_RCC_OscConfig+0x206>
 800354c:	f7fe f828 	bl	80015a0 <HAL_GetTick>
 8003550:	4602      	mov	r2, r0
 8003552:	693b      	ldr	r3, [r7, #16]
 8003554:	1ad3      	subs	r3, r2, r3
 8003556:	2b02      	cmp	r3, #2
 8003558:	d901      	bls.n	800355e <HAL_RCC_OscConfig+0x206>
 800355a:	2303      	movs	r3, #3
 800355c:	e193      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 800355e:	4b1b      	ldr	r3, [pc, #108]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	f003 0302 	and.w	r3, r3, #2
 8003566:	2b00      	cmp	r3, #0
 8003568:	d1f0      	bne.n	800354c <HAL_RCC_OscConfig+0x1f4>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	f003 0308 	and.w	r3, r3, #8
 8003572:	2b00      	cmp	r3, #0
 8003574:	d036      	beq.n	80035e4 <HAL_RCC_OscConfig+0x28c>
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	695b      	ldr	r3, [r3, #20]
 800357a:	2b00      	cmp	r3, #0
 800357c:	d016      	beq.n	80035ac <HAL_RCC_OscConfig+0x254>
 800357e:	4b15      	ldr	r3, [pc, #84]	@ (80035d4 <HAL_RCC_OscConfig+0x27c>)
 8003580:	2201      	movs	r2, #1
 8003582:	601a      	str	r2, [r3, #0]
 8003584:	f7fe f80c 	bl	80015a0 <HAL_GetTick>
 8003588:	6138      	str	r0, [r7, #16]
 800358a:	e008      	b.n	800359e <HAL_RCC_OscConfig+0x246>
 800358c:	f7fe f808 	bl	80015a0 <HAL_GetTick>
 8003590:	4602      	mov	r2, r0
 8003592:	693b      	ldr	r3, [r7, #16]
 8003594:	1ad3      	subs	r3, r2, r3
 8003596:	2b02      	cmp	r3, #2
 8003598:	d901      	bls.n	800359e <HAL_RCC_OscConfig+0x246>
 800359a:	2303      	movs	r3, #3
 800359c:	e173      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 800359e:	4b0b      	ldr	r3, [pc, #44]	@ (80035cc <HAL_RCC_OscConfig+0x274>)
 80035a0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80035a2:	f003 0302 	and.w	r3, r3, #2
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d0f0      	beq.n	800358c <HAL_RCC_OscConfig+0x234>
 80035aa:	e01b      	b.n	80035e4 <HAL_RCC_OscConfig+0x28c>
 80035ac:	4b09      	ldr	r3, [pc, #36]	@ (80035d4 <HAL_RCC_OscConfig+0x27c>)
 80035ae:	2200      	movs	r2, #0
 80035b0:	601a      	str	r2, [r3, #0]
 80035b2:	f7fd fff5 	bl	80015a0 <HAL_GetTick>
 80035b6:	6138      	str	r0, [r7, #16]
 80035b8:	e00e      	b.n	80035d8 <HAL_RCC_OscConfig+0x280>
 80035ba:	f7fd fff1 	bl	80015a0 <HAL_GetTick>
 80035be:	4602      	mov	r2, r0
 80035c0:	693b      	ldr	r3, [r7, #16]
 80035c2:	1ad3      	subs	r3, r2, r3
 80035c4:	2b02      	cmp	r3, #2
 80035c6:	d907      	bls.n	80035d8 <HAL_RCC_OscConfig+0x280>
 80035c8:	2303      	movs	r3, #3
 80035ca:	e15c      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 80035cc:	40023800 	.word	0x40023800
 80035d0:	42470000 	.word	0x42470000
 80035d4:	42470e80 	.word	0x42470e80
 80035d8:	4b8a      	ldr	r3, [pc, #552]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80035da:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80035dc:	f003 0302 	and.w	r3, r3, #2
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d1ea      	bne.n	80035ba <HAL_RCC_OscConfig+0x262>
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f003 0304 	and.w	r3, r3, #4
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	f000 8097 	beq.w	8003720 <HAL_RCC_OscConfig+0x3c8>
 80035f2:	2300      	movs	r3, #0
 80035f4:	75fb      	strb	r3, [r7, #23]
 80035f6:	4b83      	ldr	r3, [pc, #524]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80035f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035fa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80035fe:	2b00      	cmp	r3, #0
 8003600:	d10f      	bne.n	8003622 <HAL_RCC_OscConfig+0x2ca>
 8003602:	2300      	movs	r3, #0
 8003604:	60bb      	str	r3, [r7, #8]
 8003606:	4b7f      	ldr	r3, [pc, #508]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003608:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800360a:	4a7e      	ldr	r2, [pc, #504]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800360c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003610:	6413      	str	r3, [r2, #64]	@ 0x40
 8003612:	4b7c      	ldr	r3, [pc, #496]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003614:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003616:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800361a:	60bb      	str	r3, [r7, #8]
 800361c:	68bb      	ldr	r3, [r7, #8]
 800361e:	2301      	movs	r3, #1
 8003620:	75fb      	strb	r3, [r7, #23]
 8003622:	4b79      	ldr	r3, [pc, #484]	@ (8003808 <HAL_RCC_OscConfig+0x4b0>)
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800362a:	2b00      	cmp	r3, #0
 800362c:	d118      	bne.n	8003660 <HAL_RCC_OscConfig+0x308>
 800362e:	4b76      	ldr	r3, [pc, #472]	@ (8003808 <HAL_RCC_OscConfig+0x4b0>)
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	4a75      	ldr	r2, [pc, #468]	@ (8003808 <HAL_RCC_OscConfig+0x4b0>)
 8003634:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003638:	6013      	str	r3, [r2, #0]
 800363a:	f7fd ffb1 	bl	80015a0 <HAL_GetTick>
 800363e:	6138      	str	r0, [r7, #16]
 8003640:	e008      	b.n	8003654 <HAL_RCC_OscConfig+0x2fc>
 8003642:	f7fd ffad 	bl	80015a0 <HAL_GetTick>
 8003646:	4602      	mov	r2, r0
 8003648:	693b      	ldr	r3, [r7, #16]
 800364a:	1ad3      	subs	r3, r2, r3
 800364c:	2b02      	cmp	r3, #2
 800364e:	d901      	bls.n	8003654 <HAL_RCC_OscConfig+0x2fc>
 8003650:	2303      	movs	r3, #3
 8003652:	e118      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 8003654:	4b6c      	ldr	r3, [pc, #432]	@ (8003808 <HAL_RCC_OscConfig+0x4b0>)
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800365c:	2b00      	cmp	r3, #0
 800365e:	d0f0      	beq.n	8003642 <HAL_RCC_OscConfig+0x2ea>
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	689b      	ldr	r3, [r3, #8]
 8003664:	2b01      	cmp	r3, #1
 8003666:	d106      	bne.n	8003676 <HAL_RCC_OscConfig+0x31e>
 8003668:	4b66      	ldr	r3, [pc, #408]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800366a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800366c:	4a65      	ldr	r2, [pc, #404]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800366e:	f043 0301 	orr.w	r3, r3, #1
 8003672:	6713      	str	r3, [r2, #112]	@ 0x70
 8003674:	e01c      	b.n	80036b0 <HAL_RCC_OscConfig+0x358>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	689b      	ldr	r3, [r3, #8]
 800367a:	2b05      	cmp	r3, #5
 800367c:	d10c      	bne.n	8003698 <HAL_RCC_OscConfig+0x340>
 800367e:	4b61      	ldr	r3, [pc, #388]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003680:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003682:	4a60      	ldr	r2, [pc, #384]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003684:	f043 0304 	orr.w	r3, r3, #4
 8003688:	6713      	str	r3, [r2, #112]	@ 0x70
 800368a:	4b5e      	ldr	r3, [pc, #376]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800368c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800368e:	4a5d      	ldr	r2, [pc, #372]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003690:	f043 0301 	orr.w	r3, r3, #1
 8003694:	6713      	str	r3, [r2, #112]	@ 0x70
 8003696:	e00b      	b.n	80036b0 <HAL_RCC_OscConfig+0x358>
 8003698:	4b5a      	ldr	r3, [pc, #360]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800369a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800369c:	4a59      	ldr	r2, [pc, #356]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800369e:	f023 0301 	bic.w	r3, r3, #1
 80036a2:	6713      	str	r3, [r2, #112]	@ 0x70
 80036a4:	4b57      	ldr	r3, [pc, #348]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80036a6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80036a8:	4a56      	ldr	r2, [pc, #344]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80036aa:	f023 0304 	bic.w	r3, r3, #4
 80036ae:	6713      	str	r3, [r2, #112]	@ 0x70
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	689b      	ldr	r3, [r3, #8]
 80036b4:	2b00      	cmp	r3, #0
 80036b6:	d015      	beq.n	80036e4 <HAL_RCC_OscConfig+0x38c>
 80036b8:	f7fd ff72 	bl	80015a0 <HAL_GetTick>
 80036bc:	6138      	str	r0, [r7, #16]
 80036be:	e00a      	b.n	80036d6 <HAL_RCC_OscConfig+0x37e>
 80036c0:	f7fd ff6e 	bl	80015a0 <HAL_GetTick>
 80036c4:	4602      	mov	r2, r0
 80036c6:	693b      	ldr	r3, [r7, #16]
 80036c8:	1ad3      	subs	r3, r2, r3
 80036ca:	f241 3288 	movw	r2, #5000	@ 0x1388
 80036ce:	4293      	cmp	r3, r2
 80036d0:	d901      	bls.n	80036d6 <HAL_RCC_OscConfig+0x37e>
 80036d2:	2303      	movs	r3, #3
 80036d4:	e0d7      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 80036d6:	4b4b      	ldr	r3, [pc, #300]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80036d8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80036da:	f003 0302 	and.w	r3, r3, #2
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d0ee      	beq.n	80036c0 <HAL_RCC_OscConfig+0x368>
 80036e2:	e014      	b.n	800370e <HAL_RCC_OscConfig+0x3b6>
 80036e4:	f7fd ff5c 	bl	80015a0 <HAL_GetTick>
 80036e8:	6138      	str	r0, [r7, #16]
 80036ea:	e00a      	b.n	8003702 <HAL_RCC_OscConfig+0x3aa>
 80036ec:	f7fd ff58 	bl	80015a0 <HAL_GetTick>
 80036f0:	4602      	mov	r2, r0
 80036f2:	693b      	ldr	r3, [r7, #16]
 80036f4:	1ad3      	subs	r3, r2, r3
 80036f6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80036fa:	4293      	cmp	r3, r2
 80036fc:	d901      	bls.n	8003702 <HAL_RCC_OscConfig+0x3aa>
 80036fe:	2303      	movs	r3, #3
 8003700:	e0c1      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 8003702:	4b40      	ldr	r3, [pc, #256]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003704:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003706:	f003 0302 	and.w	r3, r3, #2
 800370a:	2b00      	cmp	r3, #0
 800370c:	d1ee      	bne.n	80036ec <HAL_RCC_OscConfig+0x394>
 800370e:	7dfb      	ldrb	r3, [r7, #23]
 8003710:	2b01      	cmp	r3, #1
 8003712:	d105      	bne.n	8003720 <HAL_RCC_OscConfig+0x3c8>
 8003714:	4b3b      	ldr	r3, [pc, #236]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003716:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003718:	4a3a      	ldr	r2, [pc, #232]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800371a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800371e:	6413      	str	r3, [r2, #64]	@ 0x40
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	699b      	ldr	r3, [r3, #24]
 8003724:	2b00      	cmp	r3, #0
 8003726:	f000 80ad 	beq.w	8003884 <HAL_RCC_OscConfig+0x52c>
 800372a:	4b36      	ldr	r3, [pc, #216]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 800372c:	689b      	ldr	r3, [r3, #8]
 800372e:	f003 030c 	and.w	r3, r3, #12
 8003732:	2b08      	cmp	r3, #8
 8003734:	d060      	beq.n	80037f8 <HAL_RCC_OscConfig+0x4a0>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	699b      	ldr	r3, [r3, #24]
 800373a:	2b02      	cmp	r3, #2
 800373c:	d145      	bne.n	80037ca <HAL_RCC_OscConfig+0x472>
 800373e:	4b33      	ldr	r3, [pc, #204]	@ (800380c <HAL_RCC_OscConfig+0x4b4>)
 8003740:	2200      	movs	r2, #0
 8003742:	601a      	str	r2, [r3, #0]
 8003744:	f7fd ff2c 	bl	80015a0 <HAL_GetTick>
 8003748:	6138      	str	r0, [r7, #16]
 800374a:	e008      	b.n	800375e <HAL_RCC_OscConfig+0x406>
 800374c:	f7fd ff28 	bl	80015a0 <HAL_GetTick>
 8003750:	4602      	mov	r2, r0
 8003752:	693b      	ldr	r3, [r7, #16]
 8003754:	1ad3      	subs	r3, r2, r3
 8003756:	2b02      	cmp	r3, #2
 8003758:	d901      	bls.n	800375e <HAL_RCC_OscConfig+0x406>
 800375a:	2303      	movs	r3, #3
 800375c:	e093      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 800375e:	4b29      	ldr	r3, [pc, #164]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003766:	2b00      	cmp	r3, #0
 8003768:	d1f0      	bne.n	800374c <HAL_RCC_OscConfig+0x3f4>
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	69da      	ldr	r2, [r3, #28]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	6a1b      	ldr	r3, [r3, #32]
 8003772:	431a      	orrs	r2, r3
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003778:	019b      	lsls	r3, r3, #6
 800377a:	431a      	orrs	r2, r3
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003780:	085b      	lsrs	r3, r3, #1
 8003782:	3b01      	subs	r3, #1
 8003784:	041b      	lsls	r3, r3, #16
 8003786:	431a      	orrs	r2, r3
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800378c:	061b      	lsls	r3, r3, #24
 800378e:	431a      	orrs	r2, r3
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003794:	071b      	lsls	r3, r3, #28
 8003796:	491b      	ldr	r1, [pc, #108]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 8003798:	4313      	orrs	r3, r2
 800379a:	604b      	str	r3, [r1, #4]
 800379c:	4b1b      	ldr	r3, [pc, #108]	@ (800380c <HAL_RCC_OscConfig+0x4b4>)
 800379e:	2201      	movs	r2, #1
 80037a0:	601a      	str	r2, [r3, #0]
 80037a2:	f7fd fefd 	bl	80015a0 <HAL_GetTick>
 80037a6:	6138      	str	r0, [r7, #16]
 80037a8:	e008      	b.n	80037bc <HAL_RCC_OscConfig+0x464>
 80037aa:	f7fd fef9 	bl	80015a0 <HAL_GetTick>
 80037ae:	4602      	mov	r2, r0
 80037b0:	693b      	ldr	r3, [r7, #16]
 80037b2:	1ad3      	subs	r3, r2, r3
 80037b4:	2b02      	cmp	r3, #2
 80037b6:	d901      	bls.n	80037bc <HAL_RCC_OscConfig+0x464>
 80037b8:	2303      	movs	r3, #3
 80037ba:	e064      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 80037bc:	4b11      	ldr	r3, [pc, #68]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d0f0      	beq.n	80037aa <HAL_RCC_OscConfig+0x452>
 80037c8:	e05c      	b.n	8003884 <HAL_RCC_OscConfig+0x52c>
 80037ca:	4b10      	ldr	r3, [pc, #64]	@ (800380c <HAL_RCC_OscConfig+0x4b4>)
 80037cc:	2200      	movs	r2, #0
 80037ce:	601a      	str	r2, [r3, #0]
 80037d0:	f7fd fee6 	bl	80015a0 <HAL_GetTick>
 80037d4:	6138      	str	r0, [r7, #16]
 80037d6:	e008      	b.n	80037ea <HAL_RCC_OscConfig+0x492>
 80037d8:	f7fd fee2 	bl	80015a0 <HAL_GetTick>
 80037dc:	4602      	mov	r2, r0
 80037de:	693b      	ldr	r3, [r7, #16]
 80037e0:	1ad3      	subs	r3, r2, r3
 80037e2:	2b02      	cmp	r3, #2
 80037e4:	d901      	bls.n	80037ea <HAL_RCC_OscConfig+0x492>
 80037e6:	2303      	movs	r3, #3
 80037e8:	e04d      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 80037ea:	4b06      	ldr	r3, [pc, #24]	@ (8003804 <HAL_RCC_OscConfig+0x4ac>)
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80037f2:	2b00      	cmp	r3, #0
 80037f4:	d1f0      	bne.n	80037d8 <HAL_RCC_OscConfig+0x480>
 80037f6:	e045      	b.n	8003884 <HAL_RCC_OscConfig+0x52c>
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	699b      	ldr	r3, [r3, #24]
 80037fc:	2b01      	cmp	r3, #1
 80037fe:	d107      	bne.n	8003810 <HAL_RCC_OscConfig+0x4b8>
 8003800:	2301      	movs	r3, #1
 8003802:	e040      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 8003804:	40023800 	.word	0x40023800
 8003808:	40007000 	.word	0x40007000
 800380c:	42470060 	.word	0x42470060
 8003810:	4b1f      	ldr	r3, [pc, #124]	@ (8003890 <HAL_RCC_OscConfig+0x538>)
 8003812:	685b      	ldr	r3, [r3, #4]
 8003814:	60fb      	str	r3, [r7, #12]
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	699b      	ldr	r3, [r3, #24]
 800381a:	2b01      	cmp	r3, #1
 800381c:	d030      	beq.n	8003880 <HAL_RCC_OscConfig+0x528>
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	69db      	ldr	r3, [r3, #28]
 8003828:	429a      	cmp	r2, r3
 800382a:	d129      	bne.n	8003880 <HAL_RCC_OscConfig+0x528>
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	6a1b      	ldr	r3, [r3, #32]
 8003836:	429a      	cmp	r2, r3
 8003838:	d122      	bne.n	8003880 <HAL_RCC_OscConfig+0x528>
 800383a:	68fa      	ldr	r2, [r7, #12]
 800383c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003840:	4013      	ands	r3, r2
 8003842:	687a      	ldr	r2, [r7, #4]
 8003844:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8003846:	0192      	lsls	r2, r2, #6
 8003848:	4293      	cmp	r3, r2
 800384a:	d119      	bne.n	8003880 <HAL_RCC_OscConfig+0x528>
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003856:	085b      	lsrs	r3, r3, #1
 8003858:	3b01      	subs	r3, #1
 800385a:	041b      	lsls	r3, r3, #16
 800385c:	429a      	cmp	r2, r3
 800385e:	d10f      	bne.n	8003880 <HAL_RCC_OscConfig+0x528>
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800386a:	061b      	lsls	r3, r3, #24
 800386c:	429a      	cmp	r2, r3
 800386e:	d107      	bne.n	8003880 <HAL_RCC_OscConfig+0x528>
 8003870:	68fb      	ldr	r3, [r7, #12]
 8003872:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800387a:	071b      	lsls	r3, r3, #28
 800387c:	429a      	cmp	r2, r3
 800387e:	d001      	beq.n	8003884 <HAL_RCC_OscConfig+0x52c>
 8003880:	2301      	movs	r3, #1
 8003882:	e000      	b.n	8003886 <HAL_RCC_OscConfig+0x52e>
 8003884:	2300      	movs	r3, #0
 8003886:	4618      	mov	r0, r3
 8003888:	3718      	adds	r7, #24
 800388a:	46bd      	mov	sp, r7
 800388c:	bd80      	pop	{r7, pc}
 800388e:	bf00      	nop
 8003890:	40023800 	.word	0x40023800

08003894 <HAL_TIM_PWM_Init>:
 8003894:	b580      	push	{r7, lr}
 8003896:	b082      	sub	sp, #8
 8003898:	af00      	add	r7, sp, #0
 800389a:	6078      	str	r0, [r7, #4]
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	2b00      	cmp	r3, #0
 80038a0:	d101      	bne.n	80038a6 <HAL_TIM_PWM_Init+0x12>
 80038a2:	2301      	movs	r3, #1
 80038a4:	e041      	b.n	800392a <HAL_TIM_PWM_Init+0x96>
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80038ac:	b2db      	uxtb	r3, r3
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d106      	bne.n	80038c0 <HAL_TIM_PWM_Init+0x2c>
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	2200      	movs	r2, #0
 80038b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80038ba:	6878      	ldr	r0, [r7, #4]
 80038bc:	f7fd fcaa 	bl	8001214 <HAL_TIM_PWM_MspInit>
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	2202      	movs	r2, #2
 80038c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681a      	ldr	r2, [r3, #0]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	3304      	adds	r3, #4
 80038d0:	4619      	mov	r1, r3
 80038d2:	4610      	mov	r0, r2
 80038d4:	f000 fc0e 	bl	80040f4 <TIM_Base_SetConfig>
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	2201      	movs	r2, #1
 80038dc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	2201      	movs	r2, #1
 80038e4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2201      	movs	r2, #1
 80038ec:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	2201      	movs	r2, #1
 80038f4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	2201      	movs	r2, #1
 80038fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	2201      	movs	r2, #1
 8003904:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	2201      	movs	r2, #1
 800390c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	2201      	movs	r2, #1
 8003914:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	2201      	movs	r2, #1
 800391c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	2201      	movs	r2, #1
 8003924:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003928:	2300      	movs	r3, #0
 800392a:	4618      	mov	r0, r3
 800392c:	3708      	adds	r7, #8
 800392e:	46bd      	mov	sp, r7
 8003930:	bd80      	pop	{r7, pc}
	...

08003934 <HAL_TIM_PWM_Start>:
 8003934:	b580      	push	{r7, lr}
 8003936:	b084      	sub	sp, #16
 8003938:	af00      	add	r7, sp, #0
 800393a:	6078      	str	r0, [r7, #4]
 800393c:	6039      	str	r1, [r7, #0]
 800393e:	683b      	ldr	r3, [r7, #0]
 8003940:	2b00      	cmp	r3, #0
 8003942:	d109      	bne.n	8003958 <HAL_TIM_PWM_Start+0x24>
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800394a:	b2db      	uxtb	r3, r3
 800394c:	2b01      	cmp	r3, #1
 800394e:	bf14      	ite	ne
 8003950:	2301      	movne	r3, #1
 8003952:	2300      	moveq	r3, #0
 8003954:	b2db      	uxtb	r3, r3
 8003956:	e022      	b.n	800399e <HAL_TIM_PWM_Start+0x6a>
 8003958:	683b      	ldr	r3, [r7, #0]
 800395a:	2b04      	cmp	r3, #4
 800395c:	d109      	bne.n	8003972 <HAL_TIM_PWM_Start+0x3e>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003964:	b2db      	uxtb	r3, r3
 8003966:	2b01      	cmp	r3, #1
 8003968:	bf14      	ite	ne
 800396a:	2301      	movne	r3, #1
 800396c:	2300      	moveq	r3, #0
 800396e:	b2db      	uxtb	r3, r3
 8003970:	e015      	b.n	800399e <HAL_TIM_PWM_Start+0x6a>
 8003972:	683b      	ldr	r3, [r7, #0]
 8003974:	2b08      	cmp	r3, #8
 8003976:	d109      	bne.n	800398c <HAL_TIM_PWM_Start+0x58>
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800397e:	b2db      	uxtb	r3, r3
 8003980:	2b01      	cmp	r3, #1
 8003982:	bf14      	ite	ne
 8003984:	2301      	movne	r3, #1
 8003986:	2300      	moveq	r3, #0
 8003988:	b2db      	uxtb	r3, r3
 800398a:	e008      	b.n	800399e <HAL_TIM_PWM_Start+0x6a>
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003992:	b2db      	uxtb	r3, r3
 8003994:	2b01      	cmp	r3, #1
 8003996:	bf14      	ite	ne
 8003998:	2301      	movne	r3, #1
 800399a:	2300      	moveq	r3, #0
 800399c:	b2db      	uxtb	r3, r3
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d001      	beq.n	80039a6 <HAL_TIM_PWM_Start+0x72>
 80039a2:	2301      	movs	r3, #1
 80039a4:	e07c      	b.n	8003aa0 <HAL_TIM_PWM_Start+0x16c>
 80039a6:	683b      	ldr	r3, [r7, #0]
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d104      	bne.n	80039b6 <HAL_TIM_PWM_Start+0x82>
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	2202      	movs	r2, #2
 80039b0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80039b4:	e013      	b.n	80039de <HAL_TIM_PWM_Start+0xaa>
 80039b6:	683b      	ldr	r3, [r7, #0]
 80039b8:	2b04      	cmp	r3, #4
 80039ba:	d104      	bne.n	80039c6 <HAL_TIM_PWM_Start+0x92>
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	2202      	movs	r2, #2
 80039c0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80039c4:	e00b      	b.n	80039de <HAL_TIM_PWM_Start+0xaa>
 80039c6:	683b      	ldr	r3, [r7, #0]
 80039c8:	2b08      	cmp	r3, #8
 80039ca:	d104      	bne.n	80039d6 <HAL_TIM_PWM_Start+0xa2>
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	2202      	movs	r2, #2
 80039d0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80039d4:	e003      	b.n	80039de <HAL_TIM_PWM_Start+0xaa>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	2202      	movs	r2, #2
 80039da:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	2201      	movs	r2, #1
 80039e4:	6839      	ldr	r1, [r7, #0]
 80039e6:	4618      	mov	r0, r3
 80039e8:	f000 fde0 	bl	80045ac <TIM_CCxChannelCmd>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	4a2d      	ldr	r2, [pc, #180]	@ (8003aa8 <HAL_TIM_PWM_Start+0x174>)
 80039f2:	4293      	cmp	r3, r2
 80039f4:	d004      	beq.n	8003a00 <HAL_TIM_PWM_Start+0xcc>
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	4a2c      	ldr	r2, [pc, #176]	@ (8003aac <HAL_TIM_PWM_Start+0x178>)
 80039fc:	4293      	cmp	r3, r2
 80039fe:	d101      	bne.n	8003a04 <HAL_TIM_PWM_Start+0xd0>
 8003a00:	2301      	movs	r3, #1
 8003a02:	e000      	b.n	8003a06 <HAL_TIM_PWM_Start+0xd2>
 8003a04:	2300      	movs	r3, #0
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d007      	beq.n	8003a1a <HAL_TIM_PWM_Start+0xe6>
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003a18:	645a      	str	r2, [r3, #68]	@ 0x44
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	4a22      	ldr	r2, [pc, #136]	@ (8003aa8 <HAL_TIM_PWM_Start+0x174>)
 8003a20:	4293      	cmp	r3, r2
 8003a22:	d022      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003a2c:	d01d      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	4a1f      	ldr	r2, [pc, #124]	@ (8003ab0 <HAL_TIM_PWM_Start+0x17c>)
 8003a34:	4293      	cmp	r3, r2
 8003a36:	d018      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	4a1d      	ldr	r2, [pc, #116]	@ (8003ab4 <HAL_TIM_PWM_Start+0x180>)
 8003a3e:	4293      	cmp	r3, r2
 8003a40:	d013      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	4a1c      	ldr	r2, [pc, #112]	@ (8003ab8 <HAL_TIM_PWM_Start+0x184>)
 8003a48:	4293      	cmp	r3, r2
 8003a4a:	d00e      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	4a16      	ldr	r2, [pc, #88]	@ (8003aac <HAL_TIM_PWM_Start+0x178>)
 8003a52:	4293      	cmp	r3, r2
 8003a54:	d009      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	4a18      	ldr	r2, [pc, #96]	@ (8003abc <HAL_TIM_PWM_Start+0x188>)
 8003a5c:	4293      	cmp	r3, r2
 8003a5e:	d004      	beq.n	8003a6a <HAL_TIM_PWM_Start+0x136>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	4a16      	ldr	r2, [pc, #88]	@ (8003ac0 <HAL_TIM_PWM_Start+0x18c>)
 8003a66:	4293      	cmp	r3, r2
 8003a68:	d111      	bne.n	8003a8e <HAL_TIM_PWM_Start+0x15a>
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	689b      	ldr	r3, [r3, #8]
 8003a70:	f003 0307 	and.w	r3, r3, #7
 8003a74:	60fb      	str	r3, [r7, #12]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	2b06      	cmp	r3, #6
 8003a7a:	d010      	beq.n	8003a9e <HAL_TIM_PWM_Start+0x16a>
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	681a      	ldr	r2, [r3, #0]
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	f042 0201 	orr.w	r2, r2, #1
 8003a8a:	601a      	str	r2, [r3, #0]
 8003a8c:	e007      	b.n	8003a9e <HAL_TIM_PWM_Start+0x16a>
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	681a      	ldr	r2, [r3, #0]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	f042 0201 	orr.w	r2, r2, #1
 8003a9c:	601a      	str	r2, [r3, #0]
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	3710      	adds	r7, #16
 8003aa4:	46bd      	mov	sp, r7
 8003aa6:	bd80      	pop	{r7, pc}
 8003aa8:	40010000 	.word	0x40010000
 8003aac:	40010400 	.word	0x40010400
 8003ab0:	40000400 	.word	0x40000400
 8003ab4:	40000800 	.word	0x40000800
 8003ab8:	40000c00 	.word	0x40000c00
 8003abc:	40014000 	.word	0x40014000
 8003ac0:	40001800 	.word	0x40001800

08003ac4 <HAL_TIM_Encoder_Init>:
 8003ac4:	b580      	push	{r7, lr}
 8003ac6:	b086      	sub	sp, #24
 8003ac8:	af00      	add	r7, sp, #0
 8003aca:	6078      	str	r0, [r7, #4]
 8003acc:	6039      	str	r1, [r7, #0]
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d101      	bne.n	8003ad8 <HAL_TIM_Encoder_Init+0x14>
 8003ad4:	2301      	movs	r3, #1
 8003ad6:	e097      	b.n	8003c08 <HAL_TIM_Encoder_Init+0x144>
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003ade:	b2db      	uxtb	r3, r3
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d106      	bne.n	8003af2 <HAL_TIM_Encoder_Init+0x2e>
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	2200      	movs	r2, #0
 8003ae8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003aec:	6878      	ldr	r0, [r7, #4]
 8003aee:	f7fd fb49 	bl	8001184 <HAL_TIM_Encoder_MspInit>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	2202      	movs	r2, #2
 8003af6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	689b      	ldr	r3, [r3, #8]
 8003b00:	687a      	ldr	r2, [r7, #4]
 8003b02:	6812      	ldr	r2, [r2, #0]
 8003b04:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003b08:	f023 0307 	bic.w	r3, r3, #7
 8003b0c:	6093      	str	r3, [r2, #8]
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	681a      	ldr	r2, [r3, #0]
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	3304      	adds	r3, #4
 8003b16:	4619      	mov	r1, r3
 8003b18:	4610      	mov	r0, r2
 8003b1a:	f000 faeb 	bl	80040f4 <TIM_Base_SetConfig>
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	689b      	ldr	r3, [r3, #8]
 8003b24:	617b      	str	r3, [r7, #20]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	681b      	ldr	r3, [r3, #0]
 8003b2a:	699b      	ldr	r3, [r3, #24]
 8003b2c:	613b      	str	r3, [r7, #16]
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	6a1b      	ldr	r3, [r3, #32]
 8003b34:	60fb      	str	r3, [r7, #12]
 8003b36:	683b      	ldr	r3, [r7, #0]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	697a      	ldr	r2, [r7, #20]
 8003b3c:	4313      	orrs	r3, r2
 8003b3e:	617b      	str	r3, [r7, #20]
 8003b40:	693b      	ldr	r3, [r7, #16]
 8003b42:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003b46:	f023 0303 	bic.w	r3, r3, #3
 8003b4a:	613b      	str	r3, [r7, #16]
 8003b4c:	683b      	ldr	r3, [r7, #0]
 8003b4e:	689a      	ldr	r2, [r3, #8]
 8003b50:	683b      	ldr	r3, [r7, #0]
 8003b52:	699b      	ldr	r3, [r3, #24]
 8003b54:	021b      	lsls	r3, r3, #8
 8003b56:	4313      	orrs	r3, r2
 8003b58:	693a      	ldr	r2, [r7, #16]
 8003b5a:	4313      	orrs	r3, r2
 8003b5c:	613b      	str	r3, [r7, #16]
 8003b5e:	693b      	ldr	r3, [r7, #16]
 8003b60:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8003b64:	f023 030c 	bic.w	r3, r3, #12
 8003b68:	613b      	str	r3, [r7, #16]
 8003b6a:	693b      	ldr	r3, [r7, #16]
 8003b6c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003b70:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003b74:	613b      	str	r3, [r7, #16]
 8003b76:	683b      	ldr	r3, [r7, #0]
 8003b78:	68da      	ldr	r2, [r3, #12]
 8003b7a:	683b      	ldr	r3, [r7, #0]
 8003b7c:	69db      	ldr	r3, [r3, #28]
 8003b7e:	021b      	lsls	r3, r3, #8
 8003b80:	4313      	orrs	r3, r2
 8003b82:	693a      	ldr	r2, [r7, #16]
 8003b84:	4313      	orrs	r3, r2
 8003b86:	613b      	str	r3, [r7, #16]
 8003b88:	683b      	ldr	r3, [r7, #0]
 8003b8a:	691b      	ldr	r3, [r3, #16]
 8003b8c:	011a      	lsls	r2, r3, #4
 8003b8e:	683b      	ldr	r3, [r7, #0]
 8003b90:	6a1b      	ldr	r3, [r3, #32]
 8003b92:	031b      	lsls	r3, r3, #12
 8003b94:	4313      	orrs	r3, r2
 8003b96:	693a      	ldr	r2, [r7, #16]
 8003b98:	4313      	orrs	r3, r2
 8003b9a:	613b      	str	r3, [r7, #16]
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8003ba2:	60fb      	str	r3, [r7, #12]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 8003baa:	60fb      	str	r3, [r7, #12]
 8003bac:	683b      	ldr	r3, [r7, #0]
 8003bae:	685a      	ldr	r2, [r3, #4]
 8003bb0:	683b      	ldr	r3, [r7, #0]
 8003bb2:	695b      	ldr	r3, [r3, #20]
 8003bb4:	011b      	lsls	r3, r3, #4
 8003bb6:	4313      	orrs	r3, r2
 8003bb8:	68fa      	ldr	r2, [r7, #12]
 8003bba:	4313      	orrs	r3, r2
 8003bbc:	60fb      	str	r3, [r7, #12]
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	697a      	ldr	r2, [r7, #20]
 8003bc4:	609a      	str	r2, [r3, #8]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	693a      	ldr	r2, [r7, #16]
 8003bcc:	619a      	str	r2, [r3, #24]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	68fa      	ldr	r2, [r7, #12]
 8003bd4:	621a      	str	r2, [r3, #32]
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	2201      	movs	r2, #1
 8003bda:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	2201      	movs	r2, #1
 8003be2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	2201      	movs	r2, #1
 8003bea:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	2201      	movs	r2, #1
 8003bf2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	2201      	movs	r2, #1
 8003bfa:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2201      	movs	r2, #1
 8003c02:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c06:	2300      	movs	r3, #0
 8003c08:	4618      	mov	r0, r3
 8003c0a:	3718      	adds	r7, #24
 8003c0c:	46bd      	mov	sp, r7
 8003c0e:	bd80      	pop	{r7, pc}

08003c10 <HAL_TIM_Encoder_Start>:
 8003c10:	b580      	push	{r7, lr}
 8003c12:	b084      	sub	sp, #16
 8003c14:	af00      	add	r7, sp, #0
 8003c16:	6078      	str	r0, [r7, #4]
 8003c18:	6039      	str	r1, [r7, #0]
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003c20:	73fb      	strb	r3, [r7, #15]
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003c28:	73bb      	strb	r3, [r7, #14]
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003c30:	737b      	strb	r3, [r7, #13]
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8003c38:	733b      	strb	r3, [r7, #12]
 8003c3a:	683b      	ldr	r3, [r7, #0]
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d110      	bne.n	8003c62 <HAL_TIM_Encoder_Start+0x52>
 8003c40:	7bfb      	ldrb	r3, [r7, #15]
 8003c42:	2b01      	cmp	r3, #1
 8003c44:	d102      	bne.n	8003c4c <HAL_TIM_Encoder_Start+0x3c>
 8003c46:	7b7b      	ldrb	r3, [r7, #13]
 8003c48:	2b01      	cmp	r3, #1
 8003c4a:	d001      	beq.n	8003c50 <HAL_TIM_Encoder_Start+0x40>
 8003c4c:	2301      	movs	r3, #1
 8003c4e:	e069      	b.n	8003d24 <HAL_TIM_Encoder_Start+0x114>
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	2202      	movs	r2, #2
 8003c54:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	2202      	movs	r2, #2
 8003c5c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c60:	e031      	b.n	8003cc6 <HAL_TIM_Encoder_Start+0xb6>
 8003c62:	683b      	ldr	r3, [r7, #0]
 8003c64:	2b04      	cmp	r3, #4
 8003c66:	d110      	bne.n	8003c8a <HAL_TIM_Encoder_Start+0x7a>
 8003c68:	7bbb      	ldrb	r3, [r7, #14]
 8003c6a:	2b01      	cmp	r3, #1
 8003c6c:	d102      	bne.n	8003c74 <HAL_TIM_Encoder_Start+0x64>
 8003c6e:	7b3b      	ldrb	r3, [r7, #12]
 8003c70:	2b01      	cmp	r3, #1
 8003c72:	d001      	beq.n	8003c78 <HAL_TIM_Encoder_Start+0x68>
 8003c74:	2301      	movs	r3, #1
 8003c76:	e055      	b.n	8003d24 <HAL_TIM_Encoder_Start+0x114>
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	2202      	movs	r2, #2
 8003c7c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	2202      	movs	r2, #2
 8003c84:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003c88:	e01d      	b.n	8003cc6 <HAL_TIM_Encoder_Start+0xb6>
 8003c8a:	7bfb      	ldrb	r3, [r7, #15]
 8003c8c:	2b01      	cmp	r3, #1
 8003c8e:	d108      	bne.n	8003ca2 <HAL_TIM_Encoder_Start+0x92>
 8003c90:	7bbb      	ldrb	r3, [r7, #14]
 8003c92:	2b01      	cmp	r3, #1
 8003c94:	d105      	bne.n	8003ca2 <HAL_TIM_Encoder_Start+0x92>
 8003c96:	7b7b      	ldrb	r3, [r7, #13]
 8003c98:	2b01      	cmp	r3, #1
 8003c9a:	d102      	bne.n	8003ca2 <HAL_TIM_Encoder_Start+0x92>
 8003c9c:	7b3b      	ldrb	r3, [r7, #12]
 8003c9e:	2b01      	cmp	r3, #1
 8003ca0:	d001      	beq.n	8003ca6 <HAL_TIM_Encoder_Start+0x96>
 8003ca2:	2301      	movs	r3, #1
 8003ca4:	e03e      	b.n	8003d24 <HAL_TIM_Encoder_Start+0x114>
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	2202      	movs	r2, #2
 8003caa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	2202      	movs	r2, #2
 8003cb2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	2202      	movs	r2, #2
 8003cba:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	2202      	movs	r2, #2
 8003cc2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003cc6:	683b      	ldr	r3, [r7, #0]
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	d003      	beq.n	8003cd4 <HAL_TIM_Encoder_Start+0xc4>
 8003ccc:	683b      	ldr	r3, [r7, #0]
 8003cce:	2b04      	cmp	r3, #4
 8003cd0:	d008      	beq.n	8003ce4 <HAL_TIM_Encoder_Start+0xd4>
 8003cd2:	e00f      	b.n	8003cf4 <HAL_TIM_Encoder_Start+0xe4>
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	2201      	movs	r2, #1
 8003cda:	2100      	movs	r1, #0
 8003cdc:	4618      	mov	r0, r3
 8003cde:	f000 fc65 	bl	80045ac <TIM_CCxChannelCmd>
 8003ce2:	e016      	b.n	8003d12 <HAL_TIM_Encoder_Start+0x102>
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	2201      	movs	r2, #1
 8003cea:	2104      	movs	r1, #4
 8003cec:	4618      	mov	r0, r3
 8003cee:	f000 fc5d 	bl	80045ac <TIM_CCxChannelCmd>
 8003cf2:	e00e      	b.n	8003d12 <HAL_TIM_Encoder_Start+0x102>
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	2201      	movs	r2, #1
 8003cfa:	2100      	movs	r1, #0
 8003cfc:	4618      	mov	r0, r3
 8003cfe:	f000 fc55 	bl	80045ac <TIM_CCxChannelCmd>
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	2201      	movs	r2, #1
 8003d08:	2104      	movs	r1, #4
 8003d0a:	4618      	mov	r0, r3
 8003d0c:	f000 fc4e 	bl	80045ac <TIM_CCxChannelCmd>
 8003d10:	bf00      	nop
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	681a      	ldr	r2, [r3, #0]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	f042 0201 	orr.w	r2, r2, #1
 8003d20:	601a      	str	r2, [r3, #0]
 8003d22:	2300      	movs	r3, #0
 8003d24:	4618      	mov	r0, r3
 8003d26:	3710      	adds	r7, #16
 8003d28:	46bd      	mov	sp, r7
 8003d2a:	bd80      	pop	{r7, pc}

08003d2c <HAL_TIM_IRQHandler>:
 8003d2c:	b580      	push	{r7, lr}
 8003d2e:	b084      	sub	sp, #16
 8003d30:	af00      	add	r7, sp, #0
 8003d32:	6078      	str	r0, [r7, #4]
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	68db      	ldr	r3, [r3, #12]
 8003d3a:	60fb      	str	r3, [r7, #12]
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	691b      	ldr	r3, [r3, #16]
 8003d42:	60bb      	str	r3, [r7, #8]
 8003d44:	68bb      	ldr	r3, [r7, #8]
 8003d46:	f003 0302 	and.w	r3, r3, #2
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d020      	beq.n	8003d90 <HAL_TIM_IRQHandler+0x64>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	f003 0302 	and.w	r3, r3, #2
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d01b      	beq.n	8003d90 <HAL_TIM_IRQHandler+0x64>
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	f06f 0202 	mvn.w	r2, #2
 8003d60:	611a      	str	r2, [r3, #16]
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	2201      	movs	r2, #1
 8003d66:	771a      	strb	r2, [r3, #28]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	699b      	ldr	r3, [r3, #24]
 8003d6e:	f003 0303 	and.w	r3, r3, #3
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d003      	beq.n	8003d7e <HAL_TIM_IRQHandler+0x52>
 8003d76:	6878      	ldr	r0, [r7, #4]
 8003d78:	f000 f99e 	bl	80040b8 <HAL_TIM_IC_CaptureCallback>
 8003d7c:	e005      	b.n	8003d8a <HAL_TIM_IRQHandler+0x5e>
 8003d7e:	6878      	ldr	r0, [r7, #4]
 8003d80:	f000 f990 	bl	80040a4 <HAL_TIM_OC_DelayElapsedCallback>
 8003d84:	6878      	ldr	r0, [r7, #4]
 8003d86:	f000 f9a1 	bl	80040cc <HAL_TIM_PWM_PulseFinishedCallback>
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	771a      	strb	r2, [r3, #28]
 8003d90:	68bb      	ldr	r3, [r7, #8]
 8003d92:	f003 0304 	and.w	r3, r3, #4
 8003d96:	2b00      	cmp	r3, #0
 8003d98:	d020      	beq.n	8003ddc <HAL_TIM_IRQHandler+0xb0>
 8003d9a:	68fb      	ldr	r3, [r7, #12]
 8003d9c:	f003 0304 	and.w	r3, r3, #4
 8003da0:	2b00      	cmp	r3, #0
 8003da2:	d01b      	beq.n	8003ddc <HAL_TIM_IRQHandler+0xb0>
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	f06f 0204 	mvn.w	r2, #4
 8003dac:	611a      	str	r2, [r3, #16]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	2202      	movs	r2, #2
 8003db2:	771a      	strb	r2, [r3, #28]
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	699b      	ldr	r3, [r3, #24]
 8003dba:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d003      	beq.n	8003dca <HAL_TIM_IRQHandler+0x9e>
 8003dc2:	6878      	ldr	r0, [r7, #4]
 8003dc4:	f000 f978 	bl	80040b8 <HAL_TIM_IC_CaptureCallback>
 8003dc8:	e005      	b.n	8003dd6 <HAL_TIM_IRQHandler+0xaa>
 8003dca:	6878      	ldr	r0, [r7, #4]
 8003dcc:	f000 f96a 	bl	80040a4 <HAL_TIM_OC_DelayElapsedCallback>
 8003dd0:	6878      	ldr	r0, [r7, #4]
 8003dd2:	f000 f97b 	bl	80040cc <HAL_TIM_PWM_PulseFinishedCallback>
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	2200      	movs	r2, #0
 8003dda:	771a      	strb	r2, [r3, #28]
 8003ddc:	68bb      	ldr	r3, [r7, #8]
 8003dde:	f003 0308 	and.w	r3, r3, #8
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d020      	beq.n	8003e28 <HAL_TIM_IRQHandler+0xfc>
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	f003 0308 	and.w	r3, r3, #8
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	d01b      	beq.n	8003e28 <HAL_TIM_IRQHandler+0xfc>
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	f06f 0208 	mvn.w	r2, #8
 8003df8:	611a      	str	r2, [r3, #16]
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	2204      	movs	r2, #4
 8003dfe:	771a      	strb	r2, [r3, #28]
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	69db      	ldr	r3, [r3, #28]
 8003e06:	f003 0303 	and.w	r3, r3, #3
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d003      	beq.n	8003e16 <HAL_TIM_IRQHandler+0xea>
 8003e0e:	6878      	ldr	r0, [r7, #4]
 8003e10:	f000 f952 	bl	80040b8 <HAL_TIM_IC_CaptureCallback>
 8003e14:	e005      	b.n	8003e22 <HAL_TIM_IRQHandler+0xf6>
 8003e16:	6878      	ldr	r0, [r7, #4]
 8003e18:	f000 f944 	bl	80040a4 <HAL_TIM_OC_DelayElapsedCallback>
 8003e1c:	6878      	ldr	r0, [r7, #4]
 8003e1e:	f000 f955 	bl	80040cc <HAL_TIM_PWM_PulseFinishedCallback>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	2200      	movs	r2, #0
 8003e26:	771a      	strb	r2, [r3, #28]
 8003e28:	68bb      	ldr	r3, [r7, #8]
 8003e2a:	f003 0310 	and.w	r3, r3, #16
 8003e2e:	2b00      	cmp	r3, #0
 8003e30:	d020      	beq.n	8003e74 <HAL_TIM_IRQHandler+0x148>
 8003e32:	68fb      	ldr	r3, [r7, #12]
 8003e34:	f003 0310 	and.w	r3, r3, #16
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d01b      	beq.n	8003e74 <HAL_TIM_IRQHandler+0x148>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	f06f 0210 	mvn.w	r2, #16
 8003e44:	611a      	str	r2, [r3, #16]
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	2208      	movs	r2, #8
 8003e4a:	771a      	strb	r2, [r3, #28]
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	69db      	ldr	r3, [r3, #28]
 8003e52:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d003      	beq.n	8003e62 <HAL_TIM_IRQHandler+0x136>
 8003e5a:	6878      	ldr	r0, [r7, #4]
 8003e5c:	f000 f92c 	bl	80040b8 <HAL_TIM_IC_CaptureCallback>
 8003e60:	e005      	b.n	8003e6e <HAL_TIM_IRQHandler+0x142>
 8003e62:	6878      	ldr	r0, [r7, #4]
 8003e64:	f000 f91e 	bl	80040a4 <HAL_TIM_OC_DelayElapsedCallback>
 8003e68:	6878      	ldr	r0, [r7, #4]
 8003e6a:	f000 f92f 	bl	80040cc <HAL_TIM_PWM_PulseFinishedCallback>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	2200      	movs	r2, #0
 8003e72:	771a      	strb	r2, [r3, #28]
 8003e74:	68bb      	ldr	r3, [r7, #8]
 8003e76:	f003 0301 	and.w	r3, r3, #1
 8003e7a:	2b00      	cmp	r3, #0
 8003e7c:	d00c      	beq.n	8003e98 <HAL_TIM_IRQHandler+0x16c>
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	f003 0301 	and.w	r3, r3, #1
 8003e84:	2b00      	cmp	r3, #0
 8003e86:	d007      	beq.n	8003e98 <HAL_TIM_IRQHandler+0x16c>
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	f06f 0201 	mvn.w	r2, #1
 8003e90:	611a      	str	r2, [r3, #16]
 8003e92:	6878      	ldr	r0, [r7, #4]
 8003e94:	f000 f8fc 	bl	8004090 <HAL_TIM_PeriodElapsedCallback>
 8003e98:	68bb      	ldr	r3, [r7, #8]
 8003e9a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	d00c      	beq.n	8003ebc <HAL_TIM_IRQHandler+0x190>
 8003ea2:	68fb      	ldr	r3, [r7, #12]
 8003ea4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ea8:	2b00      	cmp	r3, #0
 8003eaa:	d007      	beq.n	8003ebc <HAL_TIM_IRQHandler+0x190>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003eb4:	611a      	str	r2, [r3, #16]
 8003eb6:	6878      	ldr	r0, [r7, #4]
 8003eb8:	f000 fc24 	bl	8004704 <HAL_TIMEx_BreakCallback>
 8003ebc:	68bb      	ldr	r3, [r7, #8]
 8003ebe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d00c      	beq.n	8003ee0 <HAL_TIM_IRQHandler+0x1b4>
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003ecc:	2b00      	cmp	r3, #0
 8003ece:	d007      	beq.n	8003ee0 <HAL_TIM_IRQHandler+0x1b4>
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003ed8:	611a      	str	r2, [r3, #16]
 8003eda:	6878      	ldr	r0, [r7, #4]
 8003edc:	f000 f900 	bl	80040e0 <HAL_TIM_TriggerCallback>
 8003ee0:	68bb      	ldr	r3, [r7, #8]
 8003ee2:	f003 0320 	and.w	r3, r3, #32
 8003ee6:	2b00      	cmp	r3, #0
 8003ee8:	d00c      	beq.n	8003f04 <HAL_TIM_IRQHandler+0x1d8>
 8003eea:	68fb      	ldr	r3, [r7, #12]
 8003eec:	f003 0320 	and.w	r3, r3, #32
 8003ef0:	2b00      	cmp	r3, #0
 8003ef2:	d007      	beq.n	8003f04 <HAL_TIM_IRQHandler+0x1d8>
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	f06f 0220 	mvn.w	r2, #32
 8003efc:	611a      	str	r2, [r3, #16]
 8003efe:	6878      	ldr	r0, [r7, #4]
 8003f00:	f000 fbf6 	bl	80046f0 <HAL_TIMEx_CommutCallback>
 8003f04:	bf00      	nop
 8003f06:	3710      	adds	r7, #16
 8003f08:	46bd      	mov	sp, r7
 8003f0a:	bd80      	pop	{r7, pc}

08003f0c <HAL_TIM_PWM_ConfigChannel>:
 8003f0c:	b580      	push	{r7, lr}
 8003f0e:	b086      	sub	sp, #24
 8003f10:	af00      	add	r7, sp, #0
 8003f12:	60f8      	str	r0, [r7, #12]
 8003f14:	60b9      	str	r1, [r7, #8]
 8003f16:	607a      	str	r2, [r7, #4]
 8003f18:	2300      	movs	r3, #0
 8003f1a:	75fb      	strb	r3, [r7, #23]
 8003f1c:	68fb      	ldr	r3, [r7, #12]
 8003f1e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003f22:	2b01      	cmp	r3, #1
 8003f24:	d101      	bne.n	8003f2a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003f26:	2302      	movs	r3, #2
 8003f28:	e0ae      	b.n	8004088 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003f2a:	68fb      	ldr	r3, [r7, #12]
 8003f2c:	2201      	movs	r2, #1
 8003f2e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	2b0c      	cmp	r3, #12
 8003f36:	f200 809f 	bhi.w	8004078 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003f3a:	a201      	add	r2, pc, #4	@ (adr r2, 8003f40 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003f3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f40:	08003f75 	.word	0x08003f75
 8003f44:	08004079 	.word	0x08004079
 8003f48:	08004079 	.word	0x08004079
 8003f4c:	08004079 	.word	0x08004079
 8003f50:	08003fb5 	.word	0x08003fb5
 8003f54:	08004079 	.word	0x08004079
 8003f58:	08004079 	.word	0x08004079
 8003f5c:	08004079 	.word	0x08004079
 8003f60:	08003ff7 	.word	0x08003ff7
 8003f64:	08004079 	.word	0x08004079
 8003f68:	08004079 	.word	0x08004079
 8003f6c:	08004079 	.word	0x08004079
 8003f70:	08004037 	.word	0x08004037
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	68b9      	ldr	r1, [r7, #8]
 8003f7a:	4618      	mov	r0, r3
 8003f7c:	f000 f966 	bl	800424c <TIM_OC1_SetConfig>
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	699a      	ldr	r2, [r3, #24]
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	f042 0208 	orr.w	r2, r2, #8
 8003f8e:	619a      	str	r2, [r3, #24]
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	699a      	ldr	r2, [r3, #24]
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f022 0204 	bic.w	r2, r2, #4
 8003f9e:	619a      	str	r2, [r3, #24]
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	6999      	ldr	r1, [r3, #24]
 8003fa6:	68bb      	ldr	r3, [r7, #8]
 8003fa8:	691a      	ldr	r2, [r3, #16]
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	430a      	orrs	r2, r1
 8003fb0:	619a      	str	r2, [r3, #24]
 8003fb2:	e064      	b.n	800407e <HAL_TIM_PWM_ConfigChannel+0x172>
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	68b9      	ldr	r1, [r7, #8]
 8003fba:	4618      	mov	r0, r3
 8003fbc:	f000 f9b6 	bl	800432c <TIM_OC2_SetConfig>
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	699a      	ldr	r2, [r3, #24]
 8003fc6:	68fb      	ldr	r3, [r7, #12]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003fce:	619a      	str	r2, [r3, #24]
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	699a      	ldr	r2, [r3, #24]
 8003fd6:	68fb      	ldr	r3, [r7, #12]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003fde:	619a      	str	r2, [r3, #24]
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	6999      	ldr	r1, [r3, #24]
 8003fe6:	68bb      	ldr	r3, [r7, #8]
 8003fe8:	691b      	ldr	r3, [r3, #16]
 8003fea:	021a      	lsls	r2, r3, #8
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	430a      	orrs	r2, r1
 8003ff2:	619a      	str	r2, [r3, #24]
 8003ff4:	e043      	b.n	800407e <HAL_TIM_PWM_ConfigChannel+0x172>
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	68b9      	ldr	r1, [r7, #8]
 8003ffc:	4618      	mov	r0, r3
 8003ffe:	f000 fa0b 	bl	8004418 <TIM_OC3_SetConfig>
 8004002:	68fb      	ldr	r3, [r7, #12]
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	69da      	ldr	r2, [r3, #28]
 8004008:	68fb      	ldr	r3, [r7, #12]
 800400a:	681b      	ldr	r3, [r3, #0]
 800400c:	f042 0208 	orr.w	r2, r2, #8
 8004010:	61da      	str	r2, [r3, #28]
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	69da      	ldr	r2, [r3, #28]
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	f022 0204 	bic.w	r2, r2, #4
 8004020:	61da      	str	r2, [r3, #28]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	69d9      	ldr	r1, [r3, #28]
 8004028:	68bb      	ldr	r3, [r7, #8]
 800402a:	691a      	ldr	r2, [r3, #16]
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	430a      	orrs	r2, r1
 8004032:	61da      	str	r2, [r3, #28]
 8004034:	e023      	b.n	800407e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004036:	68fb      	ldr	r3, [r7, #12]
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	68b9      	ldr	r1, [r7, #8]
 800403c:	4618      	mov	r0, r3
 800403e:	f000 fa5f 	bl	8004500 <TIM_OC4_SetConfig>
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	69da      	ldr	r2, [r3, #28]
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	681b      	ldr	r3, [r3, #0]
 800404c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004050:	61da      	str	r2, [r3, #28]
 8004052:	68fb      	ldr	r3, [r7, #12]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	69da      	ldr	r2, [r3, #28]
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004060:	61da      	str	r2, [r3, #28]
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	69d9      	ldr	r1, [r3, #28]
 8004068:	68bb      	ldr	r3, [r7, #8]
 800406a:	691b      	ldr	r3, [r3, #16]
 800406c:	021a      	lsls	r2, r3, #8
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	430a      	orrs	r2, r1
 8004074:	61da      	str	r2, [r3, #28]
 8004076:	e002      	b.n	800407e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004078:	2301      	movs	r3, #1
 800407a:	75fb      	strb	r3, [r7, #23]
 800407c:	bf00      	nop
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	2200      	movs	r2, #0
 8004082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004086:	7dfb      	ldrb	r3, [r7, #23]
 8004088:	4618      	mov	r0, r3
 800408a:	3718      	adds	r7, #24
 800408c:	46bd      	mov	sp, r7
 800408e:	bd80      	pop	{r7, pc}

08004090 <HAL_TIM_PeriodElapsedCallback>:
 8004090:	b480      	push	{r7}
 8004092:	b083      	sub	sp, #12
 8004094:	af00      	add	r7, sp, #0
 8004096:	6078      	str	r0, [r7, #4]
 8004098:	bf00      	nop
 800409a:	370c      	adds	r7, #12
 800409c:	46bd      	mov	sp, r7
 800409e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040a2:	4770      	bx	lr

080040a4 <HAL_TIM_OC_DelayElapsedCallback>:
 80040a4:	b480      	push	{r7}
 80040a6:	b083      	sub	sp, #12
 80040a8:	af00      	add	r7, sp, #0
 80040aa:	6078      	str	r0, [r7, #4]
 80040ac:	bf00      	nop
 80040ae:	370c      	adds	r7, #12
 80040b0:	46bd      	mov	sp, r7
 80040b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040b6:	4770      	bx	lr

080040b8 <HAL_TIM_IC_CaptureCallback>:
 80040b8:	b480      	push	{r7}
 80040ba:	b083      	sub	sp, #12
 80040bc:	af00      	add	r7, sp, #0
 80040be:	6078      	str	r0, [r7, #4]
 80040c0:	bf00      	nop
 80040c2:	370c      	adds	r7, #12
 80040c4:	46bd      	mov	sp, r7
 80040c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ca:	4770      	bx	lr

080040cc <HAL_TIM_PWM_PulseFinishedCallback>:
 80040cc:	b480      	push	{r7}
 80040ce:	b083      	sub	sp, #12
 80040d0:	af00      	add	r7, sp, #0
 80040d2:	6078      	str	r0, [r7, #4]
 80040d4:	bf00      	nop
 80040d6:	370c      	adds	r7, #12
 80040d8:	46bd      	mov	sp, r7
 80040da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040de:	4770      	bx	lr

080040e0 <HAL_TIM_TriggerCallback>:
 80040e0:	b480      	push	{r7}
 80040e2:	b083      	sub	sp, #12
 80040e4:	af00      	add	r7, sp, #0
 80040e6:	6078      	str	r0, [r7, #4]
 80040e8:	bf00      	nop
 80040ea:	370c      	adds	r7, #12
 80040ec:	46bd      	mov	sp, r7
 80040ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f2:	4770      	bx	lr

080040f4 <TIM_Base_SetConfig>:
 80040f4:	b480      	push	{r7}
 80040f6:	b085      	sub	sp, #20
 80040f8:	af00      	add	r7, sp, #0
 80040fa:	6078      	str	r0, [r7, #4]
 80040fc:	6039      	str	r1, [r7, #0]
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	60fb      	str	r3, [r7, #12]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	4a46      	ldr	r2, [pc, #280]	@ (8004220 <TIM_Base_SetConfig+0x12c>)
 8004108:	4293      	cmp	r3, r2
 800410a:	d013      	beq.n	8004134 <TIM_Base_SetConfig+0x40>
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004112:	d00f      	beq.n	8004134 <TIM_Base_SetConfig+0x40>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	4a43      	ldr	r2, [pc, #268]	@ (8004224 <TIM_Base_SetConfig+0x130>)
 8004118:	4293      	cmp	r3, r2
 800411a:	d00b      	beq.n	8004134 <TIM_Base_SetConfig+0x40>
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	4a42      	ldr	r2, [pc, #264]	@ (8004228 <TIM_Base_SetConfig+0x134>)
 8004120:	4293      	cmp	r3, r2
 8004122:	d007      	beq.n	8004134 <TIM_Base_SetConfig+0x40>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	4a41      	ldr	r2, [pc, #260]	@ (800422c <TIM_Base_SetConfig+0x138>)
 8004128:	4293      	cmp	r3, r2
 800412a:	d003      	beq.n	8004134 <TIM_Base_SetConfig+0x40>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	4a40      	ldr	r2, [pc, #256]	@ (8004230 <TIM_Base_SetConfig+0x13c>)
 8004130:	4293      	cmp	r3, r2
 8004132:	d108      	bne.n	8004146 <TIM_Base_SetConfig+0x52>
 8004134:	68fb      	ldr	r3, [r7, #12]
 8004136:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800413a:	60fb      	str	r3, [r7, #12]
 800413c:	683b      	ldr	r3, [r7, #0]
 800413e:	685b      	ldr	r3, [r3, #4]
 8004140:	68fa      	ldr	r2, [r7, #12]
 8004142:	4313      	orrs	r3, r2
 8004144:	60fb      	str	r3, [r7, #12]
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	4a35      	ldr	r2, [pc, #212]	@ (8004220 <TIM_Base_SetConfig+0x12c>)
 800414a:	4293      	cmp	r3, r2
 800414c:	d02b      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004154:	d027      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	4a32      	ldr	r2, [pc, #200]	@ (8004224 <TIM_Base_SetConfig+0x130>)
 800415a:	4293      	cmp	r3, r2
 800415c:	d023      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4a31      	ldr	r2, [pc, #196]	@ (8004228 <TIM_Base_SetConfig+0x134>)
 8004162:	4293      	cmp	r3, r2
 8004164:	d01f      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	4a30      	ldr	r2, [pc, #192]	@ (800422c <TIM_Base_SetConfig+0x138>)
 800416a:	4293      	cmp	r3, r2
 800416c:	d01b      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	4a2f      	ldr	r2, [pc, #188]	@ (8004230 <TIM_Base_SetConfig+0x13c>)
 8004172:	4293      	cmp	r3, r2
 8004174:	d017      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	4a2e      	ldr	r2, [pc, #184]	@ (8004234 <TIM_Base_SetConfig+0x140>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d013      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	4a2d      	ldr	r2, [pc, #180]	@ (8004238 <TIM_Base_SetConfig+0x144>)
 8004182:	4293      	cmp	r3, r2
 8004184:	d00f      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	4a2c      	ldr	r2, [pc, #176]	@ (800423c <TIM_Base_SetConfig+0x148>)
 800418a:	4293      	cmp	r3, r2
 800418c:	d00b      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	4a2b      	ldr	r2, [pc, #172]	@ (8004240 <TIM_Base_SetConfig+0x14c>)
 8004192:	4293      	cmp	r3, r2
 8004194:	d007      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	4a2a      	ldr	r2, [pc, #168]	@ (8004244 <TIM_Base_SetConfig+0x150>)
 800419a:	4293      	cmp	r3, r2
 800419c:	d003      	beq.n	80041a6 <TIM_Base_SetConfig+0xb2>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	4a29      	ldr	r2, [pc, #164]	@ (8004248 <TIM_Base_SetConfig+0x154>)
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d108      	bne.n	80041b8 <TIM_Base_SetConfig+0xc4>
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80041ac:	60fb      	str	r3, [r7, #12]
 80041ae:	683b      	ldr	r3, [r7, #0]
 80041b0:	68db      	ldr	r3, [r3, #12]
 80041b2:	68fa      	ldr	r2, [r7, #12]
 80041b4:	4313      	orrs	r3, r2
 80041b6:	60fb      	str	r3, [r7, #12]
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80041be:	683b      	ldr	r3, [r7, #0]
 80041c0:	695b      	ldr	r3, [r3, #20]
 80041c2:	4313      	orrs	r3, r2
 80041c4:	60fb      	str	r3, [r7, #12]
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	68fa      	ldr	r2, [r7, #12]
 80041ca:	601a      	str	r2, [r3, #0]
 80041cc:	683b      	ldr	r3, [r7, #0]
 80041ce:	689a      	ldr	r2, [r3, #8]
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80041d4:	683b      	ldr	r3, [r7, #0]
 80041d6:	681a      	ldr	r2, [r3, #0]
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	629a      	str	r2, [r3, #40]	@ 0x28
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	4a10      	ldr	r2, [pc, #64]	@ (8004220 <TIM_Base_SetConfig+0x12c>)
 80041e0:	4293      	cmp	r3, r2
 80041e2:	d003      	beq.n	80041ec <TIM_Base_SetConfig+0xf8>
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	4a12      	ldr	r2, [pc, #72]	@ (8004230 <TIM_Base_SetConfig+0x13c>)
 80041e8:	4293      	cmp	r3, r2
 80041ea:	d103      	bne.n	80041f4 <TIM_Base_SetConfig+0x100>
 80041ec:	683b      	ldr	r3, [r7, #0]
 80041ee:	691a      	ldr	r2, [r3, #16]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	2201      	movs	r2, #1
 80041f8:	615a      	str	r2, [r3, #20]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	691b      	ldr	r3, [r3, #16]
 80041fe:	f003 0301 	and.w	r3, r3, #1
 8004202:	2b01      	cmp	r3, #1
 8004204:	d105      	bne.n	8004212 <TIM_Base_SetConfig+0x11e>
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	691b      	ldr	r3, [r3, #16]
 800420a:	f023 0201 	bic.w	r2, r3, #1
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	611a      	str	r2, [r3, #16]
 8004212:	bf00      	nop
 8004214:	3714      	adds	r7, #20
 8004216:	46bd      	mov	sp, r7
 8004218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800421c:	4770      	bx	lr
 800421e:	bf00      	nop
 8004220:	40010000 	.word	0x40010000
 8004224:	40000400 	.word	0x40000400
 8004228:	40000800 	.word	0x40000800
 800422c:	40000c00 	.word	0x40000c00
 8004230:	40010400 	.word	0x40010400
 8004234:	40014000 	.word	0x40014000
 8004238:	40014400 	.word	0x40014400
 800423c:	40014800 	.word	0x40014800
 8004240:	40001800 	.word	0x40001800
 8004244:	40001c00 	.word	0x40001c00
 8004248:	40002000 	.word	0x40002000

0800424c <TIM_OC1_SetConfig>:
 800424c:	b480      	push	{r7}
 800424e:	b087      	sub	sp, #28
 8004250:	af00      	add	r7, sp, #0
 8004252:	6078      	str	r0, [r7, #4]
 8004254:	6039      	str	r1, [r7, #0]
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	6a1b      	ldr	r3, [r3, #32]
 800425a:	617b      	str	r3, [r7, #20]
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	6a1b      	ldr	r3, [r3, #32]
 8004260:	f023 0201 	bic.w	r2, r3, #1
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	621a      	str	r2, [r3, #32]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	685b      	ldr	r3, [r3, #4]
 800426c:	613b      	str	r3, [r7, #16]
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	699b      	ldr	r3, [r3, #24]
 8004272:	60fb      	str	r3, [r7, #12]
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800427a:	60fb      	str	r3, [r7, #12]
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	f023 0303 	bic.w	r3, r3, #3
 8004282:	60fb      	str	r3, [r7, #12]
 8004284:	683b      	ldr	r3, [r7, #0]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	68fa      	ldr	r2, [r7, #12]
 800428a:	4313      	orrs	r3, r2
 800428c:	60fb      	str	r3, [r7, #12]
 800428e:	697b      	ldr	r3, [r7, #20]
 8004290:	f023 0302 	bic.w	r3, r3, #2
 8004294:	617b      	str	r3, [r7, #20]
 8004296:	683b      	ldr	r3, [r7, #0]
 8004298:	689b      	ldr	r3, [r3, #8]
 800429a:	697a      	ldr	r2, [r7, #20]
 800429c:	4313      	orrs	r3, r2
 800429e:	617b      	str	r3, [r7, #20]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	4a20      	ldr	r2, [pc, #128]	@ (8004324 <TIM_OC1_SetConfig+0xd8>)
 80042a4:	4293      	cmp	r3, r2
 80042a6:	d003      	beq.n	80042b0 <TIM_OC1_SetConfig+0x64>
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	4a1f      	ldr	r2, [pc, #124]	@ (8004328 <TIM_OC1_SetConfig+0xdc>)
 80042ac:	4293      	cmp	r3, r2
 80042ae:	d10c      	bne.n	80042ca <TIM_OC1_SetConfig+0x7e>
 80042b0:	697b      	ldr	r3, [r7, #20]
 80042b2:	f023 0308 	bic.w	r3, r3, #8
 80042b6:	617b      	str	r3, [r7, #20]
 80042b8:	683b      	ldr	r3, [r7, #0]
 80042ba:	68db      	ldr	r3, [r3, #12]
 80042bc:	697a      	ldr	r2, [r7, #20]
 80042be:	4313      	orrs	r3, r2
 80042c0:	617b      	str	r3, [r7, #20]
 80042c2:	697b      	ldr	r3, [r7, #20]
 80042c4:	f023 0304 	bic.w	r3, r3, #4
 80042c8:	617b      	str	r3, [r7, #20]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	4a15      	ldr	r2, [pc, #84]	@ (8004324 <TIM_OC1_SetConfig+0xd8>)
 80042ce:	4293      	cmp	r3, r2
 80042d0:	d003      	beq.n	80042da <TIM_OC1_SetConfig+0x8e>
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	4a14      	ldr	r2, [pc, #80]	@ (8004328 <TIM_OC1_SetConfig+0xdc>)
 80042d6:	4293      	cmp	r3, r2
 80042d8:	d111      	bne.n	80042fe <TIM_OC1_SetConfig+0xb2>
 80042da:	693b      	ldr	r3, [r7, #16]
 80042dc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80042e0:	613b      	str	r3, [r7, #16]
 80042e2:	693b      	ldr	r3, [r7, #16]
 80042e4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80042e8:	613b      	str	r3, [r7, #16]
 80042ea:	683b      	ldr	r3, [r7, #0]
 80042ec:	695b      	ldr	r3, [r3, #20]
 80042ee:	693a      	ldr	r2, [r7, #16]
 80042f0:	4313      	orrs	r3, r2
 80042f2:	613b      	str	r3, [r7, #16]
 80042f4:	683b      	ldr	r3, [r7, #0]
 80042f6:	699b      	ldr	r3, [r3, #24]
 80042f8:	693a      	ldr	r2, [r7, #16]
 80042fa:	4313      	orrs	r3, r2
 80042fc:	613b      	str	r3, [r7, #16]
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	693a      	ldr	r2, [r7, #16]
 8004302:	605a      	str	r2, [r3, #4]
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	68fa      	ldr	r2, [r7, #12]
 8004308:	619a      	str	r2, [r3, #24]
 800430a:	683b      	ldr	r3, [r7, #0]
 800430c:	685a      	ldr	r2, [r3, #4]
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	635a      	str	r2, [r3, #52]	@ 0x34
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	697a      	ldr	r2, [r7, #20]
 8004316:	621a      	str	r2, [r3, #32]
 8004318:	bf00      	nop
 800431a:	371c      	adds	r7, #28
 800431c:	46bd      	mov	sp, r7
 800431e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004322:	4770      	bx	lr
 8004324:	40010000 	.word	0x40010000
 8004328:	40010400 	.word	0x40010400

0800432c <TIM_OC2_SetConfig>:
 800432c:	b480      	push	{r7}
 800432e:	b087      	sub	sp, #28
 8004330:	af00      	add	r7, sp, #0
 8004332:	6078      	str	r0, [r7, #4]
 8004334:	6039      	str	r1, [r7, #0]
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	6a1b      	ldr	r3, [r3, #32]
 800433a:	617b      	str	r3, [r7, #20]
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	6a1b      	ldr	r3, [r3, #32]
 8004340:	f023 0210 	bic.w	r2, r3, #16
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	621a      	str	r2, [r3, #32]
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	685b      	ldr	r3, [r3, #4]
 800434c:	613b      	str	r3, [r7, #16]
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	699b      	ldr	r3, [r3, #24]
 8004352:	60fb      	str	r3, [r7, #12]
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800435a:	60fb      	str	r3, [r7, #12]
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004362:	60fb      	str	r3, [r7, #12]
 8004364:	683b      	ldr	r3, [r7, #0]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	021b      	lsls	r3, r3, #8
 800436a:	68fa      	ldr	r2, [r7, #12]
 800436c:	4313      	orrs	r3, r2
 800436e:	60fb      	str	r3, [r7, #12]
 8004370:	697b      	ldr	r3, [r7, #20]
 8004372:	f023 0320 	bic.w	r3, r3, #32
 8004376:	617b      	str	r3, [r7, #20]
 8004378:	683b      	ldr	r3, [r7, #0]
 800437a:	689b      	ldr	r3, [r3, #8]
 800437c:	011b      	lsls	r3, r3, #4
 800437e:	697a      	ldr	r2, [r7, #20]
 8004380:	4313      	orrs	r3, r2
 8004382:	617b      	str	r3, [r7, #20]
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	4a22      	ldr	r2, [pc, #136]	@ (8004410 <TIM_OC2_SetConfig+0xe4>)
 8004388:	4293      	cmp	r3, r2
 800438a:	d003      	beq.n	8004394 <TIM_OC2_SetConfig+0x68>
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	4a21      	ldr	r2, [pc, #132]	@ (8004414 <TIM_OC2_SetConfig+0xe8>)
 8004390:	4293      	cmp	r3, r2
 8004392:	d10d      	bne.n	80043b0 <TIM_OC2_SetConfig+0x84>
 8004394:	697b      	ldr	r3, [r7, #20]
 8004396:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800439a:	617b      	str	r3, [r7, #20]
 800439c:	683b      	ldr	r3, [r7, #0]
 800439e:	68db      	ldr	r3, [r3, #12]
 80043a0:	011b      	lsls	r3, r3, #4
 80043a2:	697a      	ldr	r2, [r7, #20]
 80043a4:	4313      	orrs	r3, r2
 80043a6:	617b      	str	r3, [r7, #20]
 80043a8:	697b      	ldr	r3, [r7, #20]
 80043aa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80043ae:	617b      	str	r3, [r7, #20]
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	4a17      	ldr	r2, [pc, #92]	@ (8004410 <TIM_OC2_SetConfig+0xe4>)
 80043b4:	4293      	cmp	r3, r2
 80043b6:	d003      	beq.n	80043c0 <TIM_OC2_SetConfig+0x94>
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	4a16      	ldr	r2, [pc, #88]	@ (8004414 <TIM_OC2_SetConfig+0xe8>)
 80043bc:	4293      	cmp	r3, r2
 80043be:	d113      	bne.n	80043e8 <TIM_OC2_SetConfig+0xbc>
 80043c0:	693b      	ldr	r3, [r7, #16]
 80043c2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80043c6:	613b      	str	r3, [r7, #16]
 80043c8:	693b      	ldr	r3, [r7, #16]
 80043ca:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80043ce:	613b      	str	r3, [r7, #16]
 80043d0:	683b      	ldr	r3, [r7, #0]
 80043d2:	695b      	ldr	r3, [r3, #20]
 80043d4:	009b      	lsls	r3, r3, #2
 80043d6:	693a      	ldr	r2, [r7, #16]
 80043d8:	4313      	orrs	r3, r2
 80043da:	613b      	str	r3, [r7, #16]
 80043dc:	683b      	ldr	r3, [r7, #0]
 80043de:	699b      	ldr	r3, [r3, #24]
 80043e0:	009b      	lsls	r3, r3, #2
 80043e2:	693a      	ldr	r2, [r7, #16]
 80043e4:	4313      	orrs	r3, r2
 80043e6:	613b      	str	r3, [r7, #16]
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	693a      	ldr	r2, [r7, #16]
 80043ec:	605a      	str	r2, [r3, #4]
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	68fa      	ldr	r2, [r7, #12]
 80043f2:	619a      	str	r2, [r3, #24]
 80043f4:	683b      	ldr	r3, [r7, #0]
 80043f6:	685a      	ldr	r2, [r3, #4]
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	639a      	str	r2, [r3, #56]	@ 0x38
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	697a      	ldr	r2, [r7, #20]
 8004400:	621a      	str	r2, [r3, #32]
 8004402:	bf00      	nop
 8004404:	371c      	adds	r7, #28
 8004406:	46bd      	mov	sp, r7
 8004408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440c:	4770      	bx	lr
 800440e:	bf00      	nop
 8004410:	40010000 	.word	0x40010000
 8004414:	40010400 	.word	0x40010400

08004418 <TIM_OC3_SetConfig>:
 8004418:	b480      	push	{r7}
 800441a:	b087      	sub	sp, #28
 800441c:	af00      	add	r7, sp, #0
 800441e:	6078      	str	r0, [r7, #4]
 8004420:	6039      	str	r1, [r7, #0]
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	6a1b      	ldr	r3, [r3, #32]
 8004426:	617b      	str	r3, [r7, #20]
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	6a1b      	ldr	r3, [r3, #32]
 800442c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	621a      	str	r2, [r3, #32]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	685b      	ldr	r3, [r3, #4]
 8004438:	613b      	str	r3, [r7, #16]
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	69db      	ldr	r3, [r3, #28]
 800443e:	60fb      	str	r3, [r7, #12]
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004446:	60fb      	str	r3, [r7, #12]
 8004448:	68fb      	ldr	r3, [r7, #12]
 800444a:	f023 0303 	bic.w	r3, r3, #3
 800444e:	60fb      	str	r3, [r7, #12]
 8004450:	683b      	ldr	r3, [r7, #0]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	68fa      	ldr	r2, [r7, #12]
 8004456:	4313      	orrs	r3, r2
 8004458:	60fb      	str	r3, [r7, #12]
 800445a:	697b      	ldr	r3, [r7, #20]
 800445c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004460:	617b      	str	r3, [r7, #20]
 8004462:	683b      	ldr	r3, [r7, #0]
 8004464:	689b      	ldr	r3, [r3, #8]
 8004466:	021b      	lsls	r3, r3, #8
 8004468:	697a      	ldr	r2, [r7, #20]
 800446a:	4313      	orrs	r3, r2
 800446c:	617b      	str	r3, [r7, #20]
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	4a21      	ldr	r2, [pc, #132]	@ (80044f8 <TIM_OC3_SetConfig+0xe0>)
 8004472:	4293      	cmp	r3, r2
 8004474:	d003      	beq.n	800447e <TIM_OC3_SetConfig+0x66>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	4a20      	ldr	r2, [pc, #128]	@ (80044fc <TIM_OC3_SetConfig+0xe4>)
 800447a:	4293      	cmp	r3, r2
 800447c:	d10d      	bne.n	800449a <TIM_OC3_SetConfig+0x82>
 800447e:	697b      	ldr	r3, [r7, #20]
 8004480:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004484:	617b      	str	r3, [r7, #20]
 8004486:	683b      	ldr	r3, [r7, #0]
 8004488:	68db      	ldr	r3, [r3, #12]
 800448a:	021b      	lsls	r3, r3, #8
 800448c:	697a      	ldr	r2, [r7, #20]
 800448e:	4313      	orrs	r3, r2
 8004490:	617b      	str	r3, [r7, #20]
 8004492:	697b      	ldr	r3, [r7, #20]
 8004494:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004498:	617b      	str	r3, [r7, #20]
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	4a16      	ldr	r2, [pc, #88]	@ (80044f8 <TIM_OC3_SetConfig+0xe0>)
 800449e:	4293      	cmp	r3, r2
 80044a0:	d003      	beq.n	80044aa <TIM_OC3_SetConfig+0x92>
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	4a15      	ldr	r2, [pc, #84]	@ (80044fc <TIM_OC3_SetConfig+0xe4>)
 80044a6:	4293      	cmp	r3, r2
 80044a8:	d113      	bne.n	80044d2 <TIM_OC3_SetConfig+0xba>
 80044aa:	693b      	ldr	r3, [r7, #16]
 80044ac:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80044b0:	613b      	str	r3, [r7, #16]
 80044b2:	693b      	ldr	r3, [r7, #16]
 80044b4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80044b8:	613b      	str	r3, [r7, #16]
 80044ba:	683b      	ldr	r3, [r7, #0]
 80044bc:	695b      	ldr	r3, [r3, #20]
 80044be:	011b      	lsls	r3, r3, #4
 80044c0:	693a      	ldr	r2, [r7, #16]
 80044c2:	4313      	orrs	r3, r2
 80044c4:	613b      	str	r3, [r7, #16]
 80044c6:	683b      	ldr	r3, [r7, #0]
 80044c8:	699b      	ldr	r3, [r3, #24]
 80044ca:	011b      	lsls	r3, r3, #4
 80044cc:	693a      	ldr	r2, [r7, #16]
 80044ce:	4313      	orrs	r3, r2
 80044d0:	613b      	str	r3, [r7, #16]
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	693a      	ldr	r2, [r7, #16]
 80044d6:	605a      	str	r2, [r3, #4]
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	68fa      	ldr	r2, [r7, #12]
 80044dc:	61da      	str	r2, [r3, #28]
 80044de:	683b      	ldr	r3, [r7, #0]
 80044e0:	685a      	ldr	r2, [r3, #4]
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	697a      	ldr	r2, [r7, #20]
 80044ea:	621a      	str	r2, [r3, #32]
 80044ec:	bf00      	nop
 80044ee:	371c      	adds	r7, #28
 80044f0:	46bd      	mov	sp, r7
 80044f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044f6:	4770      	bx	lr
 80044f8:	40010000 	.word	0x40010000
 80044fc:	40010400 	.word	0x40010400

08004500 <TIM_OC4_SetConfig>:
 8004500:	b480      	push	{r7}
 8004502:	b087      	sub	sp, #28
 8004504:	af00      	add	r7, sp, #0
 8004506:	6078      	str	r0, [r7, #4]
 8004508:	6039      	str	r1, [r7, #0]
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	6a1b      	ldr	r3, [r3, #32]
 800450e:	613b      	str	r3, [r7, #16]
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	6a1b      	ldr	r3, [r3, #32]
 8004514:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	621a      	str	r2, [r3, #32]
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	685b      	ldr	r3, [r3, #4]
 8004520:	617b      	str	r3, [r7, #20]
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	69db      	ldr	r3, [r3, #28]
 8004526:	60fb      	str	r3, [r7, #12]
 8004528:	68fb      	ldr	r3, [r7, #12]
 800452a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800452e:	60fb      	str	r3, [r7, #12]
 8004530:	68fb      	ldr	r3, [r7, #12]
 8004532:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004536:	60fb      	str	r3, [r7, #12]
 8004538:	683b      	ldr	r3, [r7, #0]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	021b      	lsls	r3, r3, #8
 800453e:	68fa      	ldr	r2, [r7, #12]
 8004540:	4313      	orrs	r3, r2
 8004542:	60fb      	str	r3, [r7, #12]
 8004544:	693b      	ldr	r3, [r7, #16]
 8004546:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800454a:	613b      	str	r3, [r7, #16]
 800454c:	683b      	ldr	r3, [r7, #0]
 800454e:	689b      	ldr	r3, [r3, #8]
 8004550:	031b      	lsls	r3, r3, #12
 8004552:	693a      	ldr	r2, [r7, #16]
 8004554:	4313      	orrs	r3, r2
 8004556:	613b      	str	r3, [r7, #16]
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	4a12      	ldr	r2, [pc, #72]	@ (80045a4 <TIM_OC4_SetConfig+0xa4>)
 800455c:	4293      	cmp	r3, r2
 800455e:	d003      	beq.n	8004568 <TIM_OC4_SetConfig+0x68>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	4a11      	ldr	r2, [pc, #68]	@ (80045a8 <TIM_OC4_SetConfig+0xa8>)
 8004564:	4293      	cmp	r3, r2
 8004566:	d109      	bne.n	800457c <TIM_OC4_SetConfig+0x7c>
 8004568:	697b      	ldr	r3, [r7, #20]
 800456a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800456e:	617b      	str	r3, [r7, #20]
 8004570:	683b      	ldr	r3, [r7, #0]
 8004572:	695b      	ldr	r3, [r3, #20]
 8004574:	019b      	lsls	r3, r3, #6
 8004576:	697a      	ldr	r2, [r7, #20]
 8004578:	4313      	orrs	r3, r2
 800457a:	617b      	str	r3, [r7, #20]
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	697a      	ldr	r2, [r7, #20]
 8004580:	605a      	str	r2, [r3, #4]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	68fa      	ldr	r2, [r7, #12]
 8004586:	61da      	str	r2, [r3, #28]
 8004588:	683b      	ldr	r3, [r7, #0]
 800458a:	685a      	ldr	r2, [r3, #4]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	693a      	ldr	r2, [r7, #16]
 8004594:	621a      	str	r2, [r3, #32]
 8004596:	bf00      	nop
 8004598:	371c      	adds	r7, #28
 800459a:	46bd      	mov	sp, r7
 800459c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045a0:	4770      	bx	lr
 80045a2:	bf00      	nop
 80045a4:	40010000 	.word	0x40010000
 80045a8:	40010400 	.word	0x40010400

080045ac <TIM_CCxChannelCmd>:
 80045ac:	b480      	push	{r7}
 80045ae:	b087      	sub	sp, #28
 80045b0:	af00      	add	r7, sp, #0
 80045b2:	60f8      	str	r0, [r7, #12]
 80045b4:	60b9      	str	r1, [r7, #8]
 80045b6:	607a      	str	r2, [r7, #4]
 80045b8:	68bb      	ldr	r3, [r7, #8]
 80045ba:	f003 031f 	and.w	r3, r3, #31
 80045be:	2201      	movs	r2, #1
 80045c0:	fa02 f303 	lsl.w	r3, r2, r3
 80045c4:	617b      	str	r3, [r7, #20]
 80045c6:	68fb      	ldr	r3, [r7, #12]
 80045c8:	6a1a      	ldr	r2, [r3, #32]
 80045ca:	697b      	ldr	r3, [r7, #20]
 80045cc:	43db      	mvns	r3, r3
 80045ce:	401a      	ands	r2, r3
 80045d0:	68fb      	ldr	r3, [r7, #12]
 80045d2:	621a      	str	r2, [r3, #32]
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	6a1a      	ldr	r2, [r3, #32]
 80045d8:	68bb      	ldr	r3, [r7, #8]
 80045da:	f003 031f 	and.w	r3, r3, #31
 80045de:	6879      	ldr	r1, [r7, #4]
 80045e0:	fa01 f303 	lsl.w	r3, r1, r3
 80045e4:	431a      	orrs	r2, r3
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	621a      	str	r2, [r3, #32]
 80045ea:	bf00      	nop
 80045ec:	371c      	adds	r7, #28
 80045ee:	46bd      	mov	sp, r7
 80045f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045f4:	4770      	bx	lr
	...

080045f8 <HAL_TIMEx_MasterConfigSynchronization>:
 80045f8:	b480      	push	{r7}
 80045fa:	b085      	sub	sp, #20
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	6078      	str	r0, [r7, #4]
 8004600:	6039      	str	r1, [r7, #0]
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004608:	2b01      	cmp	r3, #1
 800460a:	d101      	bne.n	8004610 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800460c:	2302      	movs	r3, #2
 800460e:	e05a      	b.n	80046c6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	2201      	movs	r2, #1
 8004614:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	2202      	movs	r2, #2
 800461c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	685b      	ldr	r3, [r3, #4]
 8004626:	60fb      	str	r3, [r7, #12]
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	689b      	ldr	r3, [r3, #8]
 800462e:	60bb      	str	r3, [r7, #8]
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004636:	60fb      	str	r3, [r7, #12]
 8004638:	683b      	ldr	r3, [r7, #0]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	68fa      	ldr	r2, [r7, #12]
 800463e:	4313      	orrs	r3, r2
 8004640:	60fb      	str	r3, [r7, #12]
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	68fa      	ldr	r2, [r7, #12]
 8004648:	605a      	str	r2, [r3, #4]
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	4a21      	ldr	r2, [pc, #132]	@ (80046d4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004650:	4293      	cmp	r3, r2
 8004652:	d022      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800465c:	d01d      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	4a1d      	ldr	r2, [pc, #116]	@ (80046d8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004664:	4293      	cmp	r3, r2
 8004666:	d018      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	4a1b      	ldr	r2, [pc, #108]	@ (80046dc <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d013      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	4a1a      	ldr	r2, [pc, #104]	@ (80046e0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8004678:	4293      	cmp	r3, r2
 800467a:	d00e      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	4a18      	ldr	r2, [pc, #96]	@ (80046e4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8004682:	4293      	cmp	r3, r2
 8004684:	d009      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	4a17      	ldr	r2, [pc, #92]	@ (80046e8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800468c:	4293      	cmp	r3, r2
 800468e:	d004      	beq.n	800469a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	4a15      	ldr	r2, [pc, #84]	@ (80046ec <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8004696:	4293      	cmp	r3, r2
 8004698:	d10c      	bne.n	80046b4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800469a:	68bb      	ldr	r3, [r7, #8]
 800469c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80046a0:	60bb      	str	r3, [r7, #8]
 80046a2:	683b      	ldr	r3, [r7, #0]
 80046a4:	685b      	ldr	r3, [r3, #4]
 80046a6:	68ba      	ldr	r2, [r7, #8]
 80046a8:	4313      	orrs	r3, r2
 80046aa:	60bb      	str	r3, [r7, #8]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	68ba      	ldr	r2, [r7, #8]
 80046b2:	609a      	str	r2, [r3, #8]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	2201      	movs	r2, #1
 80046b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	2200      	movs	r2, #0
 80046c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046c4:	2300      	movs	r3, #0
 80046c6:	4618      	mov	r0, r3
 80046c8:	3714      	adds	r7, #20
 80046ca:	46bd      	mov	sp, r7
 80046cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046d0:	4770      	bx	lr
 80046d2:	bf00      	nop
 80046d4:	40010000 	.word	0x40010000
 80046d8:	40000400 	.word	0x40000400
 80046dc:	40000800 	.word	0x40000800
 80046e0:	40000c00 	.word	0x40000c00
 80046e4:	40010400 	.word	0x40010400
 80046e8:	40014000 	.word	0x40014000
 80046ec:	40001800 	.word	0x40001800

080046f0 <HAL_TIMEx_CommutCallback>:
 80046f0:	b480      	push	{r7}
 80046f2:	b083      	sub	sp, #12
 80046f4:	af00      	add	r7, sp, #0
 80046f6:	6078      	str	r0, [r7, #4]
 80046f8:	bf00      	nop
 80046fa:	370c      	adds	r7, #12
 80046fc:	46bd      	mov	sp, r7
 80046fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004702:	4770      	bx	lr

08004704 <HAL_TIMEx_BreakCallback>:
 8004704:	b480      	push	{r7}
 8004706:	b083      	sub	sp, #12
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	bf00      	nop
 800470e:	370c      	adds	r7, #12
 8004710:	46bd      	mov	sp, r7
 8004712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004716:	4770      	bx	lr

08004718 <HAL_UART_Init>:
 8004718:	b580      	push	{r7, lr}
 800471a:	b082      	sub	sp, #8
 800471c:	af00      	add	r7, sp, #0
 800471e:	6078      	str	r0, [r7, #4]
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	2b00      	cmp	r3, #0
 8004724:	d101      	bne.n	800472a <HAL_UART_Init+0x12>
 8004726:	2301      	movs	r3, #1
 8004728:	e042      	b.n	80047b0 <HAL_UART_Init+0x98>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004730:	b2db      	uxtb	r3, r3
 8004732:	2b00      	cmp	r3, #0
 8004734:	d106      	bne.n	8004744 <HAL_UART_Init+0x2c>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	2200      	movs	r2, #0
 800473a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800473e:	6878      	ldr	r0, [r7, #4]
 8004740:	f7fc fdca 	bl	80012d8 <HAL_UART_MspInit>
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	2224      	movs	r2, #36	@ 0x24
 8004748:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	68da      	ldr	r2, [r3, #12]
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800475a:	60da      	str	r2, [r3, #12]
 800475c:	6878      	ldr	r0, [r7, #4]
 800475e:	f000 f973 	bl	8004a48 <UART_SetConfig>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	691a      	ldr	r2, [r3, #16]
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8004770:	611a      	str	r2, [r3, #16]
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	695a      	ldr	r2, [r3, #20]
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8004780:	615a      	str	r2, [r3, #20]
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	68da      	ldr	r2, [r3, #12]
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004790:	60da      	str	r2, [r3, #12]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	2200      	movs	r2, #0
 8004796:	645a      	str	r2, [r3, #68]	@ 0x44
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	2220      	movs	r2, #32
 800479c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	2220      	movs	r2, #32
 80047a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	2200      	movs	r2, #0
 80047ac:	635a      	str	r2, [r3, #52]	@ 0x34
 80047ae:	2300      	movs	r3, #0
 80047b0:	4618      	mov	r0, r3
 80047b2:	3708      	adds	r7, #8
 80047b4:	46bd      	mov	sp, r7
 80047b6:	bd80      	pop	{r7, pc}

080047b8 <HAL_UART_Transmit>:
 80047b8:	b580      	push	{r7, lr}
 80047ba:	b08a      	sub	sp, #40	@ 0x28
 80047bc:	af02      	add	r7, sp, #8
 80047be:	60f8      	str	r0, [r7, #12]
 80047c0:	60b9      	str	r1, [r7, #8]
 80047c2:	603b      	str	r3, [r7, #0]
 80047c4:	4613      	mov	r3, r2
 80047c6:	80fb      	strh	r3, [r7, #6]
 80047c8:	2300      	movs	r3, #0
 80047ca:	617b      	str	r3, [r7, #20]
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80047d2:	b2db      	uxtb	r3, r3
 80047d4:	2b20      	cmp	r3, #32
 80047d6:	d175      	bne.n	80048c4 <HAL_UART_Transmit+0x10c>
 80047d8:	68bb      	ldr	r3, [r7, #8]
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d002      	beq.n	80047e4 <HAL_UART_Transmit+0x2c>
 80047de:	88fb      	ldrh	r3, [r7, #6]
 80047e0:	2b00      	cmp	r3, #0
 80047e2:	d101      	bne.n	80047e8 <HAL_UART_Transmit+0x30>
 80047e4:	2301      	movs	r3, #1
 80047e6:	e06e      	b.n	80048c6 <HAL_UART_Transmit+0x10e>
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	2200      	movs	r2, #0
 80047ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	2221      	movs	r2, #33	@ 0x21
 80047f2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80047f6:	f7fc fed3 	bl	80015a0 <HAL_GetTick>
 80047fa:	6178      	str	r0, [r7, #20]
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	88fa      	ldrh	r2, [r7, #6]
 8004800:	849a      	strh	r2, [r3, #36]	@ 0x24
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	88fa      	ldrh	r2, [r7, #6]
 8004806:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	689b      	ldr	r3, [r3, #8]
 800480c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004810:	d108      	bne.n	8004824 <HAL_UART_Transmit+0x6c>
 8004812:	68fb      	ldr	r3, [r7, #12]
 8004814:	691b      	ldr	r3, [r3, #16]
 8004816:	2b00      	cmp	r3, #0
 8004818:	d104      	bne.n	8004824 <HAL_UART_Transmit+0x6c>
 800481a:	2300      	movs	r3, #0
 800481c:	61fb      	str	r3, [r7, #28]
 800481e:	68bb      	ldr	r3, [r7, #8]
 8004820:	61bb      	str	r3, [r7, #24]
 8004822:	e003      	b.n	800482c <HAL_UART_Transmit+0x74>
 8004824:	68bb      	ldr	r3, [r7, #8]
 8004826:	61fb      	str	r3, [r7, #28]
 8004828:	2300      	movs	r3, #0
 800482a:	61bb      	str	r3, [r7, #24]
 800482c:	e02e      	b.n	800488c <HAL_UART_Transmit+0xd4>
 800482e:	683b      	ldr	r3, [r7, #0]
 8004830:	9300      	str	r3, [sp, #0]
 8004832:	697b      	ldr	r3, [r7, #20]
 8004834:	2200      	movs	r2, #0
 8004836:	2180      	movs	r1, #128	@ 0x80
 8004838:	68f8      	ldr	r0, [r7, #12]
 800483a:	f000 f848 	bl	80048ce <UART_WaitOnFlagUntilTimeout>
 800483e:	4603      	mov	r3, r0
 8004840:	2b00      	cmp	r3, #0
 8004842:	d005      	beq.n	8004850 <HAL_UART_Transmit+0x98>
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	2220      	movs	r2, #32
 8004848:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800484c:	2303      	movs	r3, #3
 800484e:	e03a      	b.n	80048c6 <HAL_UART_Transmit+0x10e>
 8004850:	69fb      	ldr	r3, [r7, #28]
 8004852:	2b00      	cmp	r3, #0
 8004854:	d10b      	bne.n	800486e <HAL_UART_Transmit+0xb6>
 8004856:	69bb      	ldr	r3, [r7, #24]
 8004858:	881b      	ldrh	r3, [r3, #0]
 800485a:	461a      	mov	r2, r3
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004864:	605a      	str	r2, [r3, #4]
 8004866:	69bb      	ldr	r3, [r7, #24]
 8004868:	3302      	adds	r3, #2
 800486a:	61bb      	str	r3, [r7, #24]
 800486c:	e007      	b.n	800487e <HAL_UART_Transmit+0xc6>
 800486e:	69fb      	ldr	r3, [r7, #28]
 8004870:	781a      	ldrb	r2, [r3, #0]
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	605a      	str	r2, [r3, #4]
 8004878:	69fb      	ldr	r3, [r7, #28]
 800487a:	3301      	adds	r3, #1
 800487c:	61fb      	str	r3, [r7, #28]
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004882:	b29b      	uxth	r3, r3
 8004884:	3b01      	subs	r3, #1
 8004886:	b29a      	uxth	r2, r3
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800488c:	68fb      	ldr	r3, [r7, #12]
 800488e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004890:	b29b      	uxth	r3, r3
 8004892:	2b00      	cmp	r3, #0
 8004894:	d1cb      	bne.n	800482e <HAL_UART_Transmit+0x76>
 8004896:	683b      	ldr	r3, [r7, #0]
 8004898:	9300      	str	r3, [sp, #0]
 800489a:	697b      	ldr	r3, [r7, #20]
 800489c:	2200      	movs	r2, #0
 800489e:	2140      	movs	r1, #64	@ 0x40
 80048a0:	68f8      	ldr	r0, [r7, #12]
 80048a2:	f000 f814 	bl	80048ce <UART_WaitOnFlagUntilTimeout>
 80048a6:	4603      	mov	r3, r0
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	d005      	beq.n	80048b8 <HAL_UART_Transmit+0x100>
 80048ac:	68fb      	ldr	r3, [r7, #12]
 80048ae:	2220      	movs	r2, #32
 80048b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80048b4:	2303      	movs	r3, #3
 80048b6:	e006      	b.n	80048c6 <HAL_UART_Transmit+0x10e>
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	2220      	movs	r2, #32
 80048bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80048c0:	2300      	movs	r3, #0
 80048c2:	e000      	b.n	80048c6 <HAL_UART_Transmit+0x10e>
 80048c4:	2302      	movs	r3, #2
 80048c6:	4618      	mov	r0, r3
 80048c8:	3720      	adds	r7, #32
 80048ca:	46bd      	mov	sp, r7
 80048cc:	bd80      	pop	{r7, pc}

080048ce <UART_WaitOnFlagUntilTimeout>:
 80048ce:	b580      	push	{r7, lr}
 80048d0:	b086      	sub	sp, #24
 80048d2:	af00      	add	r7, sp, #0
 80048d4:	60f8      	str	r0, [r7, #12]
 80048d6:	60b9      	str	r1, [r7, #8]
 80048d8:	603b      	str	r3, [r7, #0]
 80048da:	4613      	mov	r3, r2
 80048dc:	71fb      	strb	r3, [r7, #7]
 80048de:	e03b      	b.n	8004958 <UART_WaitOnFlagUntilTimeout+0x8a>
 80048e0:	6a3b      	ldr	r3, [r7, #32]
 80048e2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80048e6:	d037      	beq.n	8004958 <UART_WaitOnFlagUntilTimeout+0x8a>
 80048e8:	f7fc fe5a 	bl	80015a0 <HAL_GetTick>
 80048ec:	4602      	mov	r2, r0
 80048ee:	683b      	ldr	r3, [r7, #0]
 80048f0:	1ad3      	subs	r3, r2, r3
 80048f2:	6a3a      	ldr	r2, [r7, #32]
 80048f4:	429a      	cmp	r2, r3
 80048f6:	d302      	bcc.n	80048fe <UART_WaitOnFlagUntilTimeout+0x30>
 80048f8:	6a3b      	ldr	r3, [r7, #32]
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d101      	bne.n	8004902 <UART_WaitOnFlagUntilTimeout+0x34>
 80048fe:	2303      	movs	r3, #3
 8004900:	e03a      	b.n	8004978 <UART_WaitOnFlagUntilTimeout+0xaa>
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	681b      	ldr	r3, [r3, #0]
 8004906:	68db      	ldr	r3, [r3, #12]
 8004908:	f003 0304 	and.w	r3, r3, #4
 800490c:	2b00      	cmp	r3, #0
 800490e:	d023      	beq.n	8004958 <UART_WaitOnFlagUntilTimeout+0x8a>
 8004910:	68bb      	ldr	r3, [r7, #8]
 8004912:	2b80      	cmp	r3, #128	@ 0x80
 8004914:	d020      	beq.n	8004958 <UART_WaitOnFlagUntilTimeout+0x8a>
 8004916:	68bb      	ldr	r3, [r7, #8]
 8004918:	2b40      	cmp	r3, #64	@ 0x40
 800491a:	d01d      	beq.n	8004958 <UART_WaitOnFlagUntilTimeout+0x8a>
 800491c:	68fb      	ldr	r3, [r7, #12]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	f003 0308 	and.w	r3, r3, #8
 8004926:	2b08      	cmp	r3, #8
 8004928:	d116      	bne.n	8004958 <UART_WaitOnFlagUntilTimeout+0x8a>
 800492a:	2300      	movs	r3, #0
 800492c:	617b      	str	r3, [r7, #20]
 800492e:	68fb      	ldr	r3, [r7, #12]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	617b      	str	r3, [r7, #20]
 8004936:	68fb      	ldr	r3, [r7, #12]
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	685b      	ldr	r3, [r3, #4]
 800493c:	617b      	str	r3, [r7, #20]
 800493e:	697b      	ldr	r3, [r7, #20]
 8004940:	68f8      	ldr	r0, [r7, #12]
 8004942:	f000 f81d 	bl	8004980 <UART_EndRxTransfer>
 8004946:	68fb      	ldr	r3, [r7, #12]
 8004948:	2208      	movs	r2, #8
 800494a:	645a      	str	r2, [r3, #68]	@ 0x44
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	2200      	movs	r2, #0
 8004950:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004954:	2301      	movs	r3, #1
 8004956:	e00f      	b.n	8004978 <UART_WaitOnFlagUntilTimeout+0xaa>
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	681a      	ldr	r2, [r3, #0]
 800495e:	68bb      	ldr	r3, [r7, #8]
 8004960:	4013      	ands	r3, r2
 8004962:	68ba      	ldr	r2, [r7, #8]
 8004964:	429a      	cmp	r2, r3
 8004966:	bf0c      	ite	eq
 8004968:	2301      	moveq	r3, #1
 800496a:	2300      	movne	r3, #0
 800496c:	b2db      	uxtb	r3, r3
 800496e:	461a      	mov	r2, r3
 8004970:	79fb      	ldrb	r3, [r7, #7]
 8004972:	429a      	cmp	r2, r3
 8004974:	d0b4      	beq.n	80048e0 <UART_WaitOnFlagUntilTimeout+0x12>
 8004976:	2300      	movs	r3, #0
 8004978:	4618      	mov	r0, r3
 800497a:	3718      	adds	r7, #24
 800497c:	46bd      	mov	sp, r7
 800497e:	bd80      	pop	{r7, pc}

08004980 <UART_EndRxTransfer>:
 8004980:	b480      	push	{r7}
 8004982:	b095      	sub	sp, #84	@ 0x54
 8004984:	af00      	add	r7, sp, #0
 8004986:	6078      	str	r0, [r7, #4]
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	330c      	adds	r3, #12
 800498e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004990:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004992:	e853 3f00 	ldrex	r3, [r3]
 8004996:	633b      	str	r3, [r7, #48]	@ 0x30
 8004998:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800499a:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800499e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	330c      	adds	r3, #12
 80049a6:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80049a8:	643a      	str	r2, [r7, #64]	@ 0x40
 80049aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80049ac:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80049ae:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80049b0:	e841 2300 	strex	r3, r2, [r1]
 80049b4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80049b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80049b8:	2b00      	cmp	r3, #0
 80049ba:	d1e5      	bne.n	8004988 <UART_EndRxTransfer+0x8>
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	3314      	adds	r3, #20
 80049c2:	623b      	str	r3, [r7, #32]
 80049c4:	6a3b      	ldr	r3, [r7, #32]
 80049c6:	e853 3f00 	ldrex	r3, [r3]
 80049ca:	61fb      	str	r3, [r7, #28]
 80049cc:	69fb      	ldr	r3, [r7, #28]
 80049ce:	f023 0301 	bic.w	r3, r3, #1
 80049d2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	3314      	adds	r3, #20
 80049da:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80049dc:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80049de:	62bb      	str	r3, [r7, #40]	@ 0x28
 80049e0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80049e2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80049e4:	e841 2300 	strex	r3, r2, [r1]
 80049e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80049ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	d1e5      	bne.n	80049bc <UART_EndRxTransfer+0x3c>
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80049f4:	2b01      	cmp	r3, #1
 80049f6:	d119      	bne.n	8004a2c <UART_EndRxTransfer+0xac>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	330c      	adds	r3, #12
 80049fe:	60fb      	str	r3, [r7, #12]
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	e853 3f00 	ldrex	r3, [r3]
 8004a06:	60bb      	str	r3, [r7, #8]
 8004a08:	68bb      	ldr	r3, [r7, #8]
 8004a0a:	f023 0310 	bic.w	r3, r3, #16
 8004a0e:	647b      	str	r3, [r7, #68]	@ 0x44
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	330c      	adds	r3, #12
 8004a16:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004a18:	61ba      	str	r2, [r7, #24]
 8004a1a:	617b      	str	r3, [r7, #20]
 8004a1c:	6979      	ldr	r1, [r7, #20]
 8004a1e:	69ba      	ldr	r2, [r7, #24]
 8004a20:	e841 2300 	strex	r3, r2, [r1]
 8004a24:	613b      	str	r3, [r7, #16]
 8004a26:	693b      	ldr	r3, [r7, #16]
 8004a28:	2b00      	cmp	r3, #0
 8004a2a:	d1e5      	bne.n	80049f8 <UART_EndRxTransfer+0x78>
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	2220      	movs	r2, #32
 8004a30:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	2200      	movs	r2, #0
 8004a38:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a3a:	bf00      	nop
 8004a3c:	3754      	adds	r7, #84	@ 0x54
 8004a3e:	46bd      	mov	sp, r7
 8004a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a44:	4770      	bx	lr
	...

08004a48 <UART_SetConfig>:
 8004a48:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004a4c:	b0c0      	sub	sp, #256	@ 0x100
 8004a4e:	af00      	add	r7, sp, #0
 8004a50:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8004a54:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	691b      	ldr	r3, [r3, #16]
 8004a5c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8004a60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a64:	68d9      	ldr	r1, [r3, #12]
 8004a66:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a6a:	681a      	ldr	r2, [r3, #0]
 8004a6c:	ea40 0301 	orr.w	r3, r0, r1
 8004a70:	6113      	str	r3, [r2, #16]
 8004a72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a76:	689a      	ldr	r2, [r3, #8]
 8004a78:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a7c:	691b      	ldr	r3, [r3, #16]
 8004a7e:	431a      	orrs	r2, r3
 8004a80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a84:	695b      	ldr	r3, [r3, #20]
 8004a86:	431a      	orrs	r2, r3
 8004a88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a8c:	69db      	ldr	r3, [r3, #28]
 8004a8e:	4313      	orrs	r3, r2
 8004a90:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8004a94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	68db      	ldr	r3, [r3, #12]
 8004a9c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8004aa0:	f021 010c 	bic.w	r1, r1, #12
 8004aa4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004aa8:	681a      	ldr	r2, [r3, #0]
 8004aaa:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8004aae:	430b      	orrs	r3, r1
 8004ab0:	60d3      	str	r3, [r2, #12]
 8004ab2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	695b      	ldr	r3, [r3, #20]
 8004aba:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8004abe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004ac2:	6999      	ldr	r1, [r3, #24]
 8004ac4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004ac8:	681a      	ldr	r2, [r3, #0]
 8004aca:	ea40 0301 	orr.w	r3, r0, r1
 8004ace:	6153      	str	r3, [r2, #20]
 8004ad0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004ad4:	681a      	ldr	r2, [r3, #0]
 8004ad6:	4b8f      	ldr	r3, [pc, #572]	@ (8004d14 <UART_SetConfig+0x2cc>)
 8004ad8:	429a      	cmp	r2, r3
 8004ada:	d005      	beq.n	8004ae8 <UART_SetConfig+0xa0>
 8004adc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004ae0:	681a      	ldr	r2, [r3, #0]
 8004ae2:	4b8d      	ldr	r3, [pc, #564]	@ (8004d18 <UART_SetConfig+0x2d0>)
 8004ae4:	429a      	cmp	r2, r3
 8004ae6:	d104      	bne.n	8004af2 <UART_SetConfig+0xaa>
 8004ae8:	f7fe f9f2 	bl	8002ed0 <HAL_RCC_GetPCLK2Freq>
 8004aec:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004af0:	e003      	b.n	8004afa <UART_SetConfig+0xb2>
 8004af2:	f7fe f9d9 	bl	8002ea8 <HAL_RCC_GetPCLK1Freq>
 8004af6:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004afa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004afe:	69db      	ldr	r3, [r3, #28]
 8004b00:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004b04:	f040 810c 	bne.w	8004d20 <UART_SetConfig+0x2d8>
 8004b08:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004b0c:	2200      	movs	r2, #0
 8004b0e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8004b12:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8004b16:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8004b1a:	4622      	mov	r2, r4
 8004b1c:	462b      	mov	r3, r5
 8004b1e:	1891      	adds	r1, r2, r2
 8004b20:	65b9      	str	r1, [r7, #88]	@ 0x58
 8004b22:	415b      	adcs	r3, r3
 8004b24:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004b26:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004b2a:	4621      	mov	r1, r4
 8004b2c:	eb12 0801 	adds.w	r8, r2, r1
 8004b30:	4629      	mov	r1, r5
 8004b32:	eb43 0901 	adc.w	r9, r3, r1
 8004b36:	f04f 0200 	mov.w	r2, #0
 8004b3a:	f04f 0300 	mov.w	r3, #0
 8004b3e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004b42:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004b46:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004b4a:	4690      	mov	r8, r2
 8004b4c:	4699      	mov	r9, r3
 8004b4e:	4623      	mov	r3, r4
 8004b50:	eb18 0303 	adds.w	r3, r8, r3
 8004b54:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8004b58:	462b      	mov	r3, r5
 8004b5a:	eb49 0303 	adc.w	r3, r9, r3
 8004b5e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004b62:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004b66:	685b      	ldr	r3, [r3, #4]
 8004b68:	2200      	movs	r2, #0
 8004b6a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004b6e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8004b72:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8004b76:	460b      	mov	r3, r1
 8004b78:	18db      	adds	r3, r3, r3
 8004b7a:	653b      	str	r3, [r7, #80]	@ 0x50
 8004b7c:	4613      	mov	r3, r2
 8004b7e:	eb42 0303 	adc.w	r3, r2, r3
 8004b82:	657b      	str	r3, [r7, #84]	@ 0x54
 8004b84:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8004b88:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8004b8c:	f7fb fb90 	bl	80002b0 <__aeabi_uldivmod>
 8004b90:	4602      	mov	r2, r0
 8004b92:	460b      	mov	r3, r1
 8004b94:	4b61      	ldr	r3, [pc, #388]	@ (8004d1c <UART_SetConfig+0x2d4>)
 8004b96:	fba3 2302 	umull	r2, r3, r3, r2
 8004b9a:	095b      	lsrs	r3, r3, #5
 8004b9c:	011c      	lsls	r4, r3, #4
 8004b9e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004ba2:	2200      	movs	r2, #0
 8004ba4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004ba8:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8004bac:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8004bb0:	4642      	mov	r2, r8
 8004bb2:	464b      	mov	r3, r9
 8004bb4:	1891      	adds	r1, r2, r2
 8004bb6:	64b9      	str	r1, [r7, #72]	@ 0x48
 8004bb8:	415b      	adcs	r3, r3
 8004bba:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004bbc:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004bc0:	4641      	mov	r1, r8
 8004bc2:	eb12 0a01 	adds.w	sl, r2, r1
 8004bc6:	4649      	mov	r1, r9
 8004bc8:	eb43 0b01 	adc.w	fp, r3, r1
 8004bcc:	f04f 0200 	mov.w	r2, #0
 8004bd0:	f04f 0300 	mov.w	r3, #0
 8004bd4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004bd8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004bdc:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004be0:	4692      	mov	sl, r2
 8004be2:	469b      	mov	fp, r3
 8004be4:	4643      	mov	r3, r8
 8004be6:	eb1a 0303 	adds.w	r3, sl, r3
 8004bea:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004bee:	464b      	mov	r3, r9
 8004bf0:	eb4b 0303 	adc.w	r3, fp, r3
 8004bf4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8004bf8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004bfc:	685b      	ldr	r3, [r3, #4]
 8004bfe:	2200      	movs	r2, #0
 8004c00:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004c04:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8004c08:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8004c0c:	460b      	mov	r3, r1
 8004c0e:	18db      	adds	r3, r3, r3
 8004c10:	643b      	str	r3, [r7, #64]	@ 0x40
 8004c12:	4613      	mov	r3, r2
 8004c14:	eb42 0303 	adc.w	r3, r2, r3
 8004c18:	647b      	str	r3, [r7, #68]	@ 0x44
 8004c1a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8004c1e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8004c22:	f7fb fb45 	bl	80002b0 <__aeabi_uldivmod>
 8004c26:	4602      	mov	r2, r0
 8004c28:	460b      	mov	r3, r1
 8004c2a:	4611      	mov	r1, r2
 8004c2c:	4b3b      	ldr	r3, [pc, #236]	@ (8004d1c <UART_SetConfig+0x2d4>)
 8004c2e:	fba3 2301 	umull	r2, r3, r3, r1
 8004c32:	095b      	lsrs	r3, r3, #5
 8004c34:	2264      	movs	r2, #100	@ 0x64
 8004c36:	fb02 f303 	mul.w	r3, r2, r3
 8004c3a:	1acb      	subs	r3, r1, r3
 8004c3c:	00db      	lsls	r3, r3, #3
 8004c3e:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8004c42:	4b36      	ldr	r3, [pc, #216]	@ (8004d1c <UART_SetConfig+0x2d4>)
 8004c44:	fba3 2302 	umull	r2, r3, r3, r2
 8004c48:	095b      	lsrs	r3, r3, #5
 8004c4a:	005b      	lsls	r3, r3, #1
 8004c4c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8004c50:	441c      	add	r4, r3
 8004c52:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004c56:	2200      	movs	r2, #0
 8004c58:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004c5c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8004c60:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8004c64:	4642      	mov	r2, r8
 8004c66:	464b      	mov	r3, r9
 8004c68:	1891      	adds	r1, r2, r2
 8004c6a:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004c6c:	415b      	adcs	r3, r3
 8004c6e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004c70:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004c74:	4641      	mov	r1, r8
 8004c76:	1851      	adds	r1, r2, r1
 8004c78:	6339      	str	r1, [r7, #48]	@ 0x30
 8004c7a:	4649      	mov	r1, r9
 8004c7c:	414b      	adcs	r3, r1
 8004c7e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004c80:	f04f 0200 	mov.w	r2, #0
 8004c84:	f04f 0300 	mov.w	r3, #0
 8004c88:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8004c8c:	4659      	mov	r1, fp
 8004c8e:	00cb      	lsls	r3, r1, #3
 8004c90:	4651      	mov	r1, sl
 8004c92:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004c96:	4651      	mov	r1, sl
 8004c98:	00ca      	lsls	r2, r1, #3
 8004c9a:	4610      	mov	r0, r2
 8004c9c:	4619      	mov	r1, r3
 8004c9e:	4603      	mov	r3, r0
 8004ca0:	4642      	mov	r2, r8
 8004ca2:	189b      	adds	r3, r3, r2
 8004ca4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004ca8:	464b      	mov	r3, r9
 8004caa:	460a      	mov	r2, r1
 8004cac:	eb42 0303 	adc.w	r3, r2, r3
 8004cb0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004cb4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004cb8:	685b      	ldr	r3, [r3, #4]
 8004cba:	2200      	movs	r2, #0
 8004cbc:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8004cc0:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8004cc4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8004cc8:	460b      	mov	r3, r1
 8004cca:	18db      	adds	r3, r3, r3
 8004ccc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004cce:	4613      	mov	r3, r2
 8004cd0:	eb42 0303 	adc.w	r3, r2, r3
 8004cd4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004cd6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004cda:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8004cde:	f7fb fae7 	bl	80002b0 <__aeabi_uldivmod>
 8004ce2:	4602      	mov	r2, r0
 8004ce4:	460b      	mov	r3, r1
 8004ce6:	4b0d      	ldr	r3, [pc, #52]	@ (8004d1c <UART_SetConfig+0x2d4>)
 8004ce8:	fba3 1302 	umull	r1, r3, r3, r2
 8004cec:	095b      	lsrs	r3, r3, #5
 8004cee:	2164      	movs	r1, #100	@ 0x64
 8004cf0:	fb01 f303 	mul.w	r3, r1, r3
 8004cf4:	1ad3      	subs	r3, r2, r3
 8004cf6:	00db      	lsls	r3, r3, #3
 8004cf8:	3332      	adds	r3, #50	@ 0x32
 8004cfa:	4a08      	ldr	r2, [pc, #32]	@ (8004d1c <UART_SetConfig+0x2d4>)
 8004cfc:	fba2 2303 	umull	r2, r3, r2, r3
 8004d00:	095b      	lsrs	r3, r3, #5
 8004d02:	f003 0207 	and.w	r2, r3, #7
 8004d06:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	4422      	add	r2, r4
 8004d0e:	609a      	str	r2, [r3, #8]
 8004d10:	e106      	b.n	8004f20 <UART_SetConfig+0x4d8>
 8004d12:	bf00      	nop
 8004d14:	40011000 	.word	0x40011000
 8004d18:	40011400 	.word	0x40011400
 8004d1c:	51eb851f 	.word	0x51eb851f
 8004d20:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004d24:	2200      	movs	r2, #0
 8004d26:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004d2a:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8004d2e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8004d32:	4642      	mov	r2, r8
 8004d34:	464b      	mov	r3, r9
 8004d36:	1891      	adds	r1, r2, r2
 8004d38:	6239      	str	r1, [r7, #32]
 8004d3a:	415b      	adcs	r3, r3
 8004d3c:	627b      	str	r3, [r7, #36]	@ 0x24
 8004d3e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004d42:	4641      	mov	r1, r8
 8004d44:	1854      	adds	r4, r2, r1
 8004d46:	4649      	mov	r1, r9
 8004d48:	eb43 0501 	adc.w	r5, r3, r1
 8004d4c:	f04f 0200 	mov.w	r2, #0
 8004d50:	f04f 0300 	mov.w	r3, #0
 8004d54:	00eb      	lsls	r3, r5, #3
 8004d56:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004d5a:	00e2      	lsls	r2, r4, #3
 8004d5c:	4614      	mov	r4, r2
 8004d5e:	461d      	mov	r5, r3
 8004d60:	4643      	mov	r3, r8
 8004d62:	18e3      	adds	r3, r4, r3
 8004d64:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004d68:	464b      	mov	r3, r9
 8004d6a:	eb45 0303 	adc.w	r3, r5, r3
 8004d6e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004d72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004d76:	685b      	ldr	r3, [r3, #4]
 8004d78:	2200      	movs	r2, #0
 8004d7a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004d7e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004d82:	f04f 0200 	mov.w	r2, #0
 8004d86:	f04f 0300 	mov.w	r3, #0
 8004d8a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8004d8e:	4629      	mov	r1, r5
 8004d90:	008b      	lsls	r3, r1, #2
 8004d92:	4621      	mov	r1, r4
 8004d94:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004d98:	4621      	mov	r1, r4
 8004d9a:	008a      	lsls	r2, r1, #2
 8004d9c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8004da0:	f7fb fa86 	bl	80002b0 <__aeabi_uldivmod>
 8004da4:	4602      	mov	r2, r0
 8004da6:	460b      	mov	r3, r1
 8004da8:	4b60      	ldr	r3, [pc, #384]	@ (8004f2c <UART_SetConfig+0x4e4>)
 8004daa:	fba3 2302 	umull	r2, r3, r3, r2
 8004dae:	095b      	lsrs	r3, r3, #5
 8004db0:	011c      	lsls	r4, r3, #4
 8004db2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004db6:	2200      	movs	r2, #0
 8004db8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004dbc:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004dc0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8004dc4:	4642      	mov	r2, r8
 8004dc6:	464b      	mov	r3, r9
 8004dc8:	1891      	adds	r1, r2, r2
 8004dca:	61b9      	str	r1, [r7, #24]
 8004dcc:	415b      	adcs	r3, r3
 8004dce:	61fb      	str	r3, [r7, #28]
 8004dd0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004dd4:	4641      	mov	r1, r8
 8004dd6:	1851      	adds	r1, r2, r1
 8004dd8:	6139      	str	r1, [r7, #16]
 8004dda:	4649      	mov	r1, r9
 8004ddc:	414b      	adcs	r3, r1
 8004dde:	617b      	str	r3, [r7, #20]
 8004de0:	f04f 0200 	mov.w	r2, #0
 8004de4:	f04f 0300 	mov.w	r3, #0
 8004de8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004dec:	4659      	mov	r1, fp
 8004dee:	00cb      	lsls	r3, r1, #3
 8004df0:	4651      	mov	r1, sl
 8004df2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004df6:	4651      	mov	r1, sl
 8004df8:	00ca      	lsls	r2, r1, #3
 8004dfa:	4610      	mov	r0, r2
 8004dfc:	4619      	mov	r1, r3
 8004dfe:	4603      	mov	r3, r0
 8004e00:	4642      	mov	r2, r8
 8004e02:	189b      	adds	r3, r3, r2
 8004e04:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004e08:	464b      	mov	r3, r9
 8004e0a:	460a      	mov	r2, r1
 8004e0c:	eb42 0303 	adc.w	r3, r2, r3
 8004e10:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004e14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e18:	685b      	ldr	r3, [r3, #4]
 8004e1a:	2200      	movs	r2, #0
 8004e1c:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004e1e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004e20:	f04f 0200 	mov.w	r2, #0
 8004e24:	f04f 0300 	mov.w	r3, #0
 8004e28:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8004e2c:	4649      	mov	r1, r9
 8004e2e:	008b      	lsls	r3, r1, #2
 8004e30:	4641      	mov	r1, r8
 8004e32:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004e36:	4641      	mov	r1, r8
 8004e38:	008a      	lsls	r2, r1, #2
 8004e3a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8004e3e:	f7fb fa37 	bl	80002b0 <__aeabi_uldivmod>
 8004e42:	4602      	mov	r2, r0
 8004e44:	460b      	mov	r3, r1
 8004e46:	4611      	mov	r1, r2
 8004e48:	4b38      	ldr	r3, [pc, #224]	@ (8004f2c <UART_SetConfig+0x4e4>)
 8004e4a:	fba3 2301 	umull	r2, r3, r3, r1
 8004e4e:	095b      	lsrs	r3, r3, #5
 8004e50:	2264      	movs	r2, #100	@ 0x64
 8004e52:	fb02 f303 	mul.w	r3, r2, r3
 8004e56:	1acb      	subs	r3, r1, r3
 8004e58:	011b      	lsls	r3, r3, #4
 8004e5a:	3332      	adds	r3, #50	@ 0x32
 8004e5c:	4a33      	ldr	r2, [pc, #204]	@ (8004f2c <UART_SetConfig+0x4e4>)
 8004e5e:	fba2 2303 	umull	r2, r3, r2, r3
 8004e62:	095b      	lsrs	r3, r3, #5
 8004e64:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004e68:	441c      	add	r4, r3
 8004e6a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004e6e:	2200      	movs	r2, #0
 8004e70:	673b      	str	r3, [r7, #112]	@ 0x70
 8004e72:	677a      	str	r2, [r7, #116]	@ 0x74
 8004e74:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8004e78:	4642      	mov	r2, r8
 8004e7a:	464b      	mov	r3, r9
 8004e7c:	1891      	adds	r1, r2, r2
 8004e7e:	60b9      	str	r1, [r7, #8]
 8004e80:	415b      	adcs	r3, r3
 8004e82:	60fb      	str	r3, [r7, #12]
 8004e84:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004e88:	4641      	mov	r1, r8
 8004e8a:	1851      	adds	r1, r2, r1
 8004e8c:	6039      	str	r1, [r7, #0]
 8004e8e:	4649      	mov	r1, r9
 8004e90:	414b      	adcs	r3, r1
 8004e92:	607b      	str	r3, [r7, #4]
 8004e94:	f04f 0200 	mov.w	r2, #0
 8004e98:	f04f 0300 	mov.w	r3, #0
 8004e9c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004ea0:	4659      	mov	r1, fp
 8004ea2:	00cb      	lsls	r3, r1, #3
 8004ea4:	4651      	mov	r1, sl
 8004ea6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004eaa:	4651      	mov	r1, sl
 8004eac:	00ca      	lsls	r2, r1, #3
 8004eae:	4610      	mov	r0, r2
 8004eb0:	4619      	mov	r1, r3
 8004eb2:	4603      	mov	r3, r0
 8004eb4:	4642      	mov	r2, r8
 8004eb6:	189b      	adds	r3, r3, r2
 8004eb8:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004eba:	464b      	mov	r3, r9
 8004ebc:	460a      	mov	r2, r1
 8004ebe:	eb42 0303 	adc.w	r3, r2, r3
 8004ec2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004ec4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004ec8:	685b      	ldr	r3, [r3, #4]
 8004eca:	2200      	movs	r2, #0
 8004ecc:	663b      	str	r3, [r7, #96]	@ 0x60
 8004ece:	667a      	str	r2, [r7, #100]	@ 0x64
 8004ed0:	f04f 0200 	mov.w	r2, #0
 8004ed4:	f04f 0300 	mov.w	r3, #0
 8004ed8:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8004edc:	4649      	mov	r1, r9
 8004ede:	008b      	lsls	r3, r1, #2
 8004ee0:	4641      	mov	r1, r8
 8004ee2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004ee6:	4641      	mov	r1, r8
 8004ee8:	008a      	lsls	r2, r1, #2
 8004eea:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8004eee:	f7fb f9df 	bl	80002b0 <__aeabi_uldivmod>
 8004ef2:	4602      	mov	r2, r0
 8004ef4:	460b      	mov	r3, r1
 8004ef6:	4b0d      	ldr	r3, [pc, #52]	@ (8004f2c <UART_SetConfig+0x4e4>)
 8004ef8:	fba3 1302 	umull	r1, r3, r3, r2
 8004efc:	095b      	lsrs	r3, r3, #5
 8004efe:	2164      	movs	r1, #100	@ 0x64
 8004f00:	fb01 f303 	mul.w	r3, r1, r3
 8004f04:	1ad3      	subs	r3, r2, r3
 8004f06:	011b      	lsls	r3, r3, #4
 8004f08:	3332      	adds	r3, #50	@ 0x32
 8004f0a:	4a08      	ldr	r2, [pc, #32]	@ (8004f2c <UART_SetConfig+0x4e4>)
 8004f0c:	fba2 2303 	umull	r2, r3, r2, r3
 8004f10:	095b      	lsrs	r3, r3, #5
 8004f12:	f003 020f 	and.w	r2, r3, #15
 8004f16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004f1a:	681b      	ldr	r3, [r3, #0]
 8004f1c:	4422      	add	r2, r4
 8004f1e:	609a      	str	r2, [r3, #8]
 8004f20:	bf00      	nop
 8004f22:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8004f26:	46bd      	mov	sp, r7
 8004f28:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004f2c:	51eb851f 	.word	0x51eb851f

08004f30 <siprintf>:
 8004f30:	b40e      	push	{r1, r2, r3}
 8004f32:	b510      	push	{r4, lr}
 8004f34:	b09d      	sub	sp, #116	@ 0x74
 8004f36:	ab1f      	add	r3, sp, #124	@ 0x7c
 8004f38:	9002      	str	r0, [sp, #8]
 8004f3a:	9006      	str	r0, [sp, #24]
 8004f3c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004f40:	480a      	ldr	r0, [pc, #40]	@ (8004f6c <siprintf+0x3c>)
 8004f42:	9107      	str	r1, [sp, #28]
 8004f44:	9104      	str	r1, [sp, #16]
 8004f46:	490a      	ldr	r1, [pc, #40]	@ (8004f70 <siprintf+0x40>)
 8004f48:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f4c:	9105      	str	r1, [sp, #20]
 8004f4e:	2400      	movs	r4, #0
 8004f50:	a902      	add	r1, sp, #8
 8004f52:	6800      	ldr	r0, [r0, #0]
 8004f54:	9301      	str	r3, [sp, #4]
 8004f56:	941b      	str	r4, [sp, #108]	@ 0x6c
 8004f58:	f000 f9a2 	bl	80052a0 <_svfiprintf_r>
 8004f5c:	9b02      	ldr	r3, [sp, #8]
 8004f5e:	701c      	strb	r4, [r3, #0]
 8004f60:	b01d      	add	sp, #116	@ 0x74
 8004f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004f66:	b003      	add	sp, #12
 8004f68:	4770      	bx	lr
 8004f6a:	bf00      	nop
 8004f6c:	20000070 	.word	0x20000070
 8004f70:	ffff0208 	.word	0xffff0208

08004f74 <memset>:
 8004f74:	4402      	add	r2, r0
 8004f76:	4603      	mov	r3, r0
 8004f78:	4293      	cmp	r3, r2
 8004f7a:	d100      	bne.n	8004f7e <memset+0xa>
 8004f7c:	4770      	bx	lr
 8004f7e:	f803 1b01 	strb.w	r1, [r3], #1
 8004f82:	e7f9      	b.n	8004f78 <memset+0x4>

08004f84 <__errno>:
 8004f84:	4b01      	ldr	r3, [pc, #4]	@ (8004f8c <__errno+0x8>)
 8004f86:	6818      	ldr	r0, [r3, #0]
 8004f88:	4770      	bx	lr
 8004f8a:	bf00      	nop
 8004f8c:	20000070 	.word	0x20000070

08004f90 <__libc_init_array>:
 8004f90:	b570      	push	{r4, r5, r6, lr}
 8004f92:	4d0d      	ldr	r5, [pc, #52]	@ (8004fc8 <__libc_init_array+0x38>)
 8004f94:	4c0d      	ldr	r4, [pc, #52]	@ (8004fcc <__libc_init_array+0x3c>)
 8004f96:	1b64      	subs	r4, r4, r5
 8004f98:	10a4      	asrs	r4, r4, #2
 8004f9a:	2600      	movs	r6, #0
 8004f9c:	42a6      	cmp	r6, r4
 8004f9e:	d109      	bne.n	8004fb4 <__libc_init_array+0x24>
 8004fa0:	4d0b      	ldr	r5, [pc, #44]	@ (8004fd0 <__libc_init_array+0x40>)
 8004fa2:	4c0c      	ldr	r4, [pc, #48]	@ (8004fd4 <__libc_init_array+0x44>)
 8004fa4:	f000 fc64 	bl	8005870 <_init>
 8004fa8:	1b64      	subs	r4, r4, r5
 8004faa:	10a4      	asrs	r4, r4, #2
 8004fac:	2600      	movs	r6, #0
 8004fae:	42a6      	cmp	r6, r4
 8004fb0:	d105      	bne.n	8004fbe <__libc_init_array+0x2e>
 8004fb2:	bd70      	pop	{r4, r5, r6, pc}
 8004fb4:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fb8:	4798      	blx	r3
 8004fba:	3601      	adds	r6, #1
 8004fbc:	e7ee      	b.n	8004f9c <__libc_init_array+0xc>
 8004fbe:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fc2:	4798      	blx	r3
 8004fc4:	3601      	adds	r6, #1
 8004fc6:	e7f2      	b.n	8004fae <__libc_init_array+0x1e>
 8004fc8:	08005918 	.word	0x08005918
 8004fcc:	08005918 	.word	0x08005918
 8004fd0:	08005918 	.word	0x08005918
 8004fd4:	0800591c 	.word	0x0800591c

08004fd8 <__retarget_lock_acquire_recursive>:
 8004fd8:	4770      	bx	lr

08004fda <__retarget_lock_release_recursive>:
 8004fda:	4770      	bx	lr

08004fdc <memcpy>:
 8004fdc:	440a      	add	r2, r1
 8004fde:	4291      	cmp	r1, r2
 8004fe0:	f100 33ff 	add.w	r3, r0, #4294967295
 8004fe4:	d100      	bne.n	8004fe8 <memcpy+0xc>
 8004fe6:	4770      	bx	lr
 8004fe8:	b510      	push	{r4, lr}
 8004fea:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004fee:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004ff2:	4291      	cmp	r1, r2
 8004ff4:	d1f9      	bne.n	8004fea <memcpy+0xe>
 8004ff6:	bd10      	pop	{r4, pc}

08004ff8 <_free_r>:
 8004ff8:	b538      	push	{r3, r4, r5, lr}
 8004ffa:	4605      	mov	r5, r0
 8004ffc:	2900      	cmp	r1, #0
 8004ffe:	d041      	beq.n	8005084 <_free_r+0x8c>
 8005000:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005004:	1f0c      	subs	r4, r1, #4
 8005006:	2b00      	cmp	r3, #0
 8005008:	bfb8      	it	lt
 800500a:	18e4      	addlt	r4, r4, r3
 800500c:	f000 f8e0 	bl	80051d0 <__malloc_lock>
 8005010:	4a1d      	ldr	r2, [pc, #116]	@ (8005088 <_free_r+0x90>)
 8005012:	6813      	ldr	r3, [r2, #0]
 8005014:	b933      	cbnz	r3, 8005024 <_free_r+0x2c>
 8005016:	6063      	str	r3, [r4, #4]
 8005018:	6014      	str	r4, [r2, #0]
 800501a:	4628      	mov	r0, r5
 800501c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005020:	f000 b8dc 	b.w	80051dc <__malloc_unlock>
 8005024:	42a3      	cmp	r3, r4
 8005026:	d908      	bls.n	800503a <_free_r+0x42>
 8005028:	6820      	ldr	r0, [r4, #0]
 800502a:	1821      	adds	r1, r4, r0
 800502c:	428b      	cmp	r3, r1
 800502e:	bf01      	itttt	eq
 8005030:	6819      	ldreq	r1, [r3, #0]
 8005032:	685b      	ldreq	r3, [r3, #4]
 8005034:	1809      	addeq	r1, r1, r0
 8005036:	6021      	streq	r1, [r4, #0]
 8005038:	e7ed      	b.n	8005016 <_free_r+0x1e>
 800503a:	461a      	mov	r2, r3
 800503c:	685b      	ldr	r3, [r3, #4]
 800503e:	b10b      	cbz	r3, 8005044 <_free_r+0x4c>
 8005040:	42a3      	cmp	r3, r4
 8005042:	d9fa      	bls.n	800503a <_free_r+0x42>
 8005044:	6811      	ldr	r1, [r2, #0]
 8005046:	1850      	adds	r0, r2, r1
 8005048:	42a0      	cmp	r0, r4
 800504a:	d10b      	bne.n	8005064 <_free_r+0x6c>
 800504c:	6820      	ldr	r0, [r4, #0]
 800504e:	4401      	add	r1, r0
 8005050:	1850      	adds	r0, r2, r1
 8005052:	4283      	cmp	r3, r0
 8005054:	6011      	str	r1, [r2, #0]
 8005056:	d1e0      	bne.n	800501a <_free_r+0x22>
 8005058:	6818      	ldr	r0, [r3, #0]
 800505a:	685b      	ldr	r3, [r3, #4]
 800505c:	6053      	str	r3, [r2, #4]
 800505e:	4408      	add	r0, r1
 8005060:	6010      	str	r0, [r2, #0]
 8005062:	e7da      	b.n	800501a <_free_r+0x22>
 8005064:	d902      	bls.n	800506c <_free_r+0x74>
 8005066:	230c      	movs	r3, #12
 8005068:	602b      	str	r3, [r5, #0]
 800506a:	e7d6      	b.n	800501a <_free_r+0x22>
 800506c:	6820      	ldr	r0, [r4, #0]
 800506e:	1821      	adds	r1, r4, r0
 8005070:	428b      	cmp	r3, r1
 8005072:	bf04      	itt	eq
 8005074:	6819      	ldreq	r1, [r3, #0]
 8005076:	685b      	ldreq	r3, [r3, #4]
 8005078:	6063      	str	r3, [r4, #4]
 800507a:	bf04      	itt	eq
 800507c:	1809      	addeq	r1, r1, r0
 800507e:	6021      	streq	r1, [r4, #0]
 8005080:	6054      	str	r4, [r2, #4]
 8005082:	e7ca      	b.n	800501a <_free_r+0x22>
 8005084:	bd38      	pop	{r3, r4, r5, pc}
 8005086:	bf00      	nop
 8005088:	200005a8 	.word	0x200005a8

0800508c <sbrk_aligned>:
 800508c:	b570      	push	{r4, r5, r6, lr}
 800508e:	4e0f      	ldr	r6, [pc, #60]	@ (80050cc <sbrk_aligned+0x40>)
 8005090:	460c      	mov	r4, r1
 8005092:	6831      	ldr	r1, [r6, #0]
 8005094:	4605      	mov	r5, r0
 8005096:	b911      	cbnz	r1, 800509e <sbrk_aligned+0x12>
 8005098:	f000 fba4 	bl	80057e4 <_sbrk_r>
 800509c:	6030      	str	r0, [r6, #0]
 800509e:	4621      	mov	r1, r4
 80050a0:	4628      	mov	r0, r5
 80050a2:	f000 fb9f 	bl	80057e4 <_sbrk_r>
 80050a6:	1c43      	adds	r3, r0, #1
 80050a8:	d103      	bne.n	80050b2 <sbrk_aligned+0x26>
 80050aa:	f04f 34ff 	mov.w	r4, #4294967295
 80050ae:	4620      	mov	r0, r4
 80050b0:	bd70      	pop	{r4, r5, r6, pc}
 80050b2:	1cc4      	adds	r4, r0, #3
 80050b4:	f024 0403 	bic.w	r4, r4, #3
 80050b8:	42a0      	cmp	r0, r4
 80050ba:	d0f8      	beq.n	80050ae <sbrk_aligned+0x22>
 80050bc:	1a21      	subs	r1, r4, r0
 80050be:	4628      	mov	r0, r5
 80050c0:	f000 fb90 	bl	80057e4 <_sbrk_r>
 80050c4:	3001      	adds	r0, #1
 80050c6:	d1f2      	bne.n	80050ae <sbrk_aligned+0x22>
 80050c8:	e7ef      	b.n	80050aa <sbrk_aligned+0x1e>
 80050ca:	bf00      	nop
 80050cc:	200005a4 	.word	0x200005a4

080050d0 <_malloc_r>:
 80050d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80050d4:	1ccd      	adds	r5, r1, #3
 80050d6:	f025 0503 	bic.w	r5, r5, #3
 80050da:	3508      	adds	r5, #8
 80050dc:	2d0c      	cmp	r5, #12
 80050de:	bf38      	it	cc
 80050e0:	250c      	movcc	r5, #12
 80050e2:	2d00      	cmp	r5, #0
 80050e4:	4606      	mov	r6, r0
 80050e6:	db01      	blt.n	80050ec <_malloc_r+0x1c>
 80050e8:	42a9      	cmp	r1, r5
 80050ea:	d904      	bls.n	80050f6 <_malloc_r+0x26>
 80050ec:	230c      	movs	r3, #12
 80050ee:	6033      	str	r3, [r6, #0]
 80050f0:	2000      	movs	r0, #0
 80050f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80050f6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80051cc <_malloc_r+0xfc>
 80050fa:	f000 f869 	bl	80051d0 <__malloc_lock>
 80050fe:	f8d8 3000 	ldr.w	r3, [r8]
 8005102:	461c      	mov	r4, r3
 8005104:	bb44      	cbnz	r4, 8005158 <_malloc_r+0x88>
 8005106:	4629      	mov	r1, r5
 8005108:	4630      	mov	r0, r6
 800510a:	f7ff ffbf 	bl	800508c <sbrk_aligned>
 800510e:	1c43      	adds	r3, r0, #1
 8005110:	4604      	mov	r4, r0
 8005112:	d158      	bne.n	80051c6 <_malloc_r+0xf6>
 8005114:	f8d8 4000 	ldr.w	r4, [r8]
 8005118:	4627      	mov	r7, r4
 800511a:	2f00      	cmp	r7, #0
 800511c:	d143      	bne.n	80051a6 <_malloc_r+0xd6>
 800511e:	2c00      	cmp	r4, #0
 8005120:	d04b      	beq.n	80051ba <_malloc_r+0xea>
 8005122:	6823      	ldr	r3, [r4, #0]
 8005124:	4639      	mov	r1, r7
 8005126:	4630      	mov	r0, r6
 8005128:	eb04 0903 	add.w	r9, r4, r3
 800512c:	f000 fb5a 	bl	80057e4 <_sbrk_r>
 8005130:	4581      	cmp	r9, r0
 8005132:	d142      	bne.n	80051ba <_malloc_r+0xea>
 8005134:	6821      	ldr	r1, [r4, #0]
 8005136:	1a6d      	subs	r5, r5, r1
 8005138:	4629      	mov	r1, r5
 800513a:	4630      	mov	r0, r6
 800513c:	f7ff ffa6 	bl	800508c <sbrk_aligned>
 8005140:	3001      	adds	r0, #1
 8005142:	d03a      	beq.n	80051ba <_malloc_r+0xea>
 8005144:	6823      	ldr	r3, [r4, #0]
 8005146:	442b      	add	r3, r5
 8005148:	6023      	str	r3, [r4, #0]
 800514a:	f8d8 3000 	ldr.w	r3, [r8]
 800514e:	685a      	ldr	r2, [r3, #4]
 8005150:	bb62      	cbnz	r2, 80051ac <_malloc_r+0xdc>
 8005152:	f8c8 7000 	str.w	r7, [r8]
 8005156:	e00f      	b.n	8005178 <_malloc_r+0xa8>
 8005158:	6822      	ldr	r2, [r4, #0]
 800515a:	1b52      	subs	r2, r2, r5
 800515c:	d420      	bmi.n	80051a0 <_malloc_r+0xd0>
 800515e:	2a0b      	cmp	r2, #11
 8005160:	d917      	bls.n	8005192 <_malloc_r+0xc2>
 8005162:	1961      	adds	r1, r4, r5
 8005164:	42a3      	cmp	r3, r4
 8005166:	6025      	str	r5, [r4, #0]
 8005168:	bf18      	it	ne
 800516a:	6059      	strne	r1, [r3, #4]
 800516c:	6863      	ldr	r3, [r4, #4]
 800516e:	bf08      	it	eq
 8005170:	f8c8 1000 	streq.w	r1, [r8]
 8005174:	5162      	str	r2, [r4, r5]
 8005176:	604b      	str	r3, [r1, #4]
 8005178:	4630      	mov	r0, r6
 800517a:	f000 f82f 	bl	80051dc <__malloc_unlock>
 800517e:	f104 000b 	add.w	r0, r4, #11
 8005182:	1d23      	adds	r3, r4, #4
 8005184:	f020 0007 	bic.w	r0, r0, #7
 8005188:	1ac2      	subs	r2, r0, r3
 800518a:	bf1c      	itt	ne
 800518c:	1a1b      	subne	r3, r3, r0
 800518e:	50a3      	strne	r3, [r4, r2]
 8005190:	e7af      	b.n	80050f2 <_malloc_r+0x22>
 8005192:	6862      	ldr	r2, [r4, #4]
 8005194:	42a3      	cmp	r3, r4
 8005196:	bf0c      	ite	eq
 8005198:	f8c8 2000 	streq.w	r2, [r8]
 800519c:	605a      	strne	r2, [r3, #4]
 800519e:	e7eb      	b.n	8005178 <_malloc_r+0xa8>
 80051a0:	4623      	mov	r3, r4
 80051a2:	6864      	ldr	r4, [r4, #4]
 80051a4:	e7ae      	b.n	8005104 <_malloc_r+0x34>
 80051a6:	463c      	mov	r4, r7
 80051a8:	687f      	ldr	r7, [r7, #4]
 80051aa:	e7b6      	b.n	800511a <_malloc_r+0x4a>
 80051ac:	461a      	mov	r2, r3
 80051ae:	685b      	ldr	r3, [r3, #4]
 80051b0:	42a3      	cmp	r3, r4
 80051b2:	d1fb      	bne.n	80051ac <_malloc_r+0xdc>
 80051b4:	2300      	movs	r3, #0
 80051b6:	6053      	str	r3, [r2, #4]
 80051b8:	e7de      	b.n	8005178 <_malloc_r+0xa8>
 80051ba:	230c      	movs	r3, #12
 80051bc:	6033      	str	r3, [r6, #0]
 80051be:	4630      	mov	r0, r6
 80051c0:	f000 f80c 	bl	80051dc <__malloc_unlock>
 80051c4:	e794      	b.n	80050f0 <_malloc_r+0x20>
 80051c6:	6005      	str	r5, [r0, #0]
 80051c8:	e7d6      	b.n	8005178 <_malloc_r+0xa8>
 80051ca:	bf00      	nop
 80051cc:	200005a8 	.word	0x200005a8

080051d0 <__malloc_lock>:
 80051d0:	4801      	ldr	r0, [pc, #4]	@ (80051d8 <__malloc_lock+0x8>)
 80051d2:	f7ff bf01 	b.w	8004fd8 <__retarget_lock_acquire_recursive>
 80051d6:	bf00      	nop
 80051d8:	200005a0 	.word	0x200005a0

080051dc <__malloc_unlock>:
 80051dc:	4801      	ldr	r0, [pc, #4]	@ (80051e4 <__malloc_unlock+0x8>)
 80051de:	f7ff befc 	b.w	8004fda <__retarget_lock_release_recursive>
 80051e2:	bf00      	nop
 80051e4:	200005a0 	.word	0x200005a0

080051e8 <__ssputs_r>:
 80051e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051ec:	688e      	ldr	r6, [r1, #8]
 80051ee:	461f      	mov	r7, r3
 80051f0:	42be      	cmp	r6, r7
 80051f2:	680b      	ldr	r3, [r1, #0]
 80051f4:	4682      	mov	sl, r0
 80051f6:	460c      	mov	r4, r1
 80051f8:	4690      	mov	r8, r2
 80051fa:	d82d      	bhi.n	8005258 <__ssputs_r+0x70>
 80051fc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005200:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005204:	d026      	beq.n	8005254 <__ssputs_r+0x6c>
 8005206:	6965      	ldr	r5, [r4, #20]
 8005208:	6909      	ldr	r1, [r1, #16]
 800520a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800520e:	eba3 0901 	sub.w	r9, r3, r1
 8005212:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005216:	1c7b      	adds	r3, r7, #1
 8005218:	444b      	add	r3, r9
 800521a:	106d      	asrs	r5, r5, #1
 800521c:	429d      	cmp	r5, r3
 800521e:	bf38      	it	cc
 8005220:	461d      	movcc	r5, r3
 8005222:	0553      	lsls	r3, r2, #21
 8005224:	d527      	bpl.n	8005276 <__ssputs_r+0x8e>
 8005226:	4629      	mov	r1, r5
 8005228:	f7ff ff52 	bl	80050d0 <_malloc_r>
 800522c:	4606      	mov	r6, r0
 800522e:	b360      	cbz	r0, 800528a <__ssputs_r+0xa2>
 8005230:	6921      	ldr	r1, [r4, #16]
 8005232:	464a      	mov	r2, r9
 8005234:	f7ff fed2 	bl	8004fdc <memcpy>
 8005238:	89a3      	ldrh	r3, [r4, #12]
 800523a:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800523e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005242:	81a3      	strh	r3, [r4, #12]
 8005244:	6126      	str	r6, [r4, #16]
 8005246:	6165      	str	r5, [r4, #20]
 8005248:	444e      	add	r6, r9
 800524a:	eba5 0509 	sub.w	r5, r5, r9
 800524e:	6026      	str	r6, [r4, #0]
 8005250:	60a5      	str	r5, [r4, #8]
 8005252:	463e      	mov	r6, r7
 8005254:	42be      	cmp	r6, r7
 8005256:	d900      	bls.n	800525a <__ssputs_r+0x72>
 8005258:	463e      	mov	r6, r7
 800525a:	6820      	ldr	r0, [r4, #0]
 800525c:	4632      	mov	r2, r6
 800525e:	4641      	mov	r1, r8
 8005260:	f000 faa6 	bl	80057b0 <memmove>
 8005264:	68a3      	ldr	r3, [r4, #8]
 8005266:	1b9b      	subs	r3, r3, r6
 8005268:	60a3      	str	r3, [r4, #8]
 800526a:	6823      	ldr	r3, [r4, #0]
 800526c:	4433      	add	r3, r6
 800526e:	6023      	str	r3, [r4, #0]
 8005270:	2000      	movs	r0, #0
 8005272:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005276:	462a      	mov	r2, r5
 8005278:	f000 fac4 	bl	8005804 <_realloc_r>
 800527c:	4606      	mov	r6, r0
 800527e:	2800      	cmp	r0, #0
 8005280:	d1e0      	bne.n	8005244 <__ssputs_r+0x5c>
 8005282:	6921      	ldr	r1, [r4, #16]
 8005284:	4650      	mov	r0, sl
 8005286:	f7ff feb7 	bl	8004ff8 <_free_r>
 800528a:	230c      	movs	r3, #12
 800528c:	f8ca 3000 	str.w	r3, [sl]
 8005290:	89a3      	ldrh	r3, [r4, #12]
 8005292:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005296:	81a3      	strh	r3, [r4, #12]
 8005298:	f04f 30ff 	mov.w	r0, #4294967295
 800529c:	e7e9      	b.n	8005272 <__ssputs_r+0x8a>
	...

080052a0 <_svfiprintf_r>:
 80052a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052a4:	4698      	mov	r8, r3
 80052a6:	898b      	ldrh	r3, [r1, #12]
 80052a8:	061b      	lsls	r3, r3, #24
 80052aa:	b09d      	sub	sp, #116	@ 0x74
 80052ac:	4607      	mov	r7, r0
 80052ae:	460d      	mov	r5, r1
 80052b0:	4614      	mov	r4, r2
 80052b2:	d510      	bpl.n	80052d6 <_svfiprintf_r+0x36>
 80052b4:	690b      	ldr	r3, [r1, #16]
 80052b6:	b973      	cbnz	r3, 80052d6 <_svfiprintf_r+0x36>
 80052b8:	2140      	movs	r1, #64	@ 0x40
 80052ba:	f7ff ff09 	bl	80050d0 <_malloc_r>
 80052be:	6028      	str	r0, [r5, #0]
 80052c0:	6128      	str	r0, [r5, #16]
 80052c2:	b930      	cbnz	r0, 80052d2 <_svfiprintf_r+0x32>
 80052c4:	230c      	movs	r3, #12
 80052c6:	603b      	str	r3, [r7, #0]
 80052c8:	f04f 30ff 	mov.w	r0, #4294967295
 80052cc:	b01d      	add	sp, #116	@ 0x74
 80052ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052d2:	2340      	movs	r3, #64	@ 0x40
 80052d4:	616b      	str	r3, [r5, #20]
 80052d6:	2300      	movs	r3, #0
 80052d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80052da:	2320      	movs	r3, #32
 80052dc:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80052e0:	f8cd 800c 	str.w	r8, [sp, #12]
 80052e4:	2330      	movs	r3, #48	@ 0x30
 80052e6:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005484 <_svfiprintf_r+0x1e4>
 80052ea:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80052ee:	f04f 0901 	mov.w	r9, #1
 80052f2:	4623      	mov	r3, r4
 80052f4:	469a      	mov	sl, r3
 80052f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80052fa:	b10a      	cbz	r2, 8005300 <_svfiprintf_r+0x60>
 80052fc:	2a25      	cmp	r2, #37	@ 0x25
 80052fe:	d1f9      	bne.n	80052f4 <_svfiprintf_r+0x54>
 8005300:	ebba 0b04 	subs.w	fp, sl, r4
 8005304:	d00b      	beq.n	800531e <_svfiprintf_r+0x7e>
 8005306:	465b      	mov	r3, fp
 8005308:	4622      	mov	r2, r4
 800530a:	4629      	mov	r1, r5
 800530c:	4638      	mov	r0, r7
 800530e:	f7ff ff6b 	bl	80051e8 <__ssputs_r>
 8005312:	3001      	adds	r0, #1
 8005314:	f000 80a7 	beq.w	8005466 <_svfiprintf_r+0x1c6>
 8005318:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800531a:	445a      	add	r2, fp
 800531c:	9209      	str	r2, [sp, #36]	@ 0x24
 800531e:	f89a 3000 	ldrb.w	r3, [sl]
 8005322:	2b00      	cmp	r3, #0
 8005324:	f000 809f 	beq.w	8005466 <_svfiprintf_r+0x1c6>
 8005328:	2300      	movs	r3, #0
 800532a:	f04f 32ff 	mov.w	r2, #4294967295
 800532e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005332:	f10a 0a01 	add.w	sl, sl, #1
 8005336:	9304      	str	r3, [sp, #16]
 8005338:	9307      	str	r3, [sp, #28]
 800533a:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800533e:	931a      	str	r3, [sp, #104]	@ 0x68
 8005340:	4654      	mov	r4, sl
 8005342:	2205      	movs	r2, #5
 8005344:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005348:	484e      	ldr	r0, [pc, #312]	@ (8005484 <_svfiprintf_r+0x1e4>)
 800534a:	f7fa ff61 	bl	8000210 <memchr>
 800534e:	9a04      	ldr	r2, [sp, #16]
 8005350:	b9d8      	cbnz	r0, 800538a <_svfiprintf_r+0xea>
 8005352:	06d0      	lsls	r0, r2, #27
 8005354:	bf44      	itt	mi
 8005356:	2320      	movmi	r3, #32
 8005358:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800535c:	0711      	lsls	r1, r2, #28
 800535e:	bf44      	itt	mi
 8005360:	232b      	movmi	r3, #43	@ 0x2b
 8005362:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005366:	f89a 3000 	ldrb.w	r3, [sl]
 800536a:	2b2a      	cmp	r3, #42	@ 0x2a
 800536c:	d015      	beq.n	800539a <_svfiprintf_r+0xfa>
 800536e:	9a07      	ldr	r2, [sp, #28]
 8005370:	4654      	mov	r4, sl
 8005372:	2000      	movs	r0, #0
 8005374:	f04f 0c0a 	mov.w	ip, #10
 8005378:	4621      	mov	r1, r4
 800537a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800537e:	3b30      	subs	r3, #48	@ 0x30
 8005380:	2b09      	cmp	r3, #9
 8005382:	d94b      	bls.n	800541c <_svfiprintf_r+0x17c>
 8005384:	b1b0      	cbz	r0, 80053b4 <_svfiprintf_r+0x114>
 8005386:	9207      	str	r2, [sp, #28]
 8005388:	e014      	b.n	80053b4 <_svfiprintf_r+0x114>
 800538a:	eba0 0308 	sub.w	r3, r0, r8
 800538e:	fa09 f303 	lsl.w	r3, r9, r3
 8005392:	4313      	orrs	r3, r2
 8005394:	9304      	str	r3, [sp, #16]
 8005396:	46a2      	mov	sl, r4
 8005398:	e7d2      	b.n	8005340 <_svfiprintf_r+0xa0>
 800539a:	9b03      	ldr	r3, [sp, #12]
 800539c:	1d19      	adds	r1, r3, #4
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	9103      	str	r1, [sp, #12]
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	bfbb      	ittet	lt
 80053a6:	425b      	neglt	r3, r3
 80053a8:	f042 0202 	orrlt.w	r2, r2, #2
 80053ac:	9307      	strge	r3, [sp, #28]
 80053ae:	9307      	strlt	r3, [sp, #28]
 80053b0:	bfb8      	it	lt
 80053b2:	9204      	strlt	r2, [sp, #16]
 80053b4:	7823      	ldrb	r3, [r4, #0]
 80053b6:	2b2e      	cmp	r3, #46	@ 0x2e
 80053b8:	d10a      	bne.n	80053d0 <_svfiprintf_r+0x130>
 80053ba:	7863      	ldrb	r3, [r4, #1]
 80053bc:	2b2a      	cmp	r3, #42	@ 0x2a
 80053be:	d132      	bne.n	8005426 <_svfiprintf_r+0x186>
 80053c0:	9b03      	ldr	r3, [sp, #12]
 80053c2:	1d1a      	adds	r2, r3, #4
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	9203      	str	r2, [sp, #12]
 80053c8:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80053cc:	3402      	adds	r4, #2
 80053ce:	9305      	str	r3, [sp, #20]
 80053d0:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005494 <_svfiprintf_r+0x1f4>
 80053d4:	7821      	ldrb	r1, [r4, #0]
 80053d6:	2203      	movs	r2, #3
 80053d8:	4650      	mov	r0, sl
 80053da:	f7fa ff19 	bl	8000210 <memchr>
 80053de:	b138      	cbz	r0, 80053f0 <_svfiprintf_r+0x150>
 80053e0:	9b04      	ldr	r3, [sp, #16]
 80053e2:	eba0 000a 	sub.w	r0, r0, sl
 80053e6:	2240      	movs	r2, #64	@ 0x40
 80053e8:	4082      	lsls	r2, r0
 80053ea:	4313      	orrs	r3, r2
 80053ec:	3401      	adds	r4, #1
 80053ee:	9304      	str	r3, [sp, #16]
 80053f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80053f4:	4824      	ldr	r0, [pc, #144]	@ (8005488 <_svfiprintf_r+0x1e8>)
 80053f6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80053fa:	2206      	movs	r2, #6
 80053fc:	f7fa ff08 	bl	8000210 <memchr>
 8005400:	2800      	cmp	r0, #0
 8005402:	d036      	beq.n	8005472 <_svfiprintf_r+0x1d2>
 8005404:	4b21      	ldr	r3, [pc, #132]	@ (800548c <_svfiprintf_r+0x1ec>)
 8005406:	bb1b      	cbnz	r3, 8005450 <_svfiprintf_r+0x1b0>
 8005408:	9b03      	ldr	r3, [sp, #12]
 800540a:	3307      	adds	r3, #7
 800540c:	f023 0307 	bic.w	r3, r3, #7
 8005410:	3308      	adds	r3, #8
 8005412:	9303      	str	r3, [sp, #12]
 8005414:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005416:	4433      	add	r3, r6
 8005418:	9309      	str	r3, [sp, #36]	@ 0x24
 800541a:	e76a      	b.n	80052f2 <_svfiprintf_r+0x52>
 800541c:	fb0c 3202 	mla	r2, ip, r2, r3
 8005420:	460c      	mov	r4, r1
 8005422:	2001      	movs	r0, #1
 8005424:	e7a8      	b.n	8005378 <_svfiprintf_r+0xd8>
 8005426:	2300      	movs	r3, #0
 8005428:	3401      	adds	r4, #1
 800542a:	9305      	str	r3, [sp, #20]
 800542c:	4619      	mov	r1, r3
 800542e:	f04f 0c0a 	mov.w	ip, #10
 8005432:	4620      	mov	r0, r4
 8005434:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005438:	3a30      	subs	r2, #48	@ 0x30
 800543a:	2a09      	cmp	r2, #9
 800543c:	d903      	bls.n	8005446 <_svfiprintf_r+0x1a6>
 800543e:	2b00      	cmp	r3, #0
 8005440:	d0c6      	beq.n	80053d0 <_svfiprintf_r+0x130>
 8005442:	9105      	str	r1, [sp, #20]
 8005444:	e7c4      	b.n	80053d0 <_svfiprintf_r+0x130>
 8005446:	fb0c 2101 	mla	r1, ip, r1, r2
 800544a:	4604      	mov	r4, r0
 800544c:	2301      	movs	r3, #1
 800544e:	e7f0      	b.n	8005432 <_svfiprintf_r+0x192>
 8005450:	ab03      	add	r3, sp, #12
 8005452:	9300      	str	r3, [sp, #0]
 8005454:	462a      	mov	r2, r5
 8005456:	4b0e      	ldr	r3, [pc, #56]	@ (8005490 <_svfiprintf_r+0x1f0>)
 8005458:	a904      	add	r1, sp, #16
 800545a:	4638      	mov	r0, r7
 800545c:	f3af 8000 	nop.w
 8005460:	1c42      	adds	r2, r0, #1
 8005462:	4606      	mov	r6, r0
 8005464:	d1d6      	bne.n	8005414 <_svfiprintf_r+0x174>
 8005466:	89ab      	ldrh	r3, [r5, #12]
 8005468:	065b      	lsls	r3, r3, #25
 800546a:	f53f af2d 	bmi.w	80052c8 <_svfiprintf_r+0x28>
 800546e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005470:	e72c      	b.n	80052cc <_svfiprintf_r+0x2c>
 8005472:	ab03      	add	r3, sp, #12
 8005474:	9300      	str	r3, [sp, #0]
 8005476:	462a      	mov	r2, r5
 8005478:	4b05      	ldr	r3, [pc, #20]	@ (8005490 <_svfiprintf_r+0x1f0>)
 800547a:	a904      	add	r1, sp, #16
 800547c:	4638      	mov	r0, r7
 800547e:	f000 f879 	bl	8005574 <_printf_i>
 8005482:	e7ed      	b.n	8005460 <_svfiprintf_r+0x1c0>
 8005484:	080058dc 	.word	0x080058dc
 8005488:	080058e6 	.word	0x080058e6
 800548c:	00000000 	.word	0x00000000
 8005490:	080051e9 	.word	0x080051e9
 8005494:	080058e2 	.word	0x080058e2

08005498 <_printf_common>:
 8005498:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800549c:	4616      	mov	r6, r2
 800549e:	4698      	mov	r8, r3
 80054a0:	688a      	ldr	r2, [r1, #8]
 80054a2:	690b      	ldr	r3, [r1, #16]
 80054a4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80054a8:	4293      	cmp	r3, r2
 80054aa:	bfb8      	it	lt
 80054ac:	4613      	movlt	r3, r2
 80054ae:	6033      	str	r3, [r6, #0]
 80054b0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80054b4:	4607      	mov	r7, r0
 80054b6:	460c      	mov	r4, r1
 80054b8:	b10a      	cbz	r2, 80054be <_printf_common+0x26>
 80054ba:	3301      	adds	r3, #1
 80054bc:	6033      	str	r3, [r6, #0]
 80054be:	6823      	ldr	r3, [r4, #0]
 80054c0:	0699      	lsls	r1, r3, #26
 80054c2:	bf42      	ittt	mi
 80054c4:	6833      	ldrmi	r3, [r6, #0]
 80054c6:	3302      	addmi	r3, #2
 80054c8:	6033      	strmi	r3, [r6, #0]
 80054ca:	6825      	ldr	r5, [r4, #0]
 80054cc:	f015 0506 	ands.w	r5, r5, #6
 80054d0:	d106      	bne.n	80054e0 <_printf_common+0x48>
 80054d2:	f104 0a19 	add.w	sl, r4, #25
 80054d6:	68e3      	ldr	r3, [r4, #12]
 80054d8:	6832      	ldr	r2, [r6, #0]
 80054da:	1a9b      	subs	r3, r3, r2
 80054dc:	42ab      	cmp	r3, r5
 80054de:	dc26      	bgt.n	800552e <_printf_common+0x96>
 80054e0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80054e4:	6822      	ldr	r2, [r4, #0]
 80054e6:	3b00      	subs	r3, #0
 80054e8:	bf18      	it	ne
 80054ea:	2301      	movne	r3, #1
 80054ec:	0692      	lsls	r2, r2, #26
 80054ee:	d42b      	bmi.n	8005548 <_printf_common+0xb0>
 80054f0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80054f4:	4641      	mov	r1, r8
 80054f6:	4638      	mov	r0, r7
 80054f8:	47c8      	blx	r9
 80054fa:	3001      	adds	r0, #1
 80054fc:	d01e      	beq.n	800553c <_printf_common+0xa4>
 80054fe:	6823      	ldr	r3, [r4, #0]
 8005500:	6922      	ldr	r2, [r4, #16]
 8005502:	f003 0306 	and.w	r3, r3, #6
 8005506:	2b04      	cmp	r3, #4
 8005508:	bf02      	ittt	eq
 800550a:	68e5      	ldreq	r5, [r4, #12]
 800550c:	6833      	ldreq	r3, [r6, #0]
 800550e:	1aed      	subeq	r5, r5, r3
 8005510:	68a3      	ldr	r3, [r4, #8]
 8005512:	bf0c      	ite	eq
 8005514:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005518:	2500      	movne	r5, #0
 800551a:	4293      	cmp	r3, r2
 800551c:	bfc4      	itt	gt
 800551e:	1a9b      	subgt	r3, r3, r2
 8005520:	18ed      	addgt	r5, r5, r3
 8005522:	2600      	movs	r6, #0
 8005524:	341a      	adds	r4, #26
 8005526:	42b5      	cmp	r5, r6
 8005528:	d11a      	bne.n	8005560 <_printf_common+0xc8>
 800552a:	2000      	movs	r0, #0
 800552c:	e008      	b.n	8005540 <_printf_common+0xa8>
 800552e:	2301      	movs	r3, #1
 8005530:	4652      	mov	r2, sl
 8005532:	4641      	mov	r1, r8
 8005534:	4638      	mov	r0, r7
 8005536:	47c8      	blx	r9
 8005538:	3001      	adds	r0, #1
 800553a:	d103      	bne.n	8005544 <_printf_common+0xac>
 800553c:	f04f 30ff 	mov.w	r0, #4294967295
 8005540:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005544:	3501      	adds	r5, #1
 8005546:	e7c6      	b.n	80054d6 <_printf_common+0x3e>
 8005548:	18e1      	adds	r1, r4, r3
 800554a:	1c5a      	adds	r2, r3, #1
 800554c:	2030      	movs	r0, #48	@ 0x30
 800554e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005552:	4422      	add	r2, r4
 8005554:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005558:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800555c:	3302      	adds	r3, #2
 800555e:	e7c7      	b.n	80054f0 <_printf_common+0x58>
 8005560:	2301      	movs	r3, #1
 8005562:	4622      	mov	r2, r4
 8005564:	4641      	mov	r1, r8
 8005566:	4638      	mov	r0, r7
 8005568:	47c8      	blx	r9
 800556a:	3001      	adds	r0, #1
 800556c:	d0e6      	beq.n	800553c <_printf_common+0xa4>
 800556e:	3601      	adds	r6, #1
 8005570:	e7d9      	b.n	8005526 <_printf_common+0x8e>
	...

08005574 <_printf_i>:
 8005574:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005578:	7e0f      	ldrb	r7, [r1, #24]
 800557a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800557c:	2f78      	cmp	r7, #120	@ 0x78
 800557e:	4691      	mov	r9, r2
 8005580:	4680      	mov	r8, r0
 8005582:	460c      	mov	r4, r1
 8005584:	469a      	mov	sl, r3
 8005586:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800558a:	d807      	bhi.n	800559c <_printf_i+0x28>
 800558c:	2f62      	cmp	r7, #98	@ 0x62
 800558e:	d80a      	bhi.n	80055a6 <_printf_i+0x32>
 8005590:	2f00      	cmp	r7, #0
 8005592:	f000 80d1 	beq.w	8005738 <_printf_i+0x1c4>
 8005596:	2f58      	cmp	r7, #88	@ 0x58
 8005598:	f000 80b8 	beq.w	800570c <_printf_i+0x198>
 800559c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80055a0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80055a4:	e03a      	b.n	800561c <_printf_i+0xa8>
 80055a6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80055aa:	2b15      	cmp	r3, #21
 80055ac:	d8f6      	bhi.n	800559c <_printf_i+0x28>
 80055ae:	a101      	add	r1, pc, #4	@ (adr r1, 80055b4 <_printf_i+0x40>)
 80055b0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80055b4:	0800560d 	.word	0x0800560d
 80055b8:	08005621 	.word	0x08005621
 80055bc:	0800559d 	.word	0x0800559d
 80055c0:	0800559d 	.word	0x0800559d
 80055c4:	0800559d 	.word	0x0800559d
 80055c8:	0800559d 	.word	0x0800559d
 80055cc:	08005621 	.word	0x08005621
 80055d0:	0800559d 	.word	0x0800559d
 80055d4:	0800559d 	.word	0x0800559d
 80055d8:	0800559d 	.word	0x0800559d
 80055dc:	0800559d 	.word	0x0800559d
 80055e0:	0800571f 	.word	0x0800571f
 80055e4:	0800564b 	.word	0x0800564b
 80055e8:	080056d9 	.word	0x080056d9
 80055ec:	0800559d 	.word	0x0800559d
 80055f0:	0800559d 	.word	0x0800559d
 80055f4:	08005741 	.word	0x08005741
 80055f8:	0800559d 	.word	0x0800559d
 80055fc:	0800564b 	.word	0x0800564b
 8005600:	0800559d 	.word	0x0800559d
 8005604:	0800559d 	.word	0x0800559d
 8005608:	080056e1 	.word	0x080056e1
 800560c:	6833      	ldr	r3, [r6, #0]
 800560e:	1d1a      	adds	r2, r3, #4
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	6032      	str	r2, [r6, #0]
 8005614:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005618:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800561c:	2301      	movs	r3, #1
 800561e:	e09c      	b.n	800575a <_printf_i+0x1e6>
 8005620:	6833      	ldr	r3, [r6, #0]
 8005622:	6820      	ldr	r0, [r4, #0]
 8005624:	1d19      	adds	r1, r3, #4
 8005626:	6031      	str	r1, [r6, #0]
 8005628:	0606      	lsls	r6, r0, #24
 800562a:	d501      	bpl.n	8005630 <_printf_i+0xbc>
 800562c:	681d      	ldr	r5, [r3, #0]
 800562e:	e003      	b.n	8005638 <_printf_i+0xc4>
 8005630:	0645      	lsls	r5, r0, #25
 8005632:	d5fb      	bpl.n	800562c <_printf_i+0xb8>
 8005634:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005638:	2d00      	cmp	r5, #0
 800563a:	da03      	bge.n	8005644 <_printf_i+0xd0>
 800563c:	232d      	movs	r3, #45	@ 0x2d
 800563e:	426d      	negs	r5, r5
 8005640:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005644:	4858      	ldr	r0, [pc, #352]	@ (80057a8 <_printf_i+0x234>)
 8005646:	230a      	movs	r3, #10
 8005648:	e011      	b.n	800566e <_printf_i+0xfa>
 800564a:	6821      	ldr	r1, [r4, #0]
 800564c:	6833      	ldr	r3, [r6, #0]
 800564e:	0608      	lsls	r0, r1, #24
 8005650:	f853 5b04 	ldr.w	r5, [r3], #4
 8005654:	d402      	bmi.n	800565c <_printf_i+0xe8>
 8005656:	0649      	lsls	r1, r1, #25
 8005658:	bf48      	it	mi
 800565a:	b2ad      	uxthmi	r5, r5
 800565c:	2f6f      	cmp	r7, #111	@ 0x6f
 800565e:	4852      	ldr	r0, [pc, #328]	@ (80057a8 <_printf_i+0x234>)
 8005660:	6033      	str	r3, [r6, #0]
 8005662:	bf14      	ite	ne
 8005664:	230a      	movne	r3, #10
 8005666:	2308      	moveq	r3, #8
 8005668:	2100      	movs	r1, #0
 800566a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800566e:	6866      	ldr	r6, [r4, #4]
 8005670:	60a6      	str	r6, [r4, #8]
 8005672:	2e00      	cmp	r6, #0
 8005674:	db05      	blt.n	8005682 <_printf_i+0x10e>
 8005676:	6821      	ldr	r1, [r4, #0]
 8005678:	432e      	orrs	r6, r5
 800567a:	f021 0104 	bic.w	r1, r1, #4
 800567e:	6021      	str	r1, [r4, #0]
 8005680:	d04b      	beq.n	800571a <_printf_i+0x1a6>
 8005682:	4616      	mov	r6, r2
 8005684:	fbb5 f1f3 	udiv	r1, r5, r3
 8005688:	fb03 5711 	mls	r7, r3, r1, r5
 800568c:	5dc7      	ldrb	r7, [r0, r7]
 800568e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005692:	462f      	mov	r7, r5
 8005694:	42bb      	cmp	r3, r7
 8005696:	460d      	mov	r5, r1
 8005698:	d9f4      	bls.n	8005684 <_printf_i+0x110>
 800569a:	2b08      	cmp	r3, #8
 800569c:	d10b      	bne.n	80056b6 <_printf_i+0x142>
 800569e:	6823      	ldr	r3, [r4, #0]
 80056a0:	07df      	lsls	r7, r3, #31
 80056a2:	d508      	bpl.n	80056b6 <_printf_i+0x142>
 80056a4:	6923      	ldr	r3, [r4, #16]
 80056a6:	6861      	ldr	r1, [r4, #4]
 80056a8:	4299      	cmp	r1, r3
 80056aa:	bfde      	ittt	le
 80056ac:	2330      	movle	r3, #48	@ 0x30
 80056ae:	f806 3c01 	strble.w	r3, [r6, #-1]
 80056b2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80056b6:	1b92      	subs	r2, r2, r6
 80056b8:	6122      	str	r2, [r4, #16]
 80056ba:	f8cd a000 	str.w	sl, [sp]
 80056be:	464b      	mov	r3, r9
 80056c0:	aa03      	add	r2, sp, #12
 80056c2:	4621      	mov	r1, r4
 80056c4:	4640      	mov	r0, r8
 80056c6:	f7ff fee7 	bl	8005498 <_printf_common>
 80056ca:	3001      	adds	r0, #1
 80056cc:	d14a      	bne.n	8005764 <_printf_i+0x1f0>
 80056ce:	f04f 30ff 	mov.w	r0, #4294967295
 80056d2:	b004      	add	sp, #16
 80056d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80056d8:	6823      	ldr	r3, [r4, #0]
 80056da:	f043 0320 	orr.w	r3, r3, #32
 80056de:	6023      	str	r3, [r4, #0]
 80056e0:	4832      	ldr	r0, [pc, #200]	@ (80057ac <_printf_i+0x238>)
 80056e2:	2778      	movs	r7, #120	@ 0x78
 80056e4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80056e8:	6823      	ldr	r3, [r4, #0]
 80056ea:	6831      	ldr	r1, [r6, #0]
 80056ec:	061f      	lsls	r7, r3, #24
 80056ee:	f851 5b04 	ldr.w	r5, [r1], #4
 80056f2:	d402      	bmi.n	80056fa <_printf_i+0x186>
 80056f4:	065f      	lsls	r7, r3, #25
 80056f6:	bf48      	it	mi
 80056f8:	b2ad      	uxthmi	r5, r5
 80056fa:	6031      	str	r1, [r6, #0]
 80056fc:	07d9      	lsls	r1, r3, #31
 80056fe:	bf44      	itt	mi
 8005700:	f043 0320 	orrmi.w	r3, r3, #32
 8005704:	6023      	strmi	r3, [r4, #0]
 8005706:	b11d      	cbz	r5, 8005710 <_printf_i+0x19c>
 8005708:	2310      	movs	r3, #16
 800570a:	e7ad      	b.n	8005668 <_printf_i+0xf4>
 800570c:	4826      	ldr	r0, [pc, #152]	@ (80057a8 <_printf_i+0x234>)
 800570e:	e7e9      	b.n	80056e4 <_printf_i+0x170>
 8005710:	6823      	ldr	r3, [r4, #0]
 8005712:	f023 0320 	bic.w	r3, r3, #32
 8005716:	6023      	str	r3, [r4, #0]
 8005718:	e7f6      	b.n	8005708 <_printf_i+0x194>
 800571a:	4616      	mov	r6, r2
 800571c:	e7bd      	b.n	800569a <_printf_i+0x126>
 800571e:	6833      	ldr	r3, [r6, #0]
 8005720:	6825      	ldr	r5, [r4, #0]
 8005722:	6961      	ldr	r1, [r4, #20]
 8005724:	1d18      	adds	r0, r3, #4
 8005726:	6030      	str	r0, [r6, #0]
 8005728:	062e      	lsls	r6, r5, #24
 800572a:	681b      	ldr	r3, [r3, #0]
 800572c:	d501      	bpl.n	8005732 <_printf_i+0x1be>
 800572e:	6019      	str	r1, [r3, #0]
 8005730:	e002      	b.n	8005738 <_printf_i+0x1c4>
 8005732:	0668      	lsls	r0, r5, #25
 8005734:	d5fb      	bpl.n	800572e <_printf_i+0x1ba>
 8005736:	8019      	strh	r1, [r3, #0]
 8005738:	2300      	movs	r3, #0
 800573a:	6123      	str	r3, [r4, #16]
 800573c:	4616      	mov	r6, r2
 800573e:	e7bc      	b.n	80056ba <_printf_i+0x146>
 8005740:	6833      	ldr	r3, [r6, #0]
 8005742:	1d1a      	adds	r2, r3, #4
 8005744:	6032      	str	r2, [r6, #0]
 8005746:	681e      	ldr	r6, [r3, #0]
 8005748:	6862      	ldr	r2, [r4, #4]
 800574a:	2100      	movs	r1, #0
 800574c:	4630      	mov	r0, r6
 800574e:	f7fa fd5f 	bl	8000210 <memchr>
 8005752:	b108      	cbz	r0, 8005758 <_printf_i+0x1e4>
 8005754:	1b80      	subs	r0, r0, r6
 8005756:	6060      	str	r0, [r4, #4]
 8005758:	6863      	ldr	r3, [r4, #4]
 800575a:	6123      	str	r3, [r4, #16]
 800575c:	2300      	movs	r3, #0
 800575e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005762:	e7aa      	b.n	80056ba <_printf_i+0x146>
 8005764:	6923      	ldr	r3, [r4, #16]
 8005766:	4632      	mov	r2, r6
 8005768:	4649      	mov	r1, r9
 800576a:	4640      	mov	r0, r8
 800576c:	47d0      	blx	sl
 800576e:	3001      	adds	r0, #1
 8005770:	d0ad      	beq.n	80056ce <_printf_i+0x15a>
 8005772:	6823      	ldr	r3, [r4, #0]
 8005774:	079b      	lsls	r3, r3, #30
 8005776:	d413      	bmi.n	80057a0 <_printf_i+0x22c>
 8005778:	68e0      	ldr	r0, [r4, #12]
 800577a:	9b03      	ldr	r3, [sp, #12]
 800577c:	4298      	cmp	r0, r3
 800577e:	bfb8      	it	lt
 8005780:	4618      	movlt	r0, r3
 8005782:	e7a6      	b.n	80056d2 <_printf_i+0x15e>
 8005784:	2301      	movs	r3, #1
 8005786:	4632      	mov	r2, r6
 8005788:	4649      	mov	r1, r9
 800578a:	4640      	mov	r0, r8
 800578c:	47d0      	blx	sl
 800578e:	3001      	adds	r0, #1
 8005790:	d09d      	beq.n	80056ce <_printf_i+0x15a>
 8005792:	3501      	adds	r5, #1
 8005794:	68e3      	ldr	r3, [r4, #12]
 8005796:	9903      	ldr	r1, [sp, #12]
 8005798:	1a5b      	subs	r3, r3, r1
 800579a:	42ab      	cmp	r3, r5
 800579c:	dcf2      	bgt.n	8005784 <_printf_i+0x210>
 800579e:	e7eb      	b.n	8005778 <_printf_i+0x204>
 80057a0:	2500      	movs	r5, #0
 80057a2:	f104 0619 	add.w	r6, r4, #25
 80057a6:	e7f5      	b.n	8005794 <_printf_i+0x220>
 80057a8:	080058ed 	.word	0x080058ed
 80057ac:	080058fe 	.word	0x080058fe

080057b0 <memmove>:
 80057b0:	4288      	cmp	r0, r1
 80057b2:	b510      	push	{r4, lr}
 80057b4:	eb01 0402 	add.w	r4, r1, r2
 80057b8:	d902      	bls.n	80057c0 <memmove+0x10>
 80057ba:	4284      	cmp	r4, r0
 80057bc:	4623      	mov	r3, r4
 80057be:	d807      	bhi.n	80057d0 <memmove+0x20>
 80057c0:	1e43      	subs	r3, r0, #1
 80057c2:	42a1      	cmp	r1, r4
 80057c4:	d008      	beq.n	80057d8 <memmove+0x28>
 80057c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80057ca:	f803 2f01 	strb.w	r2, [r3, #1]!
 80057ce:	e7f8      	b.n	80057c2 <memmove+0x12>
 80057d0:	4402      	add	r2, r0
 80057d2:	4601      	mov	r1, r0
 80057d4:	428a      	cmp	r2, r1
 80057d6:	d100      	bne.n	80057da <memmove+0x2a>
 80057d8:	bd10      	pop	{r4, pc}
 80057da:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80057de:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80057e2:	e7f7      	b.n	80057d4 <memmove+0x24>

080057e4 <_sbrk_r>:
 80057e4:	b538      	push	{r3, r4, r5, lr}
 80057e6:	4d06      	ldr	r5, [pc, #24]	@ (8005800 <_sbrk_r+0x1c>)
 80057e8:	2300      	movs	r3, #0
 80057ea:	4604      	mov	r4, r0
 80057ec:	4608      	mov	r0, r1
 80057ee:	602b      	str	r3, [r5, #0]
 80057f0:	f7fb fdfe 	bl	80013f0 <_sbrk>
 80057f4:	1c43      	adds	r3, r0, #1
 80057f6:	d102      	bne.n	80057fe <_sbrk_r+0x1a>
 80057f8:	682b      	ldr	r3, [r5, #0]
 80057fa:	b103      	cbz	r3, 80057fe <_sbrk_r+0x1a>
 80057fc:	6023      	str	r3, [r4, #0]
 80057fe:	bd38      	pop	{r3, r4, r5, pc}
 8005800:	2000059c 	.word	0x2000059c

08005804 <_realloc_r>:
 8005804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005808:	4607      	mov	r7, r0
 800580a:	4614      	mov	r4, r2
 800580c:	460d      	mov	r5, r1
 800580e:	b921      	cbnz	r1, 800581a <_realloc_r+0x16>
 8005810:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005814:	4611      	mov	r1, r2
 8005816:	f7ff bc5b 	b.w	80050d0 <_malloc_r>
 800581a:	b92a      	cbnz	r2, 8005828 <_realloc_r+0x24>
 800581c:	f7ff fbec 	bl	8004ff8 <_free_r>
 8005820:	4625      	mov	r5, r4
 8005822:	4628      	mov	r0, r5
 8005824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005828:	f000 f81a 	bl	8005860 <_malloc_usable_size_r>
 800582c:	4284      	cmp	r4, r0
 800582e:	4606      	mov	r6, r0
 8005830:	d802      	bhi.n	8005838 <_realloc_r+0x34>
 8005832:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005836:	d8f4      	bhi.n	8005822 <_realloc_r+0x1e>
 8005838:	4621      	mov	r1, r4
 800583a:	4638      	mov	r0, r7
 800583c:	f7ff fc48 	bl	80050d0 <_malloc_r>
 8005840:	4680      	mov	r8, r0
 8005842:	b908      	cbnz	r0, 8005848 <_realloc_r+0x44>
 8005844:	4645      	mov	r5, r8
 8005846:	e7ec      	b.n	8005822 <_realloc_r+0x1e>
 8005848:	42b4      	cmp	r4, r6
 800584a:	4622      	mov	r2, r4
 800584c:	4629      	mov	r1, r5
 800584e:	bf28      	it	cs
 8005850:	4632      	movcs	r2, r6
 8005852:	f7ff fbc3 	bl	8004fdc <memcpy>
 8005856:	4629      	mov	r1, r5
 8005858:	4638      	mov	r0, r7
 800585a:	f7ff fbcd 	bl	8004ff8 <_free_r>
 800585e:	e7f1      	b.n	8005844 <_realloc_r+0x40>

08005860 <_malloc_usable_size_r>:
 8005860:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005864:	1f18      	subs	r0, r3, #4
 8005866:	2b00      	cmp	r3, #0
 8005868:	bfbc      	itt	lt
 800586a:	580b      	ldrlt	r3, [r1, r0]
 800586c:	18c0      	addlt	r0, r0, r3
 800586e:	4770      	bx	lr

08005870 <_init>:
 8005870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005872:	bf00      	nop
 8005874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005876:	bc08      	pop	{r3}
 8005878:	469e      	mov	lr, r3
 800587a:	4770      	bx	lr

0800587c <_fini>:
 800587c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800587e:	bf00      	nop
 8005880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005882:	bc08      	pop	{r3}
 8005884:	469e      	mov	lr, r3
 8005886:	4770      	bx	lr
